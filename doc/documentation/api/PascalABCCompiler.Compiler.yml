### YamlMime:ManagedReference
items:
- uid: PascalABCCompiler.Compiler
  commentId: T:PascalABCCompiler.Compiler
  id: Compiler
  parent: PascalABCCompiler
  children:
  - PascalABCCompiler.Compiler.#ctor
  - PascalABCCompiler.Compiler.#ctor(PascalABCCompiler.ICompiler,PascalABCCompiler.SourceFilesProviderDelegate,PascalABCCompiler.ChangeCompilerStateEventDelegate)
  - PascalABCCompiler.Compiler.#ctor(PascalABCCompiler.SourceFilesProviderDelegate,PascalABCCompiler.ChangeCompilerStateEventDelegate)
  - PascalABCCompiler.Compiler.AddCodeGenerationErrorToErrorList(System.Exception)
  - PascalABCCompiler.Compiler.AddCurrentUnitAndItsReferencesToUsesLists(PascalABCCompiler.TreeRealization.unit_node_list,System.Collections.Generic.Dictionary{PascalABCCompiler.TreeRealization.unit_node,PascalABCCompiler.CompilationUnit},PascalABCCompiler.SyntaxTree.unit_or_namespace,PascalABCCompiler.CompilationUnit,PascalABCCompiler.TreeRealization.unit_node_list)
  - PascalABCCompiler.Compiler.AddDeclarationsAndReferencedUnitsToNamespaces(System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace},System.String,PascalABCCompiler.SyntaxTree.unit_module,PascalABCCompiler.SyntaxTree.syntax_namespace_node)
  - PascalABCCompiler.Compiler.AddDocumentationToNodes(PascalABCCompiler.CompilationUnit,System.String)
  - PascalABCCompiler.Compiler.AddErrorToErrorListConsideringPosition(PascalABCCompiler.Errors.Error)
  - PascalABCCompiler.Compiler.AddInternalErrorToErrorList(PascalABCCompiler.Errors.CompilerInternalError)
  - PascalABCCompiler.Compiler.AddNamespacesToMainDefinitions(PascalABCCompiler.SyntaxTree.unit_module,PascalABCCompiler.SyntaxTree.program_module,System.Collections.Generic.Dictionary{System.String,PascalABCCompiler.SyntaxTree.syntax_namespace_node})
  - PascalABCCompiler.Compiler.AddNamespacesToMainUsesList(PascalABCCompiler.SyntaxTree.unit_module,PascalABCCompiler.SyntaxTree.program_module,System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace})
  - PascalABCCompiler.Compiler.AddNamespacesToUsingList(PascalABCCompiler.TreeRealization.using_namespace_list,PascalABCCompiler.SyntaxTree.using_list)
  - PascalABCCompiler.Compiler.AddNamespacesToUsingList(PascalABCCompiler.TreeRealization.using_namespace_list,System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace},System.Boolean,System.Collections.Generic.Dictionary{System.String,PascalABCCompiler.SyntaxTree.syntax_namespace_node})
  - PascalABCCompiler.Compiler.AddReferencesToNetSystemLibraries(PascalABCCompiler.CompilationUnit,System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.compiler_directive})
  - PascalABCCompiler.Compiler.AddReferencesToNetSystemLibraries(PascalABCCompiler.CompilationUnit,System.Collections.Generic.List{PascalABCCompiler.TreeRealization.compiler_directive})
  - PascalABCCompiler.Compiler.AddStandardUnitsToInterfaceUsesSection(PascalABCCompiler.CompilationUnit)
  - PascalABCCompiler.Compiler.AddWarnings(System.Collections.Generic.List{PascalABCCompiler.Errors.CompilerWarning})
  - PascalABCCompiler.Compiler.AsyncClosePCUWriters
  - PascalABCCompiler.Compiler.BadNodesInSyntaxTree
  - PascalABCCompiler.Compiler.Banner
  - PascalABCCompiler.Compiler.BeginOffset
  - PascalABCCompiler.Compiler.CalculateLinesCompiled(System.Collections.Generic.List{PascalABCCompiler.Errors.Error},PascalABCCompiler.SyntaxTree.compilation_unit)
  - PascalABCCompiler.Compiler.CalculatePascalProgramHealth(PascalABCCompiler.SyntaxTree.compilation_unit)
  - PascalABCCompiler.Compiler.ChangeCompilerStateEvent(PascalABCCompiler.ICompiler,PascalABCCompiler.CompilerState,System.String)
  - PascalABCCompiler.Compiler.CheckErrorsAndThrowTheFirstOne
  - PascalABCCompiler.Compiler.CheckForDuplicatesInUsesSection(System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace})
  - PascalABCCompiler.Compiler.CheckForRTLErrorsAndClearAllErrorsIfFound
  - PascalABCCompiler.Compiler.CheckPathValid(System.String)
  - PascalABCCompiler.Compiler.ClearAfterCompilation
  - PascalABCCompiler.Compiler.ClearAll(System.Boolean)
  - PascalABCCompiler.Compiler.ClosePCUReadersAndWriters
  - PascalABCCompiler.Compiler.ClosePCUWriters
  - PascalABCCompiler.Compiler.CodeGeneratorsController
  - PascalABCCompiler.Compiler.CombinePathsRelatively(System.String,System.String)
  - PascalABCCompiler.Compiler.Compile
  - PascalABCCompiler.Compiler.Compile(PascalABCCompiler.CompilerOptions)
  - PascalABCCompiler.Compiler.CompileCS
  - PascalABCCompiler.Compiler.CompileCurrentUnitImplementation(System.String,PascalABCCompiler.CompilationUnit,System.Collections.Generic.Dictionary{PascalABCCompiler.SyntaxTree.syntax_tree_node,System.String})
  - PascalABCCompiler.Compiler.CompileCurrentUnitInterface(System.String,PascalABCCompiler.CompilationUnit,System.Collections.Generic.Dictionary{PascalABCCompiler.SyntaxTree.syntax_tree_node,System.String})
  - PascalABCCompiler.Compiler.CompileImplementationDependencies(System.String,PascalABCCompiler.CompilationUnit,System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace},System.Collections.Generic.Dictionary{System.String,PascalABCCompiler.SyntaxTree.syntax_namespace_node},PascalABCCompiler.TreeRealization.common_unit_node,System.Boolean@)
  - PascalABCCompiler.Compiler.CompileInterfaceDependencies(PascalABCCompiler.TreeRealization.unit_node_list,System.Collections.Generic.Dictionary{PascalABCCompiler.TreeRealization.unit_node,PascalABCCompiler.CompilationUnit},PascalABCCompiler.SyntaxTree.unit_or_namespace,System.String,System.String,PascalABCCompiler.CompilationUnit,System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace},PascalABCCompiler.TreeRealization.unit_node_list,System.Collections.Generic.Dictionary{System.String,PascalABCCompiler.SyntaxTree.syntax_namespace_node},System.Boolean@)
  - PascalABCCompiler.Compiler.CompileReference(PascalABCCompiler.TreeRealization.unit_node_list,PascalABCCompiler.TreeRealization.compiler_directive)
  - PascalABCCompiler.Compiler.CompileUnit(PascalABCCompiler.TreeRealization.unit_node_list,System.Collections.Generic.Dictionary{PascalABCCompiler.TreeRealization.unit_node,PascalABCCompiler.CompilationUnit},PascalABCCompiler.SyntaxTree.unit_or_namespace,System.String)
  - PascalABCCompiler.Compiler.CompileUnitsFromDelayedList
  - PascalABCCompiler.Compiler.CompiledVariables
  - PascalABCCompiler.Compiler.CompilerOptions
  - PascalABCCompiler.Compiler.CompilerType
  - PascalABCCompiler.Compiler.ConstructMainSemanticTree(PascalABCCompiler.NETGenerator.CompilerOptions)
  - PascalABCCompiler.Compiler.ConstructSyntaxTree(System.String,PascalABCCompiler.CompilationUnit,System.String)
  - PascalABCCompiler.Compiler.ConstructSyntaxTreeAndRunSugarConversions(System.String,PascalABCCompiler.CompilationUnit,System.Collections.Generic.Dictionary{PascalABCCompiler.SyntaxTree.syntax_tree_node,System.String}@)
  - PascalABCCompiler.Compiler.ConvertSyntaxTree(PascalABCCompiler.SyntaxTree.compilation_unit,System.Collections.Generic.List{PascalABCCompiler.SyntaxTreeConverters.ISyntaxTreeConverter})
  - PascalABCCompiler.Compiler.CreateDependencyListsForCurrentUnit(PascalABCCompiler.CompilationUnit,System.String,System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace}@,PascalABCCompiler.TreeRealization.unit_node_list@,System.Collections.Generic.Dictionary{System.String,PascalABCCompiler.SyntaxTree.syntax_namespace_node}@)
  - PascalABCCompiler.Compiler.CurrentUnitIsNotMainProgram
  - PascalABCCompiler.Compiler.DLLCache
  - PascalABCCompiler.Compiler.DebugOutputFileCreationUsingPDB
  - PascalABCCompiler.Compiler.DisablePABCRtlIfUsingDotnet5(System.Collections.Generic.List{PascalABCCompiler.TreeRealization.compiler_directive})
  - PascalABCCompiler.Compiler.ErrorsList
  - PascalABCCompiler.Compiler.FillNetCompilerOptionsFromCompilerDirectives(PascalABCCompiler.NETGenerator.CompilerOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{PascalABCCompiler.TreeRealization.compiler_directive}})
  - PascalABCCompiler.Compiler.FillNetCompilerOptionsFromProject(PascalABCCompiler.NETGenerator.CompilerOptions)
  - PascalABCCompiler.Compiler.FindFileWithExtensionInDirs(System.String,System.Int32@,System.String[])
  - PascalABCCompiler.Compiler.FindPCUFileName(System.String,System.String,System.Int32@)
  - PascalABCCompiler.Compiler.FindPositionForSemanticErrorInTheErrorList(PascalABCCompiler.Errors.Error)
  - PascalABCCompiler.Compiler.FindSourceFileName(System.String,System.String,System.Int32@)
  - PascalABCCompiler.Compiler.FindSourceFileNameInDirs(System.String,System.Int32@,System.String[])
  - PascalABCCompiler.Compiler.Free
  - PascalABCCompiler.Compiler.GenUnitDocumentation(PascalABCCompiler.CompilationUnit,System.String)
  - PascalABCCompiler.Compiler.GenerateILCode(PascalABCCompiler.TreeRealization.program_node,PascalABCCompiler.NETGenerator.CompilerOptions,System.Collections.Generic.List{System.String})
  - PascalABCCompiler.Compiler.GetCompilerDirectives(System.Collections.Generic.List{PascalABCCompiler.CompilationUnit})
  - PascalABCCompiler.Compiler.GetDirectivesAsSemanticNodes(System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.compiler_directive},System.String)
  - PascalABCCompiler.Compiler.GetImplementationSyntaxUsingList(PascalABCCompiler.SyntaxTree.compilation_unit)
  - PascalABCCompiler.Compiler.GetImplementationUsesSection(PascalABCCompiler.SyntaxTree.compilation_unit)
  - PascalABCCompiler.Compiler.GetIncludedFilesFromDirectives(PascalABCCompiler.CompilationUnit,System.Collections.Generic.List{PascalABCCompiler.TreeRealization.compiler_directive})
  - PascalABCCompiler.Compiler.GetInterfaceUsesSection(PascalABCCompiler.SyntaxTree.compilation_unit)
  - PascalABCCompiler.Compiler.GetInterfaceUsingList(PascalABCCompiler.SyntaxTree.compilation_unit)
  - PascalABCCompiler.Compiler.GetLocationFromTreenode(PascalABCCompiler.SyntaxTree.syntax_tree_node,System.String)
  - PascalABCCompiler.Compiler.GetNamespace(PascalABCCompiler.SyntaxTree.unit_or_namespace)
  - PascalABCCompiler.Compiler.GetNamespace(PascalABCCompiler.TreeRealization.using_namespace_list,System.String,PascalABCCompiler.SyntaxTree.unit_or_namespace,System.Boolean,System.Collections.Generic.Dictionary{System.String,PascalABCCompiler.SyntaxTree.syntax_namespace_node})
  - PascalABCCompiler.Compiler.GetNamespaceSyntaxTree(System.String)
  - PascalABCCompiler.Compiler.GetReferenceFileName(System.String,PascalABCCompiler.SyntaxTree.SourceContext,System.String,System.Boolean)
  - PascalABCCompiler.Compiler.GetReferenceFileName(System.String,System.String)
  - PascalABCCompiler.Compiler.GetReferences(PascalABCCompiler.CompilationUnit)
  - PascalABCCompiler.Compiler.GetResourceFilesFromCompilerDirectives(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{PascalABCCompiler.TreeRealization.compiler_directive}})
  - PascalABCCompiler.Compiler.GetSourceCode(System.String,PascalABCCompiler.CompilationUnit)
  - PascalABCCompiler.Compiler.GetSourceContext(PascalABCCompiler.TreeRealization.compiler_directive)
  - PascalABCCompiler.Compiler.GetSourceFileText(System.String)
  - PascalABCCompiler.Compiler.GetUnitFileName(PascalABCCompiler.SyntaxTree.unit_or_namespace,System.String)
  - PascalABCCompiler.Compiler.GetUnitFileName(System.String,System.String,System.String,PascalABCCompiler.SyntaxTree.SourceContext)
  - PascalABCCompiler.Compiler.GetUnitFileNameCache
  - PascalABCCompiler.Compiler.GetUnitPath(PascalABCCompiler.CompilationUnit,PascalABCCompiler.CompilationUnit)
  - PascalABCCompiler.Compiler.HasIncludeNamespaceDirective(PascalABCCompiler.CompilationUnit)
  - PascalABCCompiler.Compiler.HasOnlySyntaxErrors(System.Collections.Generic.List{PascalABCCompiler.Errors.Error})
  - PascalABCCompiler.Compiler.InitializeCompilerOptionsRelatedToStandardUnits(PascalABCCompiler.SyntaxTree.compilation_unit)
  - PascalABCCompiler.Compiler.InitializeNewUnit(System.String,System.String,PascalABCCompiler.CompilationUnit@,System.Collections.Generic.Dictionary{PascalABCCompiler.SyntaxTree.syntax_tree_node,System.String}@)
  - PascalABCCompiler.Compiler.InitializeProjectInfoAndFillCompilerOptionsFromIt
  - PascalABCCompiler.Compiler.InternalDebug
  - PascalABCCompiler.Compiler.InternalParseText(Languages.Facade.ILanguage,System.String,System.String,System.Collections.Generic.List{PascalABCCompiler.Errors.Error},System.Collections.Generic.List{PascalABCCompiler.Errors.CompilerWarning},System.Collections.Generic.List{System.String},System.Boolean)
  - PascalABCCompiler.Compiler.IsDll(PascalABCCompiler.SyntaxTree.compilation_unit)
  - PascalABCCompiler.Compiler.IsDll(PascalABCCompiler.SyntaxTree.compilation_unit,PascalABCCompiler.SyntaxTree.compiler_directive@)
  - PascalABCCompiler.Compiler.IsDocumentationNeeded(PascalABCCompiler.SyntaxTree.compilation_unit)
  - PascalABCCompiler.Compiler.IsPossibleNetNamespaceOrStandardPasFile(PascalABCCompiler.SyntaxTree.unit_or_namespace,System.Boolean,System.String)
  - PascalABCCompiler.Compiler.LanguageProvider
  - PascalABCCompiler.Compiler.LinesCompiled
  - PascalABCCompiler.Compiler.MatchSyntaxErrorsToBadNodes(PascalABCCompiler.CompilationUnit)
  - PascalABCCompiler.Compiler.NeedRecompiled(System.String,System.String[],PascalABCCompiler.PCU.PCUReader)
  - PascalABCCompiler.Compiler.OnChangeCompilerState
  - PascalABCCompiler.Compiler.PABCCodeHealth
  - PascalABCCompiler.Compiler.PCUFileNamesDictionary
  - PascalABCCompiler.Compiler.PCUReadersAndWritersClosed
  - PascalABCCompiler.Compiler.ParseText(System.String,System.String,System.Collections.Generic.List{PascalABCCompiler.Errors.Error},System.Collections.Generic.List{PascalABCCompiler.Errors.CompilerWarning})
  - PascalABCCompiler.Compiler.PrebuildMainSemanticTreeActions(PascalABCCompiler.NETGenerator.CompilerOptions@,System.Collections.Generic.List{System.String}@)
  - PascalABCCompiler.Compiler.PreloadReference(PascalABCCompiler.TreeRealization.compiler_directive)
  - PascalABCCompiler.Compiler.PrepareFinalMainFunctionForExe(PascalABCCompiler.TreeRealization.program_node)
  - PascalABCCompiler.Compiler.PrepareUserNamespacesUsedInTheCurrentUnit(PascalABCCompiler.CompilationUnit)
  - PascalABCCompiler.Compiler.ReadDLL(System.String,PascalABCCompiler.SyntaxTree.SourceContext)
  - PascalABCCompiler.Compiler.ReadPCU(System.String)
  - PascalABCCompiler.Compiler.RecompileList
  - PascalABCCompiler.Compiler.Reload
  - PascalABCCompiler.Compiler.Reset
  - PascalABCCompiler.Compiler.RunSemanticChecks(System.String,PascalABCCompiler.CompilationUnit)
  - PascalABCCompiler.Compiler.SaveDocumentationsForUnits
  - PascalABCCompiler.Compiler.SavePCU(PascalABCCompiler.CompilationUnit)
  - PascalABCCompiler.Compiler.SaveUnitCheckInParsers
  - PascalABCCompiler.Compiler.SemanticCheckCurrentUnitMustBeUnitModule(System.String,PascalABCCompiler.CompilationUnit,System.Boolean)
  - PascalABCCompiler.Compiler.SemanticCheckDLLDirectiveOnlyForLibraries(PascalABCCompiler.SyntaxTree.compilation_unit,System.Boolean,PascalABCCompiler.SyntaxTree.compiler_directive)
  - PascalABCCompiler.Compiler.SemanticCheckDisableStandardUnitsDirectiveInUnit(PascalABCCompiler.SyntaxTree.compilation_unit)
  - PascalABCCompiler.Compiler.SemanticCheckIsUserNamespace(PascalABCCompiler.SyntaxTree.compilation_unit)
  - PascalABCCompiler.Compiler.SemanticCheckNamespacesOnlyInProjects(PascalABCCompiler.CompilationUnit)
  - PascalABCCompiler.Compiler.SemanticCheckNoIncludeNamespaceDirectivesInUnit(PascalABCCompiler.CompilationUnit)
  - PascalABCCompiler.Compiler.SemanticCheckNoLoopDependenciesOfInterfaces(PascalABCCompiler.CompilationUnit,System.String,PascalABCCompiler.SyntaxTree.unit_or_namespace,System.String)
  - PascalABCCompiler.Compiler.SemanticCheckUsesInIsNotNamespace(PascalABCCompiler.SyntaxTree.unit_or_namespace,PascalABCCompiler.CompilationUnit)
  - PascalABCCompiler.Compiler.SemanticTree
  - PascalABCCompiler.Compiler.SemanticTreeConvertersController
  - PascalABCCompiler.Compiler.SetOutputFileTypeOption(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{PascalABCCompiler.TreeRealization.compiler_directive}})
  - PascalABCCompiler.Compiler.SetOutputPlatformOption(PascalABCCompiler.NETGenerator.CompilerOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{PascalABCCompiler.TreeRealization.compiler_directive}})
  - PascalABCCompiler.Compiler.SetSupportedProjectFiles
  - PascalABCCompiler.Compiler.SetSupportedSourceFiles
  - PascalABCCompiler.Compiler.SetTargetTypeOption(PascalABCCompiler.NETGenerator.CompilerOptions)
  - PascalABCCompiler.Compiler.SetUseDLLForSystemUnits(System.String,System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace},System.Int32)
  - PascalABCCompiler.Compiler.ShortVersion
  - PascalABCCompiler.Compiler.SourceFileExists(System.String)
  - PascalABCCompiler.Compiler.SourceFileGetLastWriteTime(System.String)
  - PascalABCCompiler.Compiler.SourceFileNamesDictionary
  - PascalABCCompiler.Compiler.SourceFilesProvider
  - PascalABCCompiler.Compiler.StandardModules
  - PascalABCCompiler.Compiler.StartCompile
  - PascalABCCompiler.Compiler.State
  - PascalABCCompiler.Compiler.SupportedProjectFiles
  - PascalABCCompiler.Compiler.SupportedSourceFiles
  - PascalABCCompiler.Compiler.SyntaxTreeToSemanticTreeConverter
  - PascalABCCompiler.Compiler.ToString
  - PascalABCCompiler.Compiler.TryThrowInvalidPath(System.String,PascalABCCompiler.SyntaxTree.SourceContext)
  - PascalABCCompiler.Compiler.UnitHasPCU(PascalABCCompiler.TreeRealization.unit_node_list,System.Collections.Generic.Dictionary{PascalABCCompiler.TreeRealization.unit_node,PascalABCCompiler.CompilationUnit},PascalABCCompiler.SyntaxTree.unit_or_namespace,System.String@,PascalABCCompiler.CompilationUnit@)
  - PascalABCCompiler.Compiler.UnitTable
  - PascalABCCompiler.Compiler.UnitsToCompileDelayedList
  - PascalABCCompiler.Compiler.UnitsTopologicallySortedList
  - PascalABCCompiler.Compiler.VarBeginOffset
  - PascalABCCompiler.Compiler.Version
  - PascalABCCompiler.Compiler.VersionDateTime
  - PascalABCCompiler.Compiler.WaitCallback_ClosePCUWriters(System.Object)
  - PascalABCCompiler.Compiler.Warnings
  - PascalABCCompiler.Compiler._clear_after_compilation
  - PascalABCCompiler.Compiler.assemblyResolveScope
  - PascalABCCompiler.Compiler.beginOffset
  - PascalABCCompiler.Compiler.buildImplementationUsesList(PascalABCCompiler.CompilationUnit)
  - PascalABCCompiler.Compiler.currentCompilationUnit
  - PascalABCCompiler.Compiler.errorsList
  - PascalABCCompiler.Compiler.firstCompilationUnit
  - PascalABCCompiler.Compiler.get_assembly_path(System.String,System.Boolean)
  - PascalABCCompiler.Compiler.get_standart_assembly_path(System.String)
  - PascalABCCompiler.Compiler.internalDebug
  - PascalABCCompiler.Compiler.linesCompiled
  - PascalABCCompiler.Compiler.pABCCodeHealth
  - PascalABCCompiler.Compiler.pcuCompilationUnits
  - PascalABCCompiler.Compiler.pr_ChangeState(System.Object,PascalABCCompiler.PCU.PCUReaderWriterState,System.Object)
  - PascalABCCompiler.Compiler.project
  - PascalABCCompiler.Compiler.semanticTree
  - PascalABCCompiler.Compiler.semanticTreeConvertersController
  - PascalABCCompiler.Compiler.semanticTreeConvertersController_ChangeState(PascalABCCompiler.SemanticTreeConverters.SemanticTreeConvertersController.State,PascalABCCompiler.SemanticTreeConverters.ISemanticTreeConverter)
  - PascalABCCompiler.Compiler.sourceFilesProvider
  - PascalABCCompiler.Compiler.standartAssemblyPath
  - PascalABCCompiler.Compiler.standart_assembly_dict
  - PascalABCCompiler.Compiler.state
  - PascalABCCompiler.Compiler.supportedProjectFiles
  - PascalABCCompiler.Compiler.supportedSourceFiles
  - PascalABCCompiler.Compiler.unitTable
  - PascalABCCompiler.Compiler.varBeginOffset
  - PascalABCCompiler.Compiler.warnings
  langs:
  - csharp
  - vb
  name: Compiler
  nameWithType: Compiler
  fullName: PascalABCCompiler.Compiler
  type: Class
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: 'public class Compiler : MarshalByRefObject, ICompiler'
    content.vb: Public Class Compiler Inherits MarshalByRefObject Implements ICompiler
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - PascalABCCompiler.ICompiler
  inheritedMembers:
  - System.MarshalByRefObject.__identity
  - System.MarshalByRefObject.GetComIUnknown(System.Boolean)
  - System.MarshalByRefObject.GetComIUnknown(System.MarshalByRefObject)
  - System.MarshalByRefObject.IsInstanceOfType(System.Type)
  - System.MarshalByRefObject.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.MarshalByRefObject.GetIdentity(System.MarshalByRefObject,System.Boolean@)
  - System.MarshalByRefObject.GetIdentity(System.MarshalByRefObject)
  - System.MarshalByRefObject.__RaceSetServerIdentity(System.Runtime.Remoting.ServerIdentity)
  - System.MarshalByRefObject.__ResetServerIdentity
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.CanCastToXmlType(System.String,System.String)
  - System.MarshalByRefObject.CanCastToXmlTypeHelper(System.RuntimeType,System.MarshalByRefObject)
  - System.MarshalByRefObject.Identity
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.FieldSetter(System.String,System.String,System.Object)
  - System.Object.FieldGetter(System.String,System.String,System.Object@)
  - System.Object.GetFieldInfo(System.String,System.String)
- uid: PascalABCCompiler.Compiler.pABCCodeHealth
  commentId: F:PascalABCCompiler.Compiler.pABCCodeHealth
  id: pABCCodeHealth
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: pABCCodeHealth
  nameWithType: Compiler.pABCCodeHealth
  fullName: PascalABCCompiler.Compiler.pABCCodeHealth
  type: Field
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private int pABCCodeHealth
    return:
      type: System.Int32
    content.vb: Private pABCCodeHealth As Integer
- uid: PascalABCCompiler.Compiler.semanticTreeConvertersController
  commentId: F:PascalABCCompiler.Compiler.semanticTreeConvertersController
  id: semanticTreeConvertersController
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: semanticTreeConvertersController
  nameWithType: Compiler.semanticTreeConvertersController
  fullName: PascalABCCompiler.Compiler.semanticTreeConvertersController
  type: Field
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private SemanticTreeConvertersController semanticTreeConvertersController
    return:
      type: PascalABCCompiler.SemanticTreeConverters.SemanticTreeConvertersController
    content.vb: Private semanticTreeConvertersController As SemanticTreeConvertersController
- uid: PascalABCCompiler.Compiler.BadNodesInSyntaxTree
  commentId: F:PascalABCCompiler.Compiler.BadNodesInSyntaxTree
  id: BadNodesInSyntaxTree
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: BadNodesInSyntaxTree
  nameWithType: Compiler.BadNodesInSyntaxTree
  fullName: PascalABCCompiler.Compiler.BadNodesInSyntaxTree
  type: Field
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private Hashtable BadNodesInSyntaxTree
    return:
      type: System.Collections.Hashtable
    content.vb: Private BadNodesInSyntaxTree As Hashtable
- uid: PascalABCCompiler.Compiler.semanticTree
  commentId: F:PascalABCCompiler.Compiler.semanticTree
  id: semanticTree
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: semanticTree
  nameWithType: Compiler.semanticTree
  fullName: PascalABCCompiler.Compiler.semanticTree
  type: Field
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private program_node semanticTree
    return:
      type: PascalABCCompiler.TreeRealization.program_node
    content.vb: Private semanticTree As program_node
- uid: PascalABCCompiler.Compiler.CompiledVariables
  commentId: F:PascalABCCompiler.Compiler.CompiledVariables
  id: CompiledVariables
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: CompiledVariables
  nameWithType: Compiler.CompiledVariables
  fullName: PascalABCCompiler.Compiler.CompiledVariables
  type: Field
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public List<var_definition_node> CompiledVariables
    return:
      type: System.Collections.Generic.List{PascalABCCompiler.TreeRealization.var_definition_node}
    content.vb: Public CompiledVariables As List(Of var_definition_node)
- uid: PascalABCCompiler.Compiler.linesCompiled
  commentId: F:PascalABCCompiler.Compiler.linesCompiled
  id: linesCompiled
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: linesCompiled
  nameWithType: Compiler.linesCompiled
  fullName: PascalABCCompiler.Compiler.linesCompiled
  type: Field
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private uint linesCompiled
    return:
      type: System.UInt32
    content.vb: Private linesCompiled As UInteger
- uid: PascalABCCompiler.Compiler.internalDebug
  commentId: F:PascalABCCompiler.Compiler.internalDebug
  id: internalDebug
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: internalDebug
  nameWithType: Compiler.internalDebug
  fullName: PascalABCCompiler.Compiler.internalDebug
  type: Field
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private CompilerInternalDebug internalDebug
    return:
      type: PascalABCCompiler.CompilerInternalDebug
    content.vb: Private internalDebug As CompilerInternalDebug
- uid: PascalABCCompiler.Compiler.state
  commentId: F:PascalABCCompiler.Compiler.state
  id: state
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: state
  nameWithType: Compiler.state
  fullName: PascalABCCompiler.Compiler.state
  type: Field
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private CompilerState state
    return:
      type: PascalABCCompiler.CompilerState
    content.vb: Private state As CompilerState
- uid: PascalABCCompiler.Compiler.supportedSourceFiles
  commentId: F:PascalABCCompiler.Compiler.supportedSourceFiles
  id: supportedSourceFiles
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: supportedSourceFiles
  nameWithType: Compiler.supportedSourceFiles
  fullName: PascalABCCompiler.Compiler.supportedSourceFiles
  type: Field
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private SupportedSourceFile[] supportedSourceFiles
    return:
      type: PascalABCCompiler.SupportedSourceFile[]
    content.vb: Private supportedSourceFiles As SupportedSourceFile()
- uid: PascalABCCompiler.Compiler.supportedProjectFiles
  commentId: F:PascalABCCompiler.Compiler.supportedProjectFiles
  id: supportedProjectFiles
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: supportedProjectFiles
  nameWithType: Compiler.supportedProjectFiles
  fullName: PascalABCCompiler.Compiler.supportedProjectFiles
  type: Field
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private SupportedSourceFile[] supportedProjectFiles
    return:
      type: PascalABCCompiler.SupportedSourceFile[]
    content.vb: Private supportedProjectFiles As SupportedSourceFile()
- uid: PascalABCCompiler.Compiler.unitTable
  commentId: F:PascalABCCompiler.Compiler.unitTable
  id: unitTable
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: unitTable
  nameWithType: Compiler.unitTable
  fullName: PascalABCCompiler.Compiler.unitTable
  type: Field
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private CompilationUnitHashTable unitTable
    return:
      type: PascalABCCompiler.CompilationUnitHashTable
    content.vb: Private unitTable As CompilationUnitHashTable
- uid: PascalABCCompiler.Compiler.UnitsTopologicallySortedList
  commentId: F:PascalABCCompiler.Compiler.UnitsTopologicallySortedList
  id: UnitsTopologicallySortedList
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: UnitsTopologicallySortedList
  nameWithType: Compiler.UnitsTopologicallySortedList
  fullName: PascalABCCompiler.Compiler.UnitsTopologicallySortedList
  type: Field
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public List<CompilationUnit> UnitsTopologicallySortedList
    return:
      type: System.Collections.Generic.List{PascalABCCompiler.CompilationUnit}
    content.vb: Public UnitsTopologicallySortedList As List(Of CompilationUnit)
- uid: PascalABCCompiler.Compiler.StandardModules
  commentId: F:PascalABCCompiler.Compiler.StandardModules
  id: StandardModules
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: StandardModules
  nameWithType: Compiler.StandardModules
  fullName: PascalABCCompiler.Compiler.StandardModules
  type: Field
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private List<string> StandardModules
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Private StandardModules As List(Of String)
- uid: PascalABCCompiler.Compiler.DLLCache
  commentId: F:PascalABCCompiler.Compiler.DLLCache
  id: DLLCache
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: DLLCache
  nameWithType: Compiler.DLLCache
  fullName: PascalABCCompiler.Compiler.DLLCache
  type: Field
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private Dictionary<string, CompilationUnit> DLLCache
    return:
      type: System.Collections.Generic.Dictionary{System.String,PascalABCCompiler.CompilationUnit}
    content.vb: Private DLLCache As Dictionary(Of String, CompilationUnit)
- uid: PascalABCCompiler.Compiler.SyntaxTreeToSemanticTreeConverter
  commentId: F:PascalABCCompiler.Compiler.SyntaxTreeToSemanticTreeConverter
  id: SyntaxTreeToSemanticTreeConverter
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: SyntaxTreeToSemanticTreeConverter
  nameWithType: Compiler.SyntaxTreeToSemanticTreeConverter
  fullName: PascalABCCompiler.Compiler.SyntaxTreeToSemanticTreeConverter
  type: Field
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public SyntaxTreeToSemanticTreeConverter SyntaxTreeToSemanticTreeConverter
    return:
      type: PascalABCCompiler.TreeConverter.SyntaxTreeToSemanticTreeConverter
    content.vb: Public SyntaxTreeToSemanticTreeConverter As SyntaxTreeToSemanticTreeConverter
- uid: PascalABCCompiler.Compiler.CodeGeneratorsController
  commentId: F:PascalABCCompiler.Compiler.CodeGeneratorsController
  id: CodeGeneratorsController
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: CodeGeneratorsController
  nameWithType: Compiler.CodeGeneratorsController
  fullName: PascalABCCompiler.Compiler.CodeGeneratorsController
  type: Field
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public Controller CodeGeneratorsController
    return:
      type: PascalABCCompiler.CodeGenerators.Controller
    content.vb: Public CodeGeneratorsController As Controller
- uid: PascalABCCompiler.Compiler.UnitsToCompileDelayedList
  commentId: F:PascalABCCompiler.Compiler.UnitsToCompileDelayedList
  id: UnitsToCompileDelayedList
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: UnitsToCompileDelayedList
  nameWithType: Compiler.UnitsToCompileDelayedList
  fullName: PascalABCCompiler.Compiler.UnitsToCompileDelayedList
  type: Field
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  summary: список отложенной компиляции реализации (она будет откомпилирована в Compile, а не в СompileUnit)
  example: []
  syntax:
    content: private List<CompilationUnit> UnitsToCompileDelayedList
    return:
      type: System.Collections.Generic.List{PascalABCCompiler.CompilationUnit}
    content.vb: Private UnitsToCompileDelayedList As List(Of CompilationUnit)
- uid: PascalABCCompiler.Compiler.RecompileList
  commentId: F:PascalABCCompiler.Compiler.RecompileList
  id: RecompileList
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: RecompileList
  nameWithType: Compiler.RecompileList
  fullName: PascalABCCompiler.Compiler.RecompileList
  type: Field
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public Hashtable RecompileList
    return:
      type: System.Collections.Hashtable
    content.vb: Public RecompileList As Hashtable
- uid: PascalABCCompiler.Compiler.currentCompilationUnit
  commentId: F:PascalABCCompiler.Compiler.currentCompilationUnit
  id: currentCompilationUnit
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: currentCompilationUnit
  nameWithType: Compiler.currentCompilationUnit
  fullName: PascalABCCompiler.Compiler.currentCompilationUnit
  type: Field
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private CompilationUnit currentCompilationUnit
    return:
      type: PascalABCCompiler.CompilationUnit
    content.vb: Private currentCompilationUnit As CompilationUnit
- uid: PascalABCCompiler.Compiler.firstCompilationUnit
  commentId: F:PascalABCCompiler.Compiler.firstCompilationUnit
  id: firstCompilationUnit
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: firstCompilationUnit
  nameWithType: Compiler.firstCompilationUnit
  fullName: PascalABCCompiler.Compiler.firstCompilationUnit
  type: Field
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private CompilationUnit firstCompilationUnit
    return:
      type: PascalABCCompiler.CompilationUnit
    content.vb: Private firstCompilationUnit As CompilationUnit
- uid: PascalABCCompiler.Compiler.PCUReadersAndWritersClosed
  commentId: F:PascalABCCompiler.Compiler.PCUReadersAndWritersClosed
  id: PCUReadersAndWritersClosed
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: PCUReadersAndWritersClosed
  nameWithType: Compiler.PCUReadersAndWritersClosed
  fullName: PascalABCCompiler.Compiler.PCUReadersAndWritersClosed
  type: Field
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private bool PCUReadersAndWritersClosed
    return:
      type: System.Boolean
    content.vb: Private PCUReadersAndWritersClosed As Boolean
- uid: PascalABCCompiler.Compiler.pcuCompilationUnits
  commentId: F:PascalABCCompiler.Compiler.pcuCompilationUnits
  id: pcuCompilationUnits
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: pcuCompilationUnits
  nameWithType: Compiler.pcuCompilationUnits
  fullName: PascalABCCompiler.Compiler.pcuCompilationUnits
  type: Field
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private static Dictionary<string, CompilationUnit> pcuCompilationUnits
    return:
      type: System.Collections.Generic.Dictionary{System.String,PascalABCCompiler.CompilationUnit}
    content.vb: Private Shared pcuCompilationUnits As Dictionary(Of String, CompilationUnit)
- uid: PascalABCCompiler.Compiler._clear_after_compilation
  commentId: F:PascalABCCompiler.Compiler._clear_after_compilation
  id: _clear_after_compilation
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: _clear_after_compilation
  nameWithType: Compiler._clear_after_compilation
  fullName: PascalABCCompiler.Compiler._clear_after_compilation
  type: Field
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private bool _clear_after_compilation
    return:
      type: System.Boolean
    content.vb: Private _clear_after_compilation As Boolean
- uid: PascalABCCompiler.Compiler.beginOffset
  commentId: F:PascalABCCompiler.Compiler.beginOffset
  id: beginOffset
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: beginOffset
  nameWithType: Compiler.beginOffset
  fullName: PascalABCCompiler.Compiler.beginOffset
  type: Field
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  summary: Начало основной программы
  example: []
  syntax:
    content: public int beginOffset
    return:
      type: System.Int32
    content.vb: Public beginOffset As Integer
- uid: PascalABCCompiler.Compiler.varBeginOffset
  commentId: F:PascalABCCompiler.Compiler.varBeginOffset
  id: varBeginOffset
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: varBeginOffset
  nameWithType: Compiler.varBeginOffset
  fullName: PascalABCCompiler.Compiler.varBeginOffset
  type: Field
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  summary: Положение первых переменных в пространстве имен основной программы
  example: []
  syntax:
    content: public int varBeginOffset
    return:
      type: System.Int32
    content.vb: Public varBeginOffset As Integer
- uid: PascalABCCompiler.Compiler.warnings
  commentId: F:PascalABCCompiler.Compiler.warnings
  id: warnings
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: warnings
  nameWithType: Compiler.warnings
  fullName: PascalABCCompiler.Compiler.warnings
  type: Field
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private List<CompilerWarning> warnings
    return:
      type: System.Collections.Generic.List{PascalABCCompiler.Errors.CompilerWarning}
    content.vb: Private warnings As List(Of CompilerWarning)
- uid: PascalABCCompiler.Compiler.sourceFilesProvider
  commentId: F:PascalABCCompiler.Compiler.sourceFilesProvider
  id: sourceFilesProvider
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: sourceFilesProvider
  nameWithType: Compiler.sourceFilesProvider
  fullName: PascalABCCompiler.Compiler.sourceFilesProvider
  type: Field
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private SourceFilesProviderDelegate sourceFilesProvider
    return:
      type: PascalABCCompiler.SourceFilesProviderDelegate
    content.vb: Private sourceFilesProvider As SourceFilesProviderDelegate
- uid: PascalABCCompiler.Compiler.errorsList
  commentId: F:PascalABCCompiler.Compiler.errorsList
  id: errorsList
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: errorsList
  nameWithType: Compiler.errorsList
  fullName: PascalABCCompiler.Compiler.errorsList
  type: Field
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private List<Error> errorsList
    return:
      type: System.Collections.Generic.List{PascalABCCompiler.Errors.Error}
    content.vb: Private errorsList As List(Of [Error])
- uid: PascalABCCompiler.Compiler.project
  commentId: F:PascalABCCompiler.Compiler.project
  id: project
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: project
  nameWithType: Compiler.project
  fullName: PascalABCCompiler.Compiler.project
  type: Field
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private ProjectInfo project
    return:
      type: PascalABCCompiler.ProjectInfo
    content.vb: Private project As ProjectInfo
- uid: PascalABCCompiler.Compiler.assemblyResolveScope
  commentId: F:PascalABCCompiler.Compiler.assemblyResolveScope
  id: assemblyResolveScope
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: assemblyResolveScope
  nameWithType: Compiler.assemblyResolveScope
  fullName: PascalABCCompiler.Compiler.assemblyResolveScope
  type: Field
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private AssemblyResolveScope assemblyResolveScope
    return:
      type: PascalABCCompiler.NetHelper.AssemblyResolveScope
    content.vb: Private assemblyResolveScope As AssemblyResolveScope
- uid: PascalABCCompiler.Compiler.standartAssemblyPath
  commentId: F:PascalABCCompiler.Compiler.standartAssemblyPath
  id: standartAssemblyPath
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: standartAssemblyPath
  nameWithType: Compiler.standartAssemblyPath
  fullName: PascalABCCompiler.Compiler.standartAssemblyPath
  type: Field
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private static string standartAssemblyPath
    return:
      type: System.String
    content.vb: Private Shared standartAssemblyPath As String
- uid: PascalABCCompiler.Compiler.standart_assembly_dict
  commentId: F:PascalABCCompiler.Compiler.standart_assembly_dict
  id: standart_assembly_dict
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: standart_assembly_dict
  nameWithType: Compiler.standart_assembly_dict
  fullName: PascalABCCompiler.Compiler.standart_assembly_dict
  type: Field
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public static Dictionary<string, string> standart_assembly_dict
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Public Shared standart_assembly_dict As Dictionary(Of String, String)
- uid: PascalABCCompiler.Compiler.ToString
  commentId: M:PascalABCCompiler.Compiler.ToString
  id: ToString
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Compiler.ToString()
  fullName: PascalABCCompiler.Compiler.ToString()
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: PascalABCCompiler.Compiler.ToString*
- uid: PascalABCCompiler.Compiler.SetSupportedSourceFiles
  commentId: M:PascalABCCompiler.Compiler.SetSupportedSourceFiles
  id: SetSupportedSourceFiles
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: SetSupportedSourceFiles()
  nameWithType: Compiler.SetSupportedSourceFiles()
  fullName: PascalABCCompiler.Compiler.SetSupportedSourceFiles()
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private void SetSupportedSourceFiles()
    content.vb: Private Sub SetSupportedSourceFiles()
  overload: PascalABCCompiler.Compiler.SetSupportedSourceFiles*
- uid: PascalABCCompiler.Compiler.SetSupportedProjectFiles
  commentId: M:PascalABCCompiler.Compiler.SetSupportedProjectFiles
  id: SetSupportedProjectFiles
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: SetSupportedProjectFiles()
  nameWithType: Compiler.SetSupportedProjectFiles()
  fullName: PascalABCCompiler.Compiler.SetSupportedProjectFiles()
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private void SetSupportedProjectFiles()
    content.vb: Private Sub SetSupportedProjectFiles()
  overload: PascalABCCompiler.Compiler.SetSupportedProjectFiles*
- uid: PascalABCCompiler.Compiler.AddWarnings(System.Collections.Generic.List{PascalABCCompiler.Errors.CompilerWarning})
  commentId: M:PascalABCCompiler.Compiler.AddWarnings(System.Collections.Generic.List{PascalABCCompiler.Errors.CompilerWarning})
  id: AddWarnings(System.Collections.Generic.List{PascalABCCompiler.Errors.CompilerWarning})
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: AddWarnings(List<CompilerWarning>)
  nameWithType: Compiler.AddWarnings(List<CompilerWarning>)
  fullName: PascalABCCompiler.Compiler.AddWarnings(System.Collections.Generic.List<PascalABCCompiler.Errors.CompilerWarning>)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  example: []
  syntax:
    content: public void AddWarnings(List<CompilerWarning> WarningList)
    parameters:
    - id: WarningList
      type: System.Collections.Generic.List{PascalABCCompiler.Errors.CompilerWarning}
    content.vb: Public Sub AddWarnings(WarningList As List(Of CompilerWarning))
  overload: PascalABCCompiler.Compiler.AddWarnings*
  implements:
  - PascalABCCompiler.ICompiler.AddWarnings(System.Collections.Generic.List{PascalABCCompiler.Errors.CompilerWarning})
  nameWithType.vb: Compiler.AddWarnings(List(Of CompilerWarning))
  fullName.vb: PascalABCCompiler.Compiler.AddWarnings(System.Collections.Generic.List(Of PascalABCCompiler.Errors.CompilerWarning))
  name.vb: AddWarnings(List(Of CompilerWarning))
- uid: PascalABCCompiler.Compiler.ChangeCompilerStateEvent(PascalABCCompiler.ICompiler,PascalABCCompiler.CompilerState,System.String)
  commentId: M:PascalABCCompiler.Compiler.ChangeCompilerStateEvent(PascalABCCompiler.ICompiler,PascalABCCompiler.CompilerState,System.String)
  id: ChangeCompilerStateEvent(PascalABCCompiler.ICompiler,PascalABCCompiler.CompilerState,System.String)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: ChangeCompilerStateEvent(ICompiler, CompilerState, string)
  nameWithType: Compiler.ChangeCompilerStateEvent(ICompiler, CompilerState, string)
  fullName: PascalABCCompiler.Compiler.ChangeCompilerStateEvent(PascalABCCompiler.ICompiler, PascalABCCompiler.CompilerState, string)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private void ChangeCompilerStateEvent(ICompiler sender, CompilerState State, string FileName)
    parameters:
    - id: sender
      type: PascalABCCompiler.ICompiler
    - id: State
      type: PascalABCCompiler.CompilerState
    - id: FileName
      type: System.String
    content.vb: Private Sub ChangeCompilerStateEvent(sender As ICompiler, State As CompilerState, FileName As String)
  overload: PascalABCCompiler.Compiler.ChangeCompilerStateEvent*
  nameWithType.vb: Compiler.ChangeCompilerStateEvent(ICompiler, CompilerState, String)
  fullName.vb: PascalABCCompiler.Compiler.ChangeCompilerStateEvent(PascalABCCompiler.ICompiler, PascalABCCompiler.CompilerState, String)
  name.vb: ChangeCompilerStateEvent(ICompiler, CompilerState, String)
- uid: PascalABCCompiler.Compiler.SourceFileExists(System.String)
  commentId: M:PascalABCCompiler.Compiler.SourceFileExists(System.String)
  id: SourceFileExists(System.String)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: SourceFileExists(string)
  nameWithType: Compiler.SourceFileExists(string)
  fullName: PascalABCCompiler.Compiler.SourceFileExists(string)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private bool SourceFileExists(string FileName)
    parameters:
    - id: FileName
      type: System.String
    return:
      type: System.Boolean
    content.vb: Private Function SourceFileExists(FileName As String) As Boolean
  overload: PascalABCCompiler.Compiler.SourceFileExists*
  nameWithType.vb: Compiler.SourceFileExists(String)
  fullName.vb: PascalABCCompiler.Compiler.SourceFileExists(String)
  name.vb: SourceFileExists(String)
- uid: PascalABCCompiler.Compiler.SourceFileGetLastWriteTime(System.String)
  commentId: M:PascalABCCompiler.Compiler.SourceFileGetLastWriteTime(System.String)
  id: SourceFileGetLastWriteTime(System.String)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: SourceFileGetLastWriteTime(string)
  nameWithType: Compiler.SourceFileGetLastWriteTime(string)
  fullName: PascalABCCompiler.Compiler.SourceFileGetLastWriteTime(string)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private DateTime SourceFileGetLastWriteTime(string FileName)
    parameters:
    - id: FileName
      type: System.String
    return:
      type: System.DateTime
    content.vb: Private Function SourceFileGetLastWriteTime(FileName As String) As Date
  overload: PascalABCCompiler.Compiler.SourceFileGetLastWriteTime*
  nameWithType.vb: Compiler.SourceFileGetLastWriteTime(String)
  fullName.vb: PascalABCCompiler.Compiler.SourceFileGetLastWriteTime(String)
  name.vb: SourceFileGetLastWriteTime(String)
- uid: PascalABCCompiler.Compiler.#ctor
  commentId: M:PascalABCCompiler.Compiler.#ctor
  id: '#ctor'
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: Compiler()
  nameWithType: Compiler.Compiler()
  fullName: PascalABCCompiler.Compiler.Compiler()
  type: Constructor
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public Compiler()
    content.vb: Public Sub New()
  overload: PascalABCCompiler.Compiler.#ctor*
  nameWithType.vb: Compiler.New()
  fullName.vb: PascalABCCompiler.Compiler.New()
  name.vb: New()
- uid: PascalABCCompiler.Compiler.#ctor(PascalABCCompiler.ICompiler,PascalABCCompiler.SourceFilesProviderDelegate,PascalABCCompiler.ChangeCompilerStateEventDelegate)
  commentId: M:PascalABCCompiler.Compiler.#ctor(PascalABCCompiler.ICompiler,PascalABCCompiler.SourceFilesProviderDelegate,PascalABCCompiler.ChangeCompilerStateEventDelegate)
  id: '#ctor(PascalABCCompiler.ICompiler,PascalABCCompiler.SourceFilesProviderDelegate,PascalABCCompiler.ChangeCompilerStateEventDelegate)'
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: Compiler(ICompiler, SourceFilesProviderDelegate, ChangeCompilerStateEventDelegate)
  nameWithType: Compiler.Compiler(ICompiler, SourceFilesProviderDelegate, ChangeCompilerStateEventDelegate)
  fullName: PascalABCCompiler.Compiler.Compiler(PascalABCCompiler.ICompiler, PascalABCCompiler.SourceFilesProviderDelegate, PascalABCCompiler.ChangeCompilerStateEventDelegate)
  type: Constructor
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public Compiler(ICompiler comp, SourceFilesProviderDelegate SourceFilesProvider, ChangeCompilerStateEventDelegate ChangeCompilerState)
    parameters:
    - id: comp
      type: PascalABCCompiler.ICompiler
    - id: SourceFilesProvider
      type: PascalABCCompiler.SourceFilesProviderDelegate
    - id: ChangeCompilerState
      type: PascalABCCompiler.ChangeCompilerStateEventDelegate
    content.vb: Public Sub New(comp As ICompiler, SourceFilesProvider As SourceFilesProviderDelegate, ChangeCompilerState As ChangeCompilerStateEventDelegate)
  overload: PascalABCCompiler.Compiler.#ctor*
  nameWithType.vb: Compiler.New(ICompiler, SourceFilesProviderDelegate, ChangeCompilerStateEventDelegate)
  fullName.vb: PascalABCCompiler.Compiler.New(PascalABCCompiler.ICompiler, PascalABCCompiler.SourceFilesProviderDelegate, PascalABCCompiler.ChangeCompilerStateEventDelegate)
  name.vb: New(ICompiler, SourceFilesProviderDelegate, ChangeCompilerStateEventDelegate)
- uid: PascalABCCompiler.Compiler.#ctor(PascalABCCompiler.SourceFilesProviderDelegate,PascalABCCompiler.ChangeCompilerStateEventDelegate)
  commentId: M:PascalABCCompiler.Compiler.#ctor(PascalABCCompiler.SourceFilesProviderDelegate,PascalABCCompiler.ChangeCompilerStateEventDelegate)
  id: '#ctor(PascalABCCompiler.SourceFilesProviderDelegate,PascalABCCompiler.ChangeCompilerStateEventDelegate)'
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: Compiler(SourceFilesProviderDelegate, ChangeCompilerStateEventDelegate)
  nameWithType: Compiler.Compiler(SourceFilesProviderDelegate, ChangeCompilerStateEventDelegate)
  fullName: PascalABCCompiler.Compiler.Compiler(PascalABCCompiler.SourceFilesProviderDelegate, PascalABCCompiler.ChangeCompilerStateEventDelegate)
  type: Constructor
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public Compiler(SourceFilesProviderDelegate SourceFilesProvider, ChangeCompilerStateEventDelegate ChangeCompilerState)
    parameters:
    - id: SourceFilesProvider
      type: PascalABCCompiler.SourceFilesProviderDelegate
    - id: ChangeCompilerState
      type: PascalABCCompiler.ChangeCompilerStateEventDelegate
    content.vb: Public Sub New(SourceFilesProvider As SourceFilesProviderDelegate, ChangeCompilerState As ChangeCompilerStateEventDelegate)
  overload: PascalABCCompiler.Compiler.#ctor*
  nameWithType.vb: Compiler.New(SourceFilesProviderDelegate, ChangeCompilerStateEventDelegate)
  fullName.vb: PascalABCCompiler.Compiler.New(PascalABCCompiler.SourceFilesProviderDelegate, PascalABCCompiler.ChangeCompilerStateEventDelegate)
  name.vb: New(SourceFilesProviderDelegate, ChangeCompilerStateEventDelegate)
- uid: PascalABCCompiler.Compiler.Reload
  commentId: M:PascalABCCompiler.Compiler.Reload
  id: Reload
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: Reload()
  nameWithType: Compiler.Reload()
  fullName: PascalABCCompiler.Compiler.Reload()
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  example: []
  syntax:
    content: public void Reload()
    content.vb: Public Sub Reload()
  overload: PascalABCCompiler.Compiler.Reload*
  implements:
  - PascalABCCompiler.ICompiler.Reload
- uid: PascalABCCompiler.Compiler.SaveUnitCheckInParsers
  commentId: M:PascalABCCompiler.Compiler.SaveUnitCheckInParsers
  id: SaveUnitCheckInParsers
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: SaveUnitCheckInParsers()
  nameWithType: Compiler.SaveUnitCheckInParsers()
  fullName: PascalABCCompiler.Compiler.SaveUnitCheckInParsers()
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  summary: >-
    Передаем парсерам возможность проверить, компилируется ли в данный момент модуль 

    (нужно, если нет ключевого слова unit или подобного в языке)
  example: []
  syntax:
    content: private void SaveUnitCheckInParsers()
    content.vb: Private Sub SaveUnitCheckInParsers()
  overload: PascalABCCompiler.Compiler.SaveUnitCheckInParsers*
- uid: PascalABCCompiler.Compiler.semanticTreeConvertersController_ChangeState(PascalABCCompiler.SemanticTreeConverters.SemanticTreeConvertersController.State,PascalABCCompiler.SemanticTreeConverters.ISemanticTreeConverter)
  commentId: M:PascalABCCompiler.Compiler.semanticTreeConvertersController_ChangeState(PascalABCCompiler.SemanticTreeConverters.SemanticTreeConvertersController.State,PascalABCCompiler.SemanticTreeConverters.ISemanticTreeConverter)
  id: semanticTreeConvertersController_ChangeState(PascalABCCompiler.SemanticTreeConverters.SemanticTreeConvertersController.State,PascalABCCompiler.SemanticTreeConverters.ISemanticTreeConverter)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: semanticTreeConvertersController_ChangeState(State, ISemanticTreeConverter)
  nameWithType: Compiler.semanticTreeConvertersController_ChangeState(SemanticTreeConvertersController.State, ISemanticTreeConverter)
  fullName: PascalABCCompiler.Compiler.semanticTreeConvertersController_ChangeState(PascalABCCompiler.SemanticTreeConverters.SemanticTreeConvertersController.State, PascalABCCompiler.SemanticTreeConverters.ISemanticTreeConverter)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private void semanticTreeConvertersController_ChangeState(SemanticTreeConvertersController.State State, ISemanticTreeConverter SemanticTreeConverter)
    parameters:
    - id: State
      type: PascalABCCompiler.SemanticTreeConverters.SemanticTreeConvertersController.State
    - id: SemanticTreeConverter
      type: PascalABCCompiler.SemanticTreeConverters.ISemanticTreeConverter
    content.vb: Private Sub semanticTreeConvertersController_ChangeState(State As SemanticTreeConvertersController.State, SemanticTreeConverter As ISemanticTreeConverter)
  overload: PascalABCCompiler.Compiler.semanticTreeConvertersController_ChangeState*
- uid: PascalABCCompiler.Compiler.GetCompilerDirectives(System.Collections.Generic.List{PascalABCCompiler.CompilationUnit})
  commentId: M:PascalABCCompiler.Compiler.GetCompilerDirectives(System.Collections.Generic.List{PascalABCCompiler.CompilationUnit})
  id: GetCompilerDirectives(System.Collections.Generic.List{PascalABCCompiler.CompilationUnit})
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: GetCompilerDirectives(List<CompilationUnit>)
  nameWithType: Compiler.GetCompilerDirectives(List<CompilationUnit>)
  fullName: PascalABCCompiler.Compiler.GetCompilerDirectives(System.Collections.Generic.List<PascalABCCompiler.CompilationUnit>)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  summary: Формирует словарь директив компилятора, собирая их из всех переданных модулей
  example: []
  syntax:
    content: private Dictionary<string, List<compiler_directive>> GetCompilerDirectives(List<CompilationUnit> Units)
    parameters:
    - id: Units
      type: System.Collections.Generic.List{PascalABCCompiler.CompilationUnit}
      description: ''
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{PascalABCCompiler.TreeRealization.compiler_directive}}
      description: ''
    content.vb: Private Function GetCompilerDirectives(Units As List(Of CompilationUnit)) As Dictionary(Of String, List(Of compiler_directive))
  overload: PascalABCCompiler.Compiler.GetCompilerDirectives*
  exceptions:
  - type: PascalABCCompiler.Errors.DuplicateDirective
    commentId: T:PascalABCCompiler.Errors.DuplicateDirective
    description: ''
  nameWithType.vb: Compiler.GetCompilerDirectives(List(Of CompilationUnit))
  fullName.vb: PascalABCCompiler.Compiler.GetCompilerDirectives(System.Collections.Generic.List(Of PascalABCCompiler.CompilationUnit))
  name.vb: GetCompilerDirectives(List(Of CompilationUnit))
- uid: PascalABCCompiler.Compiler.GetDirectivesAsSemanticNodes(System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.compiler_directive},System.String)
  commentId: M:PascalABCCompiler.Compiler.GetDirectivesAsSemanticNodes(System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.compiler_directive},System.String)
  id: GetDirectivesAsSemanticNodes(System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.compiler_directive},System.String)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: GetDirectivesAsSemanticNodes(List<compiler_directive>, string)
  nameWithType: Compiler.GetDirectivesAsSemanticNodes(List<compiler_directive>, string)
  fullName: PascalABCCompiler.Compiler.GetDirectivesAsSemanticNodes(System.Collections.Generic.List<PascalABCCompiler.SyntaxTree.compiler_directive>, string)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  summary: преобразует в директивы семантического уровня | в syntax_tree_visitor такая же функция  EVA
  example: []
  syntax:
    content: private List<compiler_directive> GetDirectivesAsSemanticNodes(List<compiler_directive> compilerDirectives, string unitFileName)
    parameters:
    - id: compilerDirectives
      type: System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.compiler_directive}
    - id: unitFileName
      type: System.String
    return:
      type: System.Collections.Generic.List{PascalABCCompiler.TreeRealization.compiler_directive}
    content.vb: Private Function GetDirectivesAsSemanticNodes(compilerDirectives As List(Of compiler_directive), unitFileName As String) As List(Of compiler_directive)
  overload: PascalABCCompiler.Compiler.GetDirectivesAsSemanticNodes*
  nameWithType.vb: Compiler.GetDirectivesAsSemanticNodes(List(Of compiler_directive), String)
  fullName.vb: PascalABCCompiler.Compiler.GetDirectivesAsSemanticNodes(System.Collections.Generic.List(Of PascalABCCompiler.SyntaxTree.compiler_directive), String)
  name.vb: GetDirectivesAsSemanticNodes(List(Of compiler_directive), String)
- uid: PascalABCCompiler.Compiler.GetLocationFromTreenode(PascalABCCompiler.SyntaxTree.syntax_tree_node,System.String)
  commentId: M:PascalABCCompiler.Compiler.GetLocationFromTreenode(PascalABCCompiler.SyntaxTree.syntax_tree_node,System.String)
  id: GetLocationFromTreenode(PascalABCCompiler.SyntaxTree.syntax_tree_node,System.String)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: GetLocationFromTreenode(syntax_tree_node, string)
  nameWithType: Compiler.GetLocationFromTreenode(syntax_tree_node, string)
  fullName: PascalABCCompiler.Compiler.GetLocationFromTreenode(PascalABCCompiler.SyntaxTree.syntax_tree_node, string)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private location GetLocationFromTreenode(syntax_tree_node tn, string FileName)
    parameters:
    - id: tn
      type: PascalABCCompiler.SyntaxTree.syntax_tree_node
    - id: FileName
      type: System.String
    return:
      type: PascalABCCompiler.TreeRealization.location
    content.vb: Private Function GetLocationFromTreenode(tn As syntax_tree_node, FileName As String) As location
  overload: PascalABCCompiler.Compiler.GetLocationFromTreenode*
  nameWithType.vb: Compiler.GetLocationFromTreenode(syntax_tree_node, String)
  fullName.vb: PascalABCCompiler.Compiler.GetLocationFromTreenode(PascalABCCompiler.SyntaxTree.syntax_tree_node, String)
  name.vb: GetLocationFromTreenode(syntax_tree_node, String)
- uid: PascalABCCompiler.Compiler.StartCompile
  commentId: M:PascalABCCompiler.Compiler.StartCompile
  id: StartCompile
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: StartCompile()
  nameWithType: Compiler.StartCompile()
  fullName: PascalABCCompiler.Compiler.StartCompile()
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  example: []
  syntax:
    content: public void StartCompile()
    content.vb: Public Sub StartCompile()
  overload: PascalABCCompiler.Compiler.StartCompile*
  implements:
  - PascalABCCompiler.ICompiler.StartCompile
- uid: PascalABCCompiler.Compiler.Compile(PascalABCCompiler.CompilerOptions)
  commentId: M:PascalABCCompiler.Compiler.Compile(PascalABCCompiler.CompilerOptions)
  id: Compile(PascalABCCompiler.CompilerOptions)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: Compile(CompilerOptions)
  nameWithType: Compiler.Compile(CompilerOptions)
  fullName: PascalABCCompiler.Compiler.Compile(PascalABCCompiler.CompilerOptions)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public string Compile(CompilerOptions CompilerOptions)
    parameters:
    - id: CompilerOptions
      type: PascalABCCompiler.CompilerOptions
    return:
      type: System.String
    content.vb: Public Function Compile(CompilerOptions As CompilerOptions) As String
  overload: PascalABCCompiler.Compiler.Compile*
- uid: PascalABCCompiler.Compiler.Reset
  commentId: M:PascalABCCompiler.Compiler.Reset
  id: Reset
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: Compiler.Reset()
  fullName: PascalABCCompiler.Compiler.Reset()
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private void Reset()
    content.vb: Private Sub Reset()
  overload: PascalABCCompiler.Compiler.Reset*
- uid: PascalABCCompiler.Compiler.CheckErrorsAndThrowTheFirstOne
  commentId: M:PascalABCCompiler.Compiler.CheckErrorsAndThrowTheFirstOne
  id: CheckErrorsAndThrowTheFirstOne
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: CheckErrorsAndThrowTheFirstOne()
  nameWithType: Compiler.CheckErrorsAndThrowTheFirstOne()
  fullName: PascalABCCompiler.Compiler.CheckErrorsAndThrowTheFirstOne()
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private void CheckErrorsAndThrowTheFirstOne()
    content.vb: Private Sub CheckErrorsAndThrowTheFirstOne()
  overload: PascalABCCompiler.Compiler.CheckErrorsAndThrowTheFirstOne*
- uid: PascalABCCompiler.Compiler.CompileCS
  commentId: M:PascalABCCompiler.Compiler.CompileCS
  id: CompileCS
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: CompileCS()
  nameWithType: Compiler.CompileCS()
  fullName: PascalABCCompiler.Compiler.CompileCS()
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public string CompileCS()
    return:
      type: System.String
    content.vb: Public Function CompileCS() As String
  overload: PascalABCCompiler.Compiler.CompileCS*
- uid: PascalABCCompiler.Compiler.InitializeProjectInfoAndFillCompilerOptionsFromIt
  commentId: M:PascalABCCompiler.Compiler.InitializeProjectInfoAndFillCompilerOptionsFromIt
  id: InitializeProjectInfoAndFillCompilerOptionsFromIt
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: InitializeProjectInfoAndFillCompilerOptionsFromIt()
  nameWithType: Compiler.InitializeProjectInfoAndFillCompilerOptionsFromIt()
  fullName: PascalABCCompiler.Compiler.InitializeProjectInfoAndFillCompilerOptionsFromIt()
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private void InitializeProjectInfoAndFillCompilerOptionsFromIt()
    content.vb: Private Sub InitializeProjectInfoAndFillCompilerOptionsFromIt()
  overload: PascalABCCompiler.Compiler.InitializeProjectInfoAndFillCompilerOptionsFromIt*
- uid: PascalABCCompiler.Compiler.CheckPathValid(System.String)
  commentId: M:PascalABCCompiler.Compiler.CheckPathValid(System.String)
  id: CheckPathValid(System.String)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: CheckPathValid(string)
  nameWithType: Compiler.CheckPathValid(string)
  fullName: PascalABCCompiler.Compiler.CheckPathValid(string)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public static bool CheckPathValid(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function CheckPathValid(path As String) As Boolean
  overload: PascalABCCompiler.Compiler.CheckPathValid*
  nameWithType.vb: Compiler.CheckPathValid(String)
  fullName.vb: PascalABCCompiler.Compiler.CheckPathValid(String)
  name.vb: CheckPathValid(String)
- uid: PascalABCCompiler.Compiler.TryThrowInvalidPath(System.String,PascalABCCompiler.SyntaxTree.SourceContext)
  commentId: M:PascalABCCompiler.Compiler.TryThrowInvalidPath(System.String,PascalABCCompiler.SyntaxTree.SourceContext)
  id: TryThrowInvalidPath(System.String,PascalABCCompiler.SyntaxTree.SourceContext)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: TryThrowInvalidPath(string, SourceContext)
  nameWithType: Compiler.TryThrowInvalidPath(string, SourceContext)
  fullName: PascalABCCompiler.Compiler.TryThrowInvalidPath(string, PascalABCCompiler.SyntaxTree.SourceContext)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public static void TryThrowInvalidPath(string path, SourceContext loc)
    parameters:
    - id: path
      type: System.String
    - id: loc
      type: PascalABCCompiler.SyntaxTree.SourceContext
    content.vb: Public Shared Sub TryThrowInvalidPath(path As String, loc As SourceContext)
  overload: PascalABCCompiler.Compiler.TryThrowInvalidPath*
  nameWithType.vb: Compiler.TryThrowInvalidPath(String, SourceContext)
  fullName.vb: PascalABCCompiler.Compiler.TryThrowInvalidPath(String, PascalABCCompiler.SyntaxTree.SourceContext)
  name.vb: TryThrowInvalidPath(String, SourceContext)
- uid: PascalABCCompiler.Compiler.CompileUnitsFromDelayedList
  commentId: M:PascalABCCompiler.Compiler.CompileUnitsFromDelayedList
  id: CompileUnitsFromDelayedList
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: CompileUnitsFromDelayedList()
  nameWithType: Compiler.CompileUnitsFromDelayedList()
  fullName: PascalABCCompiler.Compiler.CompileUnitsFromDelayedList()
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private void CompileUnitsFromDelayedList()
    content.vb: Private Sub CompileUnitsFromDelayedList()
  overload: PascalABCCompiler.Compiler.CompileUnitsFromDelayedList*
- uid: PascalABCCompiler.Compiler.SetOutputFileTypeOption(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{PascalABCCompiler.TreeRealization.compiler_directive}})
  commentId: M:PascalABCCompiler.Compiler.SetOutputFileTypeOption(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{PascalABCCompiler.TreeRealization.compiler_directive}})
  id: SetOutputFileTypeOption(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{PascalABCCompiler.TreeRealization.compiler_directive}})
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: SetOutputFileTypeOption(Dictionary<string, List<compiler_directive>>)
  nameWithType: Compiler.SetOutputFileTypeOption(Dictionary<string, List<compiler_directive>>)
  fullName: PascalABCCompiler.Compiler.SetOutputFileTypeOption(System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<PascalABCCompiler.TreeRealization.compiler_directive>>)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private void SetOutputFileTypeOption(Dictionary<string, List<compiler_directive>> compilerDirectives)
    parameters:
    - id: compilerDirectives
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{PascalABCCompiler.TreeRealization.compiler_directive}}
    content.vb: Private Sub SetOutputFileTypeOption(compilerDirectives As Dictionary(Of String, List(Of compiler_directive)))
  overload: PascalABCCompiler.Compiler.SetOutputFileTypeOption*
  nameWithType.vb: Compiler.SetOutputFileTypeOption(Dictionary(Of String, List(Of compiler_directive)))
  fullName.vb: PascalABCCompiler.Compiler.SetOutputFileTypeOption(System.Collections.Generic.Dictionary(Of String, System.Collections.Generic.List(Of PascalABCCompiler.TreeRealization.compiler_directive)))
  name.vb: SetOutputFileTypeOption(Dictionary(Of String, List(Of compiler_directive)))
- uid: PascalABCCompiler.Compiler.SetOutputPlatformOption(PascalABCCompiler.NETGenerator.CompilerOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{PascalABCCompiler.TreeRealization.compiler_directive}})
  commentId: M:PascalABCCompiler.Compiler.SetOutputPlatformOption(PascalABCCompiler.NETGenerator.CompilerOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{PascalABCCompiler.TreeRealization.compiler_directive}})
  id: SetOutputPlatformOption(PascalABCCompiler.NETGenerator.CompilerOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{PascalABCCompiler.TreeRealization.compiler_directive}})
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: SetOutputPlatformOption(CompilerOptions, Dictionary<string, List<compiler_directive>>)
  nameWithType: Compiler.SetOutputPlatformOption(CompilerOptions, Dictionary<string, List<compiler_directive>>)
  fullName: PascalABCCompiler.Compiler.SetOutputPlatformOption(PascalABCCompiler.NETGenerator.CompilerOptions, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<PascalABCCompiler.TreeRealization.compiler_directive>>)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private void SetOutputPlatformOption(CompilerOptions netCompilerOptions, Dictionary<string, List<compiler_directive>> compilerDirectives)
    parameters:
    - id: netCompilerOptions
      type: PascalABCCompiler.NETGenerator.CompilerOptions
    - id: compilerDirectives
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{PascalABCCompiler.TreeRealization.compiler_directive}}
    content.vb: Private Sub SetOutputPlatformOption(netCompilerOptions As CompilerOptions, compilerDirectives As Dictionary(Of String, List(Of compiler_directive)))
  overload: PascalABCCompiler.Compiler.SetOutputPlatformOption*
  nameWithType.vb: Compiler.SetOutputPlatformOption(CompilerOptions, Dictionary(Of String, List(Of compiler_directive)))
  fullName.vb: PascalABCCompiler.Compiler.SetOutputPlatformOption(PascalABCCompiler.NETGenerator.CompilerOptions, System.Collections.Generic.Dictionary(Of String, System.Collections.Generic.List(Of PascalABCCompiler.TreeRealization.compiler_directive)))
  name.vb: SetOutputPlatformOption(CompilerOptions, Dictionary(Of String, List(Of compiler_directive)))
- uid: PascalABCCompiler.Compiler.FillNetCompilerOptionsFromCompilerDirectives(PascalABCCompiler.NETGenerator.CompilerOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{PascalABCCompiler.TreeRealization.compiler_directive}})
  commentId: M:PascalABCCompiler.Compiler.FillNetCompilerOptionsFromCompilerDirectives(PascalABCCompiler.NETGenerator.CompilerOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{PascalABCCompiler.TreeRealization.compiler_directive}})
  id: FillNetCompilerOptionsFromCompilerDirectives(PascalABCCompiler.NETGenerator.CompilerOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{PascalABCCompiler.TreeRealization.compiler_directive}})
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: FillNetCompilerOptionsFromCompilerDirectives(CompilerOptions, Dictionary<string, List<compiler_directive>>)
  nameWithType: Compiler.FillNetCompilerOptionsFromCompilerDirectives(CompilerOptions, Dictionary<string, List<compiler_directive>>)
  fullName: PascalABCCompiler.Compiler.FillNetCompilerOptionsFromCompilerDirectives(PascalABCCompiler.NETGenerator.CompilerOptions, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<PascalABCCompiler.TreeRealization.compiler_directive>>)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private void FillNetCompilerOptionsFromCompilerDirectives(CompilerOptions netCompilerOptions, Dictionary<string, List<compiler_directive>> compilerDirectives)
    parameters:
    - id: netCompilerOptions
      type: PascalABCCompiler.NETGenerator.CompilerOptions
    - id: compilerDirectives
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{PascalABCCompiler.TreeRealization.compiler_directive}}
    content.vb: Private Sub FillNetCompilerOptionsFromCompilerDirectives(netCompilerOptions As CompilerOptions, compilerDirectives As Dictionary(Of String, List(Of compiler_directive)))
  overload: PascalABCCompiler.Compiler.FillNetCompilerOptionsFromCompilerDirectives*
  nameWithType.vb: Compiler.FillNetCompilerOptionsFromCompilerDirectives(CompilerOptions, Dictionary(Of String, List(Of compiler_directive)))
  fullName.vb: PascalABCCompiler.Compiler.FillNetCompilerOptionsFromCompilerDirectives(PascalABCCompiler.NETGenerator.CompilerOptions, System.Collections.Generic.Dictionary(Of String, System.Collections.Generic.List(Of PascalABCCompiler.TreeRealization.compiler_directive)))
  name.vb: FillNetCompilerOptionsFromCompilerDirectives(CompilerOptions, Dictionary(Of String, List(Of compiler_directive)))
- uid: PascalABCCompiler.Compiler.FillNetCompilerOptionsFromProject(PascalABCCompiler.NETGenerator.CompilerOptions)
  commentId: M:PascalABCCompiler.Compiler.FillNetCompilerOptionsFromProject(PascalABCCompiler.NETGenerator.CompilerOptions)
  id: FillNetCompilerOptionsFromProject(PascalABCCompiler.NETGenerator.CompilerOptions)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: FillNetCompilerOptionsFromProject(CompilerOptions)
  nameWithType: Compiler.FillNetCompilerOptionsFromProject(CompilerOptions)
  fullName: PascalABCCompiler.Compiler.FillNetCompilerOptionsFromProject(PascalABCCompiler.NETGenerator.CompilerOptions)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private void FillNetCompilerOptionsFromProject(CompilerOptions netCompilerOptions)
    parameters:
    - id: netCompilerOptions
      type: PascalABCCompiler.NETGenerator.CompilerOptions
    content.vb: Private Sub FillNetCompilerOptionsFromProject(netCompilerOptions As CompilerOptions)
  overload: PascalABCCompiler.Compiler.FillNetCompilerOptionsFromProject*
- uid: PascalABCCompiler.Compiler.SetTargetTypeOption(PascalABCCompiler.NETGenerator.CompilerOptions)
  commentId: M:PascalABCCompiler.Compiler.SetTargetTypeOption(PascalABCCompiler.NETGenerator.CompilerOptions)
  id: SetTargetTypeOption(PascalABCCompiler.NETGenerator.CompilerOptions)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: SetTargetTypeOption(CompilerOptions)
  nameWithType: Compiler.SetTargetTypeOption(CompilerOptions)
  fullName: PascalABCCompiler.Compiler.SetTargetTypeOption(PascalABCCompiler.NETGenerator.CompilerOptions)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private void SetTargetTypeOption(CompilerOptions netCompilerOptions)
    parameters:
    - id: netCompilerOptions
      type: PascalABCCompiler.NETGenerator.CompilerOptions
    content.vb: Private Sub SetTargetTypeOption(netCompilerOptions As CompilerOptions)
  overload: PascalABCCompiler.Compiler.SetTargetTypeOption*
- uid: PascalABCCompiler.Compiler.Compile
  commentId: M:PascalABCCompiler.Compiler.Compile
  id: Compile
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: Compile()
  nameWithType: Compiler.Compile()
  fullName: PascalABCCompiler.Compiler.Compile()
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  example: []
  syntax:
    content: public string Compile()
    return:
      type: System.String
    content.vb: Public Function Compile() As String
  overload: PascalABCCompiler.Compiler.Compile*
  implements:
  - PascalABCCompiler.ICompiler.Compile
- uid: PascalABCCompiler.Compiler.PrebuildMainSemanticTreeActions(PascalABCCompiler.NETGenerator.CompilerOptions@,System.Collections.Generic.List{System.String}@)
  commentId: M:PascalABCCompiler.Compiler.PrebuildMainSemanticTreeActions(PascalABCCompiler.NETGenerator.CompilerOptions@,System.Collections.Generic.List{System.String}@)
  id: PrebuildMainSemanticTreeActions(PascalABCCompiler.NETGenerator.CompilerOptions@,System.Collections.Generic.List{System.String}@)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: PrebuildMainSemanticTreeActions(out CompilerOptions, out List<string>)
  nameWithType: Compiler.PrebuildMainSemanticTreeActions(out CompilerOptions, out List<string>)
  fullName: PascalABCCompiler.Compiler.PrebuildMainSemanticTreeActions(out PascalABCCompiler.NETGenerator.CompilerOptions, out System.Collections.Generic.List<string>)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  summary: >-
    Сохраняет документацию для модулей;

    Выясняет тип выходного файла, целевой фреймворк, платформу;

    Заполняет опции .NET компиляции согласно директивам и/или информации из проекта;

    Находит ресурсные файлы из директив
  example: []
  syntax:
    content: private void PrebuildMainSemanticTreeActions(out CompilerOptions netCompilerOptions, out List<string> resourceFiles)
    parameters:
    - id: netCompilerOptions
      type: PascalABCCompiler.NETGenerator.CompilerOptions
    - id: resourceFiles
      type: System.Collections.Generic.List{System.String}
    content.vb: Private Sub PrebuildMainSemanticTreeActions(netCompilerOptions As CompilerOptions, resourceFiles As List(Of String))
  overload: PascalABCCompiler.Compiler.PrebuildMainSemanticTreeActions*
  nameWithType.vb: Compiler.PrebuildMainSemanticTreeActions(CompilerOptions, List(Of String))
  fullName.vb: PascalABCCompiler.Compiler.PrebuildMainSemanticTreeActions(PascalABCCompiler.NETGenerator.CompilerOptions, System.Collections.Generic.List(Of String))
  name.vb: PrebuildMainSemanticTreeActions(CompilerOptions, List(Of String))
- uid: PascalABCCompiler.Compiler.ConstructMainSemanticTree(PascalABCCompiler.NETGenerator.CompilerOptions)
  commentId: M:PascalABCCompiler.Compiler.ConstructMainSemanticTree(PascalABCCompiler.NETGenerator.CompilerOptions)
  id: ConstructMainSemanticTree(PascalABCCompiler.NETGenerator.CompilerOptions)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: ConstructMainSemanticTree(CompilerOptions)
  nameWithType: Compiler.ConstructMainSemanticTree(CompilerOptions)
  fullName: PascalABCCompiler.Compiler.ConstructMainSemanticTree(PascalABCCompiler.NETGenerator.CompilerOptions)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private program_node ConstructMainSemanticTree(CompilerOptions compilerOptions)
    parameters:
    - id: compilerOptions
      type: PascalABCCompiler.NETGenerator.CompilerOptions
    return:
      type: PascalABCCompiler.TreeRealization.program_node
    content.vb: Private Function ConstructMainSemanticTree(compilerOptions As CompilerOptions) As program_node
  overload: PascalABCCompiler.Compiler.ConstructMainSemanticTree*
- uid: PascalABCCompiler.Compiler.PrepareFinalMainFunctionForExe(PascalABCCompiler.TreeRealization.program_node)
  commentId: M:PascalABCCompiler.Compiler.PrepareFinalMainFunctionForExe(PascalABCCompiler.TreeRealization.program_node)
  id: PrepareFinalMainFunctionForExe(PascalABCCompiler.TreeRealization.program_node)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: PrepareFinalMainFunctionForExe(program_node)
  nameWithType: Compiler.PrepareFinalMainFunctionForExe(program_node)
  fullName: PascalABCCompiler.Compiler.PrepareFinalMainFunctionForExe(PascalABCCompiler.TreeRealization.program_node)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public void PrepareFinalMainFunctionForExe(program_node mainSemanticTree)
    parameters:
    - id: mainSemanticTree
      type: PascalABCCompiler.TreeRealization.program_node
    content.vb: Public Sub PrepareFinalMainFunctionForExe(mainSemanticTree As program_node)
  overload: PascalABCCompiler.Compiler.PrepareFinalMainFunctionForExe*
- uid: PascalABCCompiler.Compiler.AddErrorToErrorListConsideringPosition(PascalABCCompiler.Errors.Error)
  commentId: M:PascalABCCompiler.Compiler.AddErrorToErrorListConsideringPosition(PascalABCCompiler.Errors.Error)
  id: AddErrorToErrorListConsideringPosition(PascalABCCompiler.Errors.Error)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: AddErrorToErrorListConsideringPosition(Error)
  nameWithType: Compiler.AddErrorToErrorListConsideringPosition(Error)
  fullName: PascalABCCompiler.Compiler.AddErrorToErrorListConsideringPosition(PascalABCCompiler.Errors.Error)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private void AddErrorToErrorListConsideringPosition(Error err)
    parameters:
    - id: err
      type: PascalABCCompiler.Errors.Error
    content.vb: Private Sub AddErrorToErrorListConsideringPosition(err As [Error])
  overload: PascalABCCompiler.Compiler.AddErrorToErrorListConsideringPosition*
- uid: PascalABCCompiler.Compiler.FindPositionForSemanticErrorInTheErrorList(PascalABCCompiler.Errors.Error)
  commentId: M:PascalABCCompiler.Compiler.FindPositionForSemanticErrorInTheErrorList(PascalABCCompiler.Errors.Error)
  id: FindPositionForSemanticErrorInTheErrorList(PascalABCCompiler.Errors.Error)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: FindPositionForSemanticErrorInTheErrorList(Error)
  nameWithType: Compiler.FindPositionForSemanticErrorInTheErrorList(Error)
  fullName: PascalABCCompiler.Compiler.FindPositionForSemanticErrorInTheErrorList(PascalABCCompiler.Errors.Error)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private int FindPositionForSemanticErrorInTheErrorList(Error err)
    parameters:
    - id: err
      type: PascalABCCompiler.Errors.Error
    return:
      type: System.Int32
    content.vb: Private Function FindPositionForSemanticErrorInTheErrorList(err As [Error]) As Integer
  overload: PascalABCCompiler.Compiler.FindPositionForSemanticErrorInTheErrorList*
- uid: PascalABCCompiler.Compiler.AddCodeGenerationErrorToErrorList(System.Exception)
  commentId: M:PascalABCCompiler.Compiler.AddCodeGenerationErrorToErrorList(System.Exception)
  id: AddCodeGenerationErrorToErrorList(System.Exception)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: AddCodeGenerationErrorToErrorList(Exception)
  nameWithType: Compiler.AddCodeGenerationErrorToErrorList(Exception)
  fullName: PascalABCCompiler.Compiler.AddCodeGenerationErrorToErrorList(System.Exception)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private void AddCodeGenerationErrorToErrorList(Exception err)
    parameters:
    - id: err
      type: System.Exception
    content.vb: Private Sub AddCodeGenerationErrorToErrorList(err As Exception)
  overload: PascalABCCompiler.Compiler.AddCodeGenerationErrorToErrorList*
- uid: PascalABCCompiler.Compiler.AddInternalErrorToErrorList(PascalABCCompiler.Errors.CompilerInternalError)
  commentId: M:PascalABCCompiler.Compiler.AddInternalErrorToErrorList(PascalABCCompiler.Errors.CompilerInternalError)
  id: AddInternalErrorToErrorList(PascalABCCompiler.Errors.CompilerInternalError)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: AddInternalErrorToErrorList(CompilerInternalError)
  nameWithType: Compiler.AddInternalErrorToErrorList(CompilerInternalError)
  fullName: PascalABCCompiler.Compiler.AddInternalErrorToErrorList(PascalABCCompiler.Errors.CompilerInternalError)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private void AddInternalErrorToErrorList(CompilerInternalError internalError)
    parameters:
    - id: internalError
      type: PascalABCCompiler.Errors.CompilerInternalError
    content.vb: Private Sub AddInternalErrorToErrorList(internalError As CompilerInternalError)
  overload: PascalABCCompiler.Compiler.AddInternalErrorToErrorList*
- uid: PascalABCCompiler.Compiler.CheckForRTLErrorsAndClearAllErrorsIfFound
  commentId: M:PascalABCCompiler.Compiler.CheckForRTLErrorsAndClearAllErrorsIfFound
  id: CheckForRTLErrorsAndClearAllErrorsIfFound
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: CheckForRTLErrorsAndClearAllErrorsIfFound()
  nameWithType: Compiler.CheckForRTLErrorsAndClearAllErrorsIfFound()
  fullName: PascalABCCompiler.Compiler.CheckForRTLErrorsAndClearAllErrorsIfFound()
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private bool CheckForRTLErrorsAndClearAllErrorsIfFound()
    return:
      type: System.Boolean
    content.vb: Private Function CheckForRTLErrorsAndClearAllErrorsIfFound() As Boolean
  overload: PascalABCCompiler.Compiler.CheckForRTLErrorsAndClearAllErrorsIfFound*
- uid: PascalABCCompiler.Compiler.GenerateILCode(PascalABCCompiler.TreeRealization.program_node,PascalABCCompiler.NETGenerator.CompilerOptions,System.Collections.Generic.List{System.String})
  commentId: M:PascalABCCompiler.Compiler.GenerateILCode(PascalABCCompiler.TreeRealization.program_node,PascalABCCompiler.NETGenerator.CompilerOptions,System.Collections.Generic.List{System.String})
  id: GenerateILCode(PascalABCCompiler.TreeRealization.program_node,PascalABCCompiler.NETGenerator.CompilerOptions,System.Collections.Generic.List{System.String})
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: GenerateILCode(program_node, CompilerOptions, List<string>)
  nameWithType: Compiler.GenerateILCode(program_node, CompilerOptions, List<string>)
  fullName: PascalABCCompiler.Compiler.GenerateILCode(PascalABCCompiler.TreeRealization.program_node, PascalABCCompiler.NETGenerator.CompilerOptions, System.Collections.Generic.List<string>)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private void GenerateILCode(program_node programNode, CompilerOptions compilerOptions, List<string> resourceFiles)
    parameters:
    - id: programNode
      type: PascalABCCompiler.TreeRealization.program_node
    - id: compilerOptions
      type: PascalABCCompiler.NETGenerator.CompilerOptions
    - id: resourceFiles
      type: System.Collections.Generic.List{System.String}
    content.vb: Private Sub GenerateILCode(programNode As program_node, compilerOptions As CompilerOptions, resourceFiles As List(Of String))
  overload: PascalABCCompiler.Compiler.GenerateILCode*
  nameWithType.vb: Compiler.GenerateILCode(program_node, CompilerOptions, List(Of String))
  fullName.vb: PascalABCCompiler.Compiler.GenerateILCode(PascalABCCompiler.TreeRealization.program_node, PascalABCCompiler.NETGenerator.CompilerOptions, System.Collections.Generic.List(Of String))
  name.vb: GenerateILCode(program_node, CompilerOptions, List(Of String))
- uid: PascalABCCompiler.Compiler.DebugOutputFileCreationUsingPDB
  commentId: M:PascalABCCompiler.Compiler.DebugOutputFileCreationUsingPDB
  id: DebugOutputFileCreationUsingPDB
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: DebugOutputFileCreationUsingPDB()
  nameWithType: Compiler.DebugOutputFileCreationUsingPDB()
  fullName: PascalABCCompiler.Compiler.DebugOutputFileCreationUsingPDB()
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private void DebugOutputFileCreationUsingPDB()
    content.vb: Private Sub DebugOutputFileCreationUsingPDB()
  overload: PascalABCCompiler.Compiler.DebugOutputFileCreationUsingPDB*
- uid: PascalABCCompiler.Compiler.GetResourceFilesFromCompilerDirectives(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{PascalABCCompiler.TreeRealization.compiler_directive}})
  commentId: M:PascalABCCompiler.Compiler.GetResourceFilesFromCompilerDirectives(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{PascalABCCompiler.TreeRealization.compiler_directive}})
  id: GetResourceFilesFromCompilerDirectives(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{PascalABCCompiler.TreeRealization.compiler_directive}})
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: GetResourceFilesFromCompilerDirectives(Dictionary<string, List<compiler_directive>>)
  nameWithType: Compiler.GetResourceFilesFromCompilerDirectives(Dictionary<string, List<compiler_directive>>)
  fullName: PascalABCCompiler.Compiler.GetResourceFilesFromCompilerDirectives(System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<PascalABCCompiler.TreeRealization.compiler_directive>>)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private List<string> GetResourceFilesFromCompilerDirectives(Dictionary<string, List<compiler_directive>> compilerDirectives)
    parameters:
    - id: compilerDirectives
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{PascalABCCompiler.TreeRealization.compiler_directive}}
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Private Function GetResourceFilesFromCompilerDirectives(compilerDirectives As Dictionary(Of String, List(Of compiler_directive))) As List(Of String)
  overload: PascalABCCompiler.Compiler.GetResourceFilesFromCompilerDirectives*
  nameWithType.vb: Compiler.GetResourceFilesFromCompilerDirectives(Dictionary(Of String, List(Of compiler_directive)))
  fullName.vb: PascalABCCompiler.Compiler.GetResourceFilesFromCompilerDirectives(System.Collections.Generic.Dictionary(Of String, System.Collections.Generic.List(Of PascalABCCompiler.TreeRealization.compiler_directive)))
  name.vb: GetResourceFilesFromCompilerDirectives(Dictionary(Of String, List(Of compiler_directive)))
- uid: PascalABCCompiler.Compiler.HasOnlySyntaxErrors(System.Collections.Generic.List{PascalABCCompiler.Errors.Error})
  commentId: M:PascalABCCompiler.Compiler.HasOnlySyntaxErrors(System.Collections.Generic.List{PascalABCCompiler.Errors.Error})
  id: HasOnlySyntaxErrors(System.Collections.Generic.List{PascalABCCompiler.Errors.Error})
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: HasOnlySyntaxErrors(List<Error>)
  nameWithType: Compiler.HasOnlySyntaxErrors(List<Error>)
  fullName: PascalABCCompiler.Compiler.HasOnlySyntaxErrors(System.Collections.Generic.List<PascalABCCompiler.Errors.Error>)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private bool HasOnlySyntaxErrors(List<Error> errors)
    parameters:
    - id: errors
      type: System.Collections.Generic.List{PascalABCCompiler.Errors.Error}
    return:
      type: System.Boolean
    content.vb: Private Function HasOnlySyntaxErrors(errors As List(Of [Error])) As Boolean
  overload: PascalABCCompiler.Compiler.HasOnlySyntaxErrors*
  nameWithType.vb: Compiler.HasOnlySyntaxErrors(List(Of Error))
  fullName.vb: PascalABCCompiler.Compiler.HasOnlySyntaxErrors(System.Collections.Generic.List(Of PascalABCCompiler.Errors.Error))
  name.vb: HasOnlySyntaxErrors(List(Of Error))
- uid: PascalABCCompiler.Compiler.SaveDocumentationsForUnits
  commentId: M:PascalABCCompiler.Compiler.SaveDocumentationsForUnits
  id: SaveDocumentationsForUnits
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: SaveDocumentationsForUnits()
  nameWithType: Compiler.SaveDocumentationsForUnits()
  fullName: PascalABCCompiler.Compiler.SaveDocumentationsForUnits()
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private void SaveDocumentationsForUnits()
    content.vb: Private Sub SaveDocumentationsForUnits()
  overload: PascalABCCompiler.Compiler.SaveDocumentationsForUnits*
- uid: PascalABCCompiler.Compiler.ClosePCUReadersAndWriters
  commentId: M:PascalABCCompiler.Compiler.ClosePCUReadersAndWriters
  id: ClosePCUReadersAndWriters
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: ClosePCUReadersAndWriters()
  nameWithType: Compiler.ClosePCUReadersAndWriters()
  fullName: PascalABCCompiler.Compiler.ClosePCUReadersAndWriters()
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private void ClosePCUReadersAndWriters()
    content.vb: Private Sub ClosePCUReadersAndWriters()
  overload: PascalABCCompiler.Compiler.ClosePCUReadersAndWriters*
- uid: PascalABCCompiler.Compiler.WaitCallback_ClosePCUWriters(System.Object)
  commentId: M:PascalABCCompiler.Compiler.WaitCallback_ClosePCUWriters(System.Object)
  id: WaitCallback_ClosePCUWriters(System.Object)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: WaitCallback_ClosePCUWriters(object)
  nameWithType: Compiler.WaitCallback_ClosePCUWriters(object)
  fullName: PascalABCCompiler.Compiler.WaitCallback_ClosePCUWriters(object)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private void WaitCallback_ClosePCUWriters(object state)
    parameters:
    - id: state
      type: System.Object
    content.vb: Private Sub WaitCallback_ClosePCUWriters(state As Object)
  overload: PascalABCCompiler.Compiler.WaitCallback_ClosePCUWriters*
  nameWithType.vb: Compiler.WaitCallback_ClosePCUWriters(Object)
  fullName.vb: PascalABCCompiler.Compiler.WaitCallback_ClosePCUWriters(Object)
  name.vb: WaitCallback_ClosePCUWriters(Object)
- uid: PascalABCCompiler.Compiler.AsyncClosePCUWriters
  commentId: M:PascalABCCompiler.Compiler.AsyncClosePCUWriters
  id: AsyncClosePCUWriters
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: AsyncClosePCUWriters()
  nameWithType: Compiler.AsyncClosePCUWriters()
  fullName: PascalABCCompiler.Compiler.AsyncClosePCUWriters()
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private void AsyncClosePCUWriters()
    content.vb: Private Sub AsyncClosePCUWriters()
  overload: PascalABCCompiler.Compiler.AsyncClosePCUWriters*
- uid: PascalABCCompiler.Compiler.ClosePCUWriters
  commentId: M:PascalABCCompiler.Compiler.ClosePCUWriters
  id: ClosePCUWriters
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: ClosePCUWriters()
  nameWithType: Compiler.ClosePCUWriters()
  fullName: PascalABCCompiler.Compiler.ClosePCUWriters()
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private void ClosePCUWriters()
    content.vb: Private Sub ClosePCUWriters()
  overload: PascalABCCompiler.Compiler.ClosePCUWriters*
- uid: PascalABCCompiler.Compiler.CheckForDuplicatesInUsesSection(System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace})
  commentId: M:PascalABCCompiler.Compiler.CheckForDuplicatesInUsesSection(System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace})
  id: CheckForDuplicatesInUsesSection(System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace})
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: CheckForDuplicatesInUsesSection(List<unit_or_namespace>)
  nameWithType: Compiler.CheckForDuplicatesInUsesSection(List<unit_or_namespace>)
  fullName: PascalABCCompiler.Compiler.CheckForDuplicatesInUsesSection(System.Collections.Generic.List<PascalABCCompiler.SyntaxTree.unit_or_namespace>)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  summary: Бросает ошибку если находит дупликаты в секции uses
  example: []
  syntax:
    content: private void CheckForDuplicatesInUsesSection(List<unit_or_namespace> usesList)
    parameters:
    - id: usesList
      type: System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace}
    content.vb: Private Sub CheckForDuplicatesInUsesSection(usesList As List(Of unit_or_namespace))
  overload: PascalABCCompiler.Compiler.CheckForDuplicatesInUsesSection*
  nameWithType.vb: Compiler.CheckForDuplicatesInUsesSection(List(Of unit_or_namespace))
  fullName.vb: PascalABCCompiler.Compiler.CheckForDuplicatesInUsesSection(System.Collections.Generic.List(Of PascalABCCompiler.SyntaxTree.unit_or_namespace))
  name.vb: CheckForDuplicatesInUsesSection(List(Of unit_or_namespace))
- uid: PascalABCCompiler.Compiler.GetInterfaceUsesSection(PascalABCCompiler.SyntaxTree.compilation_unit)
  commentId: M:PascalABCCompiler.Compiler.GetInterfaceUsesSection(PascalABCCompiler.SyntaxTree.compilation_unit)
  id: GetInterfaceUsesSection(PascalABCCompiler.SyntaxTree.compilation_unit)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: GetInterfaceUsesSection(compilation_unit)
  nameWithType: Compiler.GetInterfaceUsesSection(compilation_unit)
  fullName: PascalABCCompiler.Compiler.GetInterfaceUsesSection(PascalABCCompiler.SyntaxTree.compilation_unit)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  summary: Возвращает список зависимостей из интерфейсной части модуля (или основной программы)
  example: []
  syntax:
    content: public List<unit_or_namespace> GetInterfaceUsesSection(compilation_unit unitSyntaxTree)
    parameters:
    - id: unitSyntaxTree
      type: PascalABCCompiler.SyntaxTree.compilation_unit
    return:
      type: System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace}
    content.vb: Public Function GetInterfaceUsesSection(unitSyntaxTree As compilation_unit) As List(Of unit_or_namespace)
  overload: PascalABCCompiler.Compiler.GetInterfaceUsesSection*
- uid: PascalABCCompiler.Compiler.GetImplementationUsesSection(PascalABCCompiler.SyntaxTree.compilation_unit)
  commentId: M:PascalABCCompiler.Compiler.GetImplementationUsesSection(PascalABCCompiler.SyntaxTree.compilation_unit)
  id: GetImplementationUsesSection(PascalABCCompiler.SyntaxTree.compilation_unit)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: GetImplementationUsesSection(compilation_unit)
  nameWithType: Compiler.GetImplementationUsesSection(compilation_unit)
  fullName: PascalABCCompiler.Compiler.GetImplementationUsesSection(PascalABCCompiler.SyntaxTree.compilation_unit)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private List<unit_or_namespace> GetImplementationUsesSection(compilation_unit unitSyntaxTree)
    parameters:
    - id: unitSyntaxTree
      type: PascalABCCompiler.SyntaxTree.compilation_unit
    return:
      type: System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace}
    content.vb: Private Function GetImplementationUsesSection(unitSyntaxTree As compilation_unit) As List(Of unit_or_namespace)
  overload: PascalABCCompiler.Compiler.GetImplementationUsesSection*
- uid: PascalABCCompiler.Compiler.FindPCUFileName(System.String,System.String,System.Int32@)
  commentId: M:PascalABCCompiler.Compiler.FindPCUFileName(System.String,System.String,System.Int32@)
  id: FindPCUFileName(System.String,System.String,System.Int32@)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: FindPCUFileName(string, string, out int)
  nameWithType: Compiler.FindPCUFileName(string, string, out int)
  fullName: PascalABCCompiler.Compiler.FindPCUFileName(string, string, out int)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public string FindPCUFileName(string fileName, string currentPath, out int folderPriority)
    parameters:
    - id: fileName
      type: System.String
    - id: currentPath
      type: System.String
    - id: folderPriority
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Function FindPCUFileName(fileName As String, currentPath As String, folderPriority As Integer) As String
  overload: PascalABCCompiler.Compiler.FindPCUFileName*
  nameWithType.vb: Compiler.FindPCUFileName(String, String, Integer)
  fullName.vb: PascalABCCompiler.Compiler.FindPCUFileName(String, String, Integer)
  name.vb: FindPCUFileName(String, String, Integer)
- uid: PascalABCCompiler.Compiler.FindSourceFileName(System.String,System.String,System.Int32@)
  commentId: M:PascalABCCompiler.Compiler.FindSourceFileName(System.String,System.String,System.Int32@)
  id: FindSourceFileName(System.String,System.String,System.Int32@)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: FindSourceFileName(string, string, out int)
  nameWithType: Compiler.FindSourceFileName(string, string, out int)
  fullName: PascalABCCompiler.Compiler.FindSourceFileName(string, string, out int)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public string FindSourceFileName(string fileName, string currentPath, out int folderPriority)
    parameters:
    - id: fileName
      type: System.String
    - id: currentPath
      type: System.String
    - id: folderPriority
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Function FindSourceFileName(fileName As String, currentPath As String, folderPriority As Integer) As String
  overload: PascalABCCompiler.Compiler.FindSourceFileName*
  nameWithType.vb: Compiler.FindSourceFileName(String, String, Integer)
  fullName.vb: PascalABCCompiler.Compiler.FindSourceFileName(String, String, Integer)
  name.vb: FindSourceFileName(String, String, Integer)
- uid: PascalABCCompiler.Compiler.FindSourceFileNameInDirs(System.String,System.Int32@,System.String[])
  commentId: M:PascalABCCompiler.Compiler.FindSourceFileNameInDirs(System.String,System.Int32@,System.String[])
  id: FindSourceFileNameInDirs(System.String,System.Int32@,System.String[])
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: FindSourceFileNameInDirs(string, out int, params string[])
  nameWithType: Compiler.FindSourceFileNameInDirs(string, out int, params string[])
  fullName: PascalABCCompiler.Compiler.FindSourceFileNameInDirs(string, out int, params string[])
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public string FindSourceFileNameInDirs(string fileName, out int foundDirIndex, params string[] Dirs)
    parameters:
    - id: fileName
      type: System.String
    - id: foundDirIndex
      type: System.Int32
    - id: Dirs
      type: System.String[]
    return:
      type: System.String
    content.vb: Public Function FindSourceFileNameInDirs(fileName As String, foundDirIndex As Integer, ParamArray Dirs As String()) As String
  overload: PascalABCCompiler.Compiler.FindSourceFileNameInDirs*
  nameWithType.vb: Compiler.FindSourceFileNameInDirs(String, Integer, ParamArray String())
  fullName.vb: PascalABCCompiler.Compiler.FindSourceFileNameInDirs(String, Integer, ParamArray String())
  name.vb: FindSourceFileNameInDirs(String, Integer, ParamArray String())
- uid: PascalABCCompiler.Compiler.CombinePathsRelatively(System.String,System.String)
  commentId: M:PascalABCCompiler.Compiler.CombinePathsRelatively(System.String,System.String)
  id: CombinePathsRelatively(System.String,System.String)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: CombinePathsRelatively(string, string)
  nameWithType: Compiler.CombinePathsRelatively(string, string)
  fullName: PascalABCCompiler.Compiler.CombinePathsRelatively(string, string)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public static string CombinePathsRelatively(string path1, string path2)
    parameters:
    - id: path1
      type: System.String
    - id: path2
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function CombinePathsRelatively(path1 As String, path2 As String) As String
  overload: PascalABCCompiler.Compiler.CombinePathsRelatively*
  nameWithType.vb: Compiler.CombinePathsRelatively(String, String)
  fullName.vb: PascalABCCompiler.Compiler.CombinePathsRelatively(String, String)
  name.vb: CombinePathsRelatively(String, String)
- uid: PascalABCCompiler.Compiler.GetUnitPath(PascalABCCompiler.CompilationUnit,PascalABCCompiler.CompilationUnit)
  commentId: M:PascalABCCompiler.Compiler.GetUnitPath(PascalABCCompiler.CompilationUnit,PascalABCCompiler.CompilationUnit)
  id: GetUnitPath(PascalABCCompiler.CompilationUnit,PascalABCCompiler.CompilationUnit)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: GetUnitPath(CompilationUnit, CompilationUnit)
  nameWithType: Compiler.GetUnitPath(CompilationUnit, CompilationUnit)
  fullName: PascalABCCompiler.Compiler.GetUnitPath(PascalABCCompiler.CompilationUnit, PascalABCCompiler.CompilationUnit)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public static string GetUnitPath(CompilationUnit u1, CompilationUnit u2)
    parameters:
    - id: u1
      type: PascalABCCompiler.CompilationUnit
    - id: u2
      type: PascalABCCompiler.CompilationUnit
    return:
      type: System.String
    content.vb: Public Shared Function GetUnitPath(u1 As CompilationUnit, u2 As CompilationUnit) As String
  overload: PascalABCCompiler.Compiler.GetUnitPath*
- uid: PascalABCCompiler.Compiler.FindFileWithExtensionInDirs(System.String,System.Int32@,System.String[])
  commentId: M:PascalABCCompiler.Compiler.FindFileWithExtensionInDirs(System.String,System.Int32@,System.String[])
  id: FindFileWithExtensionInDirs(System.String,System.Int32@,System.String[])
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: FindFileWithExtensionInDirs(string, out int, params string[])
  nameWithType: Compiler.FindFileWithExtensionInDirs(string, out int, params string[])
  fullName: PascalABCCompiler.Compiler.FindFileWithExtensionInDirs(string, out int, params string[])
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private string FindFileWithExtensionInDirs(string fileName, out int foundDirIndex, params string[] dirs)
    parameters:
    - id: fileName
      type: System.String
    - id: foundDirIndex
      type: System.Int32
    - id: dirs
      type: System.String[]
    return:
      type: System.String
    content.vb: Private Function FindFileWithExtensionInDirs(fileName As String, foundDirIndex As Integer, ParamArray dirs As String()) As String
  overload: PascalABCCompiler.Compiler.FindFileWithExtensionInDirs*
  nameWithType.vb: Compiler.FindFileWithExtensionInDirs(String, Integer, ParamArray String())
  fullName.vb: PascalABCCompiler.Compiler.FindFileWithExtensionInDirs(String, Integer, ParamArray String())
  name.vb: FindFileWithExtensionInDirs(String, Integer, ParamArray String())
- uid: PascalABCCompiler.Compiler.GetReferenceFileName(System.String,System.String)
  commentId: M:PascalABCCompiler.Compiler.GetReferenceFileName(System.String,System.String)
  id: GetReferenceFileName(System.String,System.String)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: GetReferenceFileName(string, string)
  nameWithType: Compiler.GetReferenceFileName(string, string)
  fullName: PascalABCCompiler.Compiler.GetReferenceFileName(string, string)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public static string GetReferenceFileName(string FileName, string curr_path = null)
    parameters:
    - id: FileName
      type: System.String
    - id: curr_path
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GetReferenceFileName(FileName As String, curr_path As String = Nothing) As String
  overload: PascalABCCompiler.Compiler.GetReferenceFileName*
  nameWithType.vb: Compiler.GetReferenceFileName(String, String)
  fullName.vb: PascalABCCompiler.Compiler.GetReferenceFileName(String, String)
  name.vb: GetReferenceFileName(String, String)
- uid: PascalABCCompiler.Compiler.GetReferenceFileName(System.String,PascalABCCompiler.SyntaxTree.SourceContext,System.String,System.Boolean)
  commentId: M:PascalABCCompiler.Compiler.GetReferenceFileName(System.String,PascalABCCompiler.SyntaxTree.SourceContext,System.String,System.Boolean)
  id: GetReferenceFileName(System.String,PascalABCCompiler.SyntaxTree.SourceContext,System.String,System.Boolean)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: GetReferenceFileName(string, SourceContext, string, bool)
  nameWithType: Compiler.GetReferenceFileName(string, SourceContext, string, bool)
  fullName: PascalABCCompiler.Compiler.GetReferenceFileName(string, PascalABCCompiler.SyntaxTree.SourceContext, string, bool)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private string GetReferenceFileName(string FileName, SourceContext sc, string curr_path, bool overwrite)
    parameters:
    - id: FileName
      type: System.String
    - id: sc
      type: PascalABCCompiler.SyntaxTree.SourceContext
    - id: curr_path
      type: System.String
    - id: overwrite
      type: System.Boolean
    return:
      type: System.String
    content.vb: Private Function GetReferenceFileName(FileName As String, sc As SourceContext, curr_path As String, overwrite As Boolean) As String
  overload: PascalABCCompiler.Compiler.GetReferenceFileName*
  nameWithType.vb: Compiler.GetReferenceFileName(String, SourceContext, String, Boolean)
  fullName.vb: PascalABCCompiler.Compiler.GetReferenceFileName(String, PascalABCCompiler.SyntaxTree.SourceContext, String, Boolean)
  name.vb: GetReferenceFileName(String, SourceContext, String, Boolean)
- uid: PascalABCCompiler.Compiler.GetUnitFileName(PascalABCCompiler.SyntaxTree.unit_or_namespace,System.String)
  commentId: M:PascalABCCompiler.Compiler.GetUnitFileName(PascalABCCompiler.SyntaxTree.unit_or_namespace,System.String)
  id: GetUnitFileName(PascalABCCompiler.SyntaxTree.unit_or_namespace,System.String)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: GetUnitFileName(unit_or_namespace, string)
  nameWithType: Compiler.GetUnitFileName(unit_or_namespace, string)
  fullName: PascalABCCompiler.Compiler.GetUnitFileName(PascalABCCompiler.SyntaxTree.unit_or_namespace, string)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public string GetUnitFileName(unit_or_namespace unitNode, string currentPath)
    parameters:
    - id: unitNode
      type: PascalABCCompiler.SyntaxTree.unit_or_namespace
    - id: currentPath
      type: System.String
    return:
      type: System.String
    content.vb: Public Function GetUnitFileName(unitNode As unit_or_namespace, currentPath As String) As String
  overload: PascalABCCompiler.Compiler.GetUnitFileName*
  nameWithType.vb: Compiler.GetUnitFileName(unit_or_namespace, String)
  fullName.vb: PascalABCCompiler.Compiler.GetUnitFileName(PascalABCCompiler.SyntaxTree.unit_or_namespace, String)
  name.vb: GetUnitFileName(unit_or_namespace, String)
- uid: PascalABCCompiler.Compiler.GetUnitFileName(System.String,System.String,System.String,PascalABCCompiler.SyntaxTree.SourceContext)
  commentId: M:PascalABCCompiler.Compiler.GetUnitFileName(System.String,System.String,System.String,PascalABCCompiler.SyntaxTree.SourceContext)
  id: GetUnitFileName(System.String,System.String,System.String,PascalABCCompiler.SyntaxTree.SourceContext)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: GetUnitFileName(string, string, string, SourceContext)
  nameWithType: Compiler.GetUnitFileName(string, string, string, SourceContext)
  fullName: PascalABCCompiler.Compiler.GetUnitFileName(string, string, string, PascalABCCompiler.SyntaxTree.SourceContext)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public string GetUnitFileName(string unitName, string usesPath, string currentPath, SourceContext sourceContext)
    parameters:
    - id: unitName
      type: System.String
    - id: usesPath
      type: System.String
    - id: currentPath
      type: System.String
    - id: sourceContext
      type: PascalABCCompiler.SyntaxTree.SourceContext
    return:
      type: System.String
    content.vb: Public Function GetUnitFileName(unitName As String, usesPath As String, currentPath As String, sourceContext As SourceContext) As String
  overload: PascalABCCompiler.Compiler.GetUnitFileName*
  nameWithType.vb: Compiler.GetUnitFileName(String, String, String, SourceContext)
  fullName.vb: PascalABCCompiler.Compiler.GetUnitFileName(String, String, String, PascalABCCompiler.SyntaxTree.SourceContext)
  name.vb: GetUnitFileName(String, String, String, SourceContext)
- uid: PascalABCCompiler.Compiler.AddStandardUnitsToInterfaceUsesSection(PascalABCCompiler.CompilationUnit)
  commentId: M:PascalABCCompiler.Compiler.AddStandardUnitsToInterfaceUsesSection(PascalABCCompiler.CompilationUnit)
  id: AddStandardUnitsToInterfaceUsesSection(PascalABCCompiler.CompilationUnit)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: AddStandardUnitsToInterfaceUsesSection(CompilationUnit)
  nameWithType: Compiler.AddStandardUnitsToInterfaceUsesSection(CompilationUnit)
  fullName: PascalABCCompiler.Compiler.AddStandardUnitsToInterfaceUsesSection(PascalABCCompiler.CompilationUnit)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public void AddStandardUnitsToInterfaceUsesSection(CompilationUnit currentUnit)
    parameters:
    - id: currentUnit
      type: PascalABCCompiler.CompilationUnit
    content.vb: Public Sub AddStandardUnitsToInterfaceUsesSection(currentUnit As CompilationUnit)
  overload: PascalABCCompiler.Compiler.AddStandardUnitsToInterfaceUsesSection*
- uid: PascalABCCompiler.Compiler.PreloadReference(PascalABCCompiler.TreeRealization.compiler_directive)
  commentId: M:PascalABCCompiler.Compiler.PreloadReference(PascalABCCompiler.TreeRealization.compiler_directive)
  id: PreloadReference(PascalABCCompiler.TreeRealization.compiler_directive)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: PreloadReference(compiler_directive)
  nameWithType: Compiler.PreloadReference(compiler_directive)
  fullName: PascalABCCompiler.Compiler.PreloadReference(PascalABCCompiler.TreeRealization.compiler_directive)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private Assembly PreloadReference(compiler_directive reference)
    parameters:
    - id: reference
      type: PascalABCCompiler.TreeRealization.compiler_directive
    return:
      type: System.Reflection.Assembly
    content.vb: Private Function PreloadReference(reference As compiler_directive) As Assembly
  overload: PascalABCCompiler.Compiler.PreloadReference*
- uid: PascalABCCompiler.Compiler.CompileReference(PascalABCCompiler.TreeRealization.unit_node_list,PascalABCCompiler.TreeRealization.compiler_directive)
  commentId: M:PascalABCCompiler.Compiler.CompileReference(PascalABCCompiler.TreeRealization.unit_node_list,PascalABCCompiler.TreeRealization.compiler_directive)
  id: CompileReference(PascalABCCompiler.TreeRealization.unit_node_list,PascalABCCompiler.TreeRealization.compiler_directive)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: CompileReference(unit_node_list, compiler_directive)
  nameWithType: Compiler.CompileReference(unit_node_list, compiler_directive)
  fullName: PascalABCCompiler.Compiler.CompileReference(PascalABCCompiler.TreeRealization.unit_node_list, PascalABCCompiler.TreeRealization.compiler_directive)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private CompilationUnit CompileReference(unit_node_list dlls, compiler_directive reference)
    parameters:
    - id: dlls
      type: PascalABCCompiler.TreeRealization.unit_node_list
    - id: reference
      type: PascalABCCompiler.TreeRealization.compiler_directive
    return:
      type: PascalABCCompiler.CompilationUnit
    content.vb: Private Function CompileReference(dlls As unit_node_list, reference As compiler_directive) As CompilationUnit
  overload: PascalABCCompiler.Compiler.CompileReference*
- uid: PascalABCCompiler.Compiler.GetSourceContext(PascalABCCompiler.TreeRealization.compiler_directive)
  commentId: M:PascalABCCompiler.Compiler.GetSourceContext(PascalABCCompiler.TreeRealization.compiler_directive)
  id: GetSourceContext(PascalABCCompiler.TreeRealization.compiler_directive)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: GetSourceContext(compiler_directive)
  nameWithType: Compiler.GetSourceContext(compiler_directive)
  fullName: PascalABCCompiler.Compiler.GetSourceContext(PascalABCCompiler.TreeRealization.compiler_directive)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private SourceContext GetSourceContext(compiler_directive directive)
    parameters:
    - id: directive
      type: PascalABCCompiler.TreeRealization.compiler_directive
    return:
      type: PascalABCCompiler.SyntaxTree.SourceContext
    content.vb: Private Function GetSourceContext(directive As compiler_directive) As SourceContext
  overload: PascalABCCompiler.Compiler.GetSourceContext*
- uid: PascalABCCompiler.Compiler.HasIncludeNamespaceDirective(PascalABCCompiler.CompilationUnit)
  commentId: M:PascalABCCompiler.Compiler.HasIncludeNamespaceDirective(PascalABCCompiler.CompilationUnit)
  id: HasIncludeNamespaceDirective(PascalABCCompiler.CompilationUnit)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: HasIncludeNamespaceDirective(CompilationUnit)
  nameWithType: Compiler.HasIncludeNamespaceDirective(CompilationUnit)
  fullName: PascalABCCompiler.Compiler.HasIncludeNamespaceDirective(PascalABCCompiler.CompilationUnit)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private bool HasIncludeNamespaceDirective(CompilationUnit unit)
    parameters:
    - id: unit
      type: PascalABCCompiler.CompilationUnit
    return:
      type: System.Boolean
    content.vb: Private Function HasIncludeNamespaceDirective(unit As CompilationUnit) As Boolean
  overload: PascalABCCompiler.Compiler.HasIncludeNamespaceDirective*
- uid: PascalABCCompiler.Compiler.PrepareUserNamespacesUsedInTheCurrentUnit(PascalABCCompiler.CompilationUnit)
  commentId: M:PascalABCCompiler.Compiler.PrepareUserNamespacesUsedInTheCurrentUnit(PascalABCCompiler.CompilationUnit)
  id: PrepareUserNamespacesUsedInTheCurrentUnit(PascalABCCompiler.CompilationUnit)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: PrepareUserNamespacesUsedInTheCurrentUnit(CompilationUnit)
  nameWithType: Compiler.PrepareUserNamespacesUsedInTheCurrentUnit(CompilationUnit)
  fullName: PascalABCCompiler.Compiler.PrepareUserNamespacesUsedInTheCurrentUnit(PascalABCCompiler.CompilationUnit)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private Dictionary<string, syntax_namespace_node> PrepareUserNamespacesUsedInTheCurrentUnit(CompilationUnit compilationUnit)
    parameters:
    - id: compilationUnit
      type: PascalABCCompiler.CompilationUnit
    return:
      type: System.Collections.Generic.Dictionary{System.String,PascalABCCompiler.SyntaxTree.syntax_namespace_node}
    content.vb: Private Function PrepareUserNamespacesUsedInTheCurrentUnit(compilationUnit As CompilationUnit) As Dictionary(Of String, syntax_namespace_node)
  overload: PascalABCCompiler.Compiler.PrepareUserNamespacesUsedInTheCurrentUnit*
- uid: PascalABCCompiler.Compiler.AddNamespacesToMainDefinitions(PascalABCCompiler.SyntaxTree.unit_module,PascalABCCompiler.SyntaxTree.program_module,System.Collections.Generic.Dictionary{System.String,PascalABCCompiler.SyntaxTree.syntax_namespace_node})
  commentId: M:PascalABCCompiler.Compiler.AddNamespacesToMainDefinitions(PascalABCCompiler.SyntaxTree.unit_module,PascalABCCompiler.SyntaxTree.program_module,System.Collections.Generic.Dictionary{System.String,PascalABCCompiler.SyntaxTree.syntax_namespace_node})
  id: AddNamespacesToMainDefinitions(PascalABCCompiler.SyntaxTree.unit_module,PascalABCCompiler.SyntaxTree.program_module,System.Collections.Generic.Dictionary{System.String,PascalABCCompiler.SyntaxTree.syntax_namespace_node})
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: AddNamespacesToMainDefinitions(unit_module, program_module, Dictionary<string, syntax_namespace_node>)
  nameWithType: Compiler.AddNamespacesToMainDefinitions(unit_module, program_module, Dictionary<string, syntax_namespace_node>)
  fullName: PascalABCCompiler.Compiler.AddNamespacesToMainDefinitions(PascalABCCompiler.SyntaxTree.unit_module, PascalABCCompiler.SyntaxTree.program_module, System.Collections.Generic.Dictionary<string, PascalABCCompiler.SyntaxTree.syntax_namespace_node>)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private void AddNamespacesToMainDefinitions(unit_module mainLibrary, program_module main_program, Dictionary<string, syntax_namespace_node> namespaces)
    parameters:
    - id: mainLibrary
      type: PascalABCCompiler.SyntaxTree.unit_module
    - id: main_program
      type: PascalABCCompiler.SyntaxTree.program_module
    - id: namespaces
      type: System.Collections.Generic.Dictionary{System.String,PascalABCCompiler.SyntaxTree.syntax_namespace_node}
    content.vb: Private Sub AddNamespacesToMainDefinitions(mainLibrary As unit_module, main_program As program_module, namespaces As Dictionary(Of String, syntax_namespace_node))
  overload: PascalABCCompiler.Compiler.AddNamespacesToMainDefinitions*
  nameWithType.vb: Compiler.AddNamespacesToMainDefinitions(unit_module, program_module, Dictionary(Of String, syntax_namespace_node))
  fullName.vb: PascalABCCompiler.Compiler.AddNamespacesToMainDefinitions(PascalABCCompiler.SyntaxTree.unit_module, PascalABCCompiler.SyntaxTree.program_module, System.Collections.Generic.Dictionary(Of String, PascalABCCompiler.SyntaxTree.syntax_namespace_node))
  name.vb: AddNamespacesToMainDefinitions(unit_module, program_module, Dictionary(Of String, syntax_namespace_node))
- uid: PascalABCCompiler.Compiler.AddNamespacesToMainUsesList(PascalABCCompiler.SyntaxTree.unit_module,PascalABCCompiler.SyntaxTree.program_module,System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace})
  commentId: M:PascalABCCompiler.Compiler.AddNamespacesToMainUsesList(PascalABCCompiler.SyntaxTree.unit_module,PascalABCCompiler.SyntaxTree.program_module,System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace})
  id: AddNamespacesToMainUsesList(PascalABCCompiler.SyntaxTree.unit_module,PascalABCCompiler.SyntaxTree.program_module,System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace})
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: AddNamespacesToMainUsesList(unit_module, program_module, List<unit_or_namespace>)
  nameWithType: Compiler.AddNamespacesToMainUsesList(unit_module, program_module, List<unit_or_namespace>)
  fullName: PascalABCCompiler.Compiler.AddNamespacesToMainUsesList(PascalABCCompiler.SyntaxTree.unit_module, PascalABCCompiler.SyntaxTree.program_module, System.Collections.Generic.List<PascalABCCompiler.SyntaxTree.unit_or_namespace>)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private void AddNamespacesToMainUsesList(unit_module mainLibrary, program_module main_program, List<unit_or_namespace> namespaceModules)
    parameters:
    - id: mainLibrary
      type: PascalABCCompiler.SyntaxTree.unit_module
    - id: main_program
      type: PascalABCCompiler.SyntaxTree.program_module
    - id: namespaceModules
      type: System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace}
    content.vb: Private Sub AddNamespacesToMainUsesList(mainLibrary As unit_module, main_program As program_module, namespaceModules As List(Of unit_or_namespace))
  overload: PascalABCCompiler.Compiler.AddNamespacesToMainUsesList*
  nameWithType.vb: Compiler.AddNamespacesToMainUsesList(unit_module, program_module, List(Of unit_or_namespace))
  fullName.vb: PascalABCCompiler.Compiler.AddNamespacesToMainUsesList(PascalABCCompiler.SyntaxTree.unit_module, PascalABCCompiler.SyntaxTree.program_module, System.Collections.Generic.List(Of PascalABCCompiler.SyntaxTree.unit_or_namespace))
  name.vb: AddNamespacesToMainUsesList(unit_module, program_module, List(Of unit_or_namespace))
- uid: PascalABCCompiler.Compiler.AddDeclarationsAndReferencedUnitsToNamespaces(System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace},System.String,PascalABCCompiler.SyntaxTree.unit_module,PascalABCCompiler.SyntaxTree.syntax_namespace_node)
  commentId: M:PascalABCCompiler.Compiler.AddDeclarationsAndReferencedUnitsToNamespaces(System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace},System.String,PascalABCCompiler.SyntaxTree.unit_module,PascalABCCompiler.SyntaxTree.syntax_namespace_node)
  id: AddDeclarationsAndReferencedUnitsToNamespaces(System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace},System.String,PascalABCCompiler.SyntaxTree.unit_module,PascalABCCompiler.SyntaxTree.syntax_namespace_node)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: AddDeclarationsAndReferencedUnitsToNamespaces(List<unit_or_namespace>, string, unit_module, syntax_namespace_node)
  nameWithType: Compiler.AddDeclarationsAndReferencedUnitsToNamespaces(List<unit_or_namespace>, string, unit_module, syntax_namespace_node)
  fullName: PascalABCCompiler.Compiler.AddDeclarationsAndReferencedUnitsToNamespaces(System.Collections.Generic.List<PascalABCCompiler.SyntaxTree.unit_or_namespace>, string, PascalABCCompiler.SyntaxTree.unit_module, PascalABCCompiler.SyntaxTree.syntax_namespace_node)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private void AddDeclarationsAndReferencedUnitsToNamespaces(List<unit_or_namespace> namespace_modules, string file, unit_module unitModule, syntax_namespace_node namespaceNode)
    parameters:
    - id: namespace_modules
      type: System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace}
    - id: file
      type: System.String
    - id: unitModule
      type: PascalABCCompiler.SyntaxTree.unit_module
    - id: namespaceNode
      type: PascalABCCompiler.SyntaxTree.syntax_namespace_node
    content.vb: Private Sub AddDeclarationsAndReferencedUnitsToNamespaces(namespace_modules As List(Of unit_or_namespace), file As String, unitModule As unit_module, namespaceNode As syntax_namespace_node)
  overload: PascalABCCompiler.Compiler.AddDeclarationsAndReferencedUnitsToNamespaces*
  nameWithType.vb: Compiler.AddDeclarationsAndReferencedUnitsToNamespaces(List(Of unit_or_namespace), String, unit_module, syntax_namespace_node)
  fullName.vb: PascalABCCompiler.Compiler.AddDeclarationsAndReferencedUnitsToNamespaces(System.Collections.Generic.List(Of PascalABCCompiler.SyntaxTree.unit_or_namespace), String, PascalABCCompiler.SyntaxTree.unit_module, PascalABCCompiler.SyntaxTree.syntax_namespace_node)
  name.vb: AddDeclarationsAndReferencedUnitsToNamespaces(List(Of unit_or_namespace), String, unit_module, syntax_namespace_node)
- uid: PascalABCCompiler.Compiler.SemanticCheckIsUserNamespace(PascalABCCompiler.SyntaxTree.compilation_unit)
  commentId: M:PascalABCCompiler.Compiler.SemanticCheckIsUserNamespace(PascalABCCompiler.SyntaxTree.compilation_unit)
  id: SemanticCheckIsUserNamespace(PascalABCCompiler.SyntaxTree.compilation_unit)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: SemanticCheckIsUserNamespace(compilation_unit)
  nameWithType: Compiler.SemanticCheckIsUserNamespace(compilation_unit)
  fullName: PascalABCCompiler.Compiler.SemanticCheckIsUserNamespace(PascalABCCompiler.SyntaxTree.compilation_unit)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private void SemanticCheckIsUserNamespace(compilation_unit unitSyntaxTree)
    parameters:
    - id: unitSyntaxTree
      type: PascalABCCompiler.SyntaxTree.compilation_unit
    content.vb: Private Sub SemanticCheckIsUserNamespace(unitSyntaxTree As compilation_unit)
  overload: PascalABCCompiler.Compiler.SemanticCheckIsUserNamespace*
- uid: PascalABCCompiler.Compiler.GetIncludedFilesFromDirectives(PascalABCCompiler.CompilationUnit,System.Collections.Generic.List{PascalABCCompiler.TreeRealization.compiler_directive})
  commentId: M:PascalABCCompiler.Compiler.GetIncludedFilesFromDirectives(PascalABCCompiler.CompilationUnit,System.Collections.Generic.List{PascalABCCompiler.TreeRealization.compiler_directive})
  id: GetIncludedFilesFromDirectives(PascalABCCompiler.CompilationUnit,System.Collections.Generic.List{PascalABCCompiler.TreeRealization.compiler_directive})
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: GetIncludedFilesFromDirectives(CompilationUnit, List<compiler_directive>)
  nameWithType: Compiler.GetIncludedFilesFromDirectives(CompilationUnit, List<compiler_directive>)
  fullName: PascalABCCompiler.Compiler.GetIncludedFilesFromDirectives(PascalABCCompiler.CompilationUnit, System.Collections.Generic.List<PascalABCCompiler.TreeRealization.compiler_directive>)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private static List<string> GetIncludedFilesFromDirectives(CompilationUnit compilationUnit, List<compiler_directive> directives)
    parameters:
    - id: compilationUnit
      type: PascalABCCompiler.CompilationUnit
    - id: directives
      type: System.Collections.Generic.List{PascalABCCompiler.TreeRealization.compiler_directive}
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Private Shared Function GetIncludedFilesFromDirectives(compilationUnit As CompilationUnit, directives As List(Of compiler_directive)) As List(Of String)
  overload: PascalABCCompiler.Compiler.GetIncludedFilesFromDirectives*
  nameWithType.vb: Compiler.GetIncludedFilesFromDirectives(CompilationUnit, List(Of compiler_directive))
  fullName.vb: PascalABCCompiler.Compiler.GetIncludedFilesFromDirectives(PascalABCCompiler.CompilationUnit, System.Collections.Generic.List(Of PascalABCCompiler.TreeRealization.compiler_directive))
  name.vb: GetIncludedFilesFromDirectives(CompilationUnit, List(Of compiler_directive))
- uid: PascalABCCompiler.Compiler.SemanticCheckNoIncludeNamespaceDirectivesInUnit(PascalABCCompiler.CompilationUnit)
  commentId: M:PascalABCCompiler.Compiler.SemanticCheckNoIncludeNamespaceDirectivesInUnit(PascalABCCompiler.CompilationUnit)
  id: SemanticCheckNoIncludeNamespaceDirectivesInUnit(PascalABCCompiler.CompilationUnit)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: SemanticCheckNoIncludeNamespaceDirectivesInUnit(CompilationUnit)
  nameWithType: Compiler.SemanticCheckNoIncludeNamespaceDirectivesInUnit(CompilationUnit)
  fullName: PascalABCCompiler.Compiler.SemanticCheckNoIncludeNamespaceDirectivesInUnit(PascalABCCompiler.CompilationUnit)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private void SemanticCheckNoIncludeNamespaceDirectivesInUnit(CompilationUnit currentUnit)
    parameters:
    - id: currentUnit
      type: PascalABCCompiler.CompilationUnit
    content.vb: Private Sub SemanticCheckNoIncludeNamespaceDirectivesInUnit(currentUnit As CompilationUnit)
  overload: PascalABCCompiler.Compiler.SemanticCheckNoIncludeNamespaceDirectivesInUnit*
- uid: PascalABCCompiler.Compiler.GetNamespaceSyntaxTree(System.String)
  commentId: M:PascalABCCompiler.Compiler.GetNamespaceSyntaxTree(System.String)
  id: GetNamespaceSyntaxTree(System.String)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: GetNamespaceSyntaxTree(string)
  nameWithType: Compiler.GetNamespaceSyntaxTree(string)
  fullName: PascalABCCompiler.Compiler.GetNamespaceSyntaxTree(string)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private compilation_unit GetNamespaceSyntaxTree(string fileName)
    parameters:
    - id: fileName
      type: System.String
    return:
      type: PascalABCCompiler.SyntaxTree.compilation_unit
    content.vb: Private Function GetNamespaceSyntaxTree(fileName As String) As compilation_unit
  overload: PascalABCCompiler.Compiler.GetNamespaceSyntaxTree*
  nameWithType.vb: Compiler.GetNamespaceSyntaxTree(String)
  fullName.vb: PascalABCCompiler.Compiler.GetNamespaceSyntaxTree(String)
  name.vb: GetNamespaceSyntaxTree(String)
- uid: PascalABCCompiler.Compiler.GetReferences(PascalABCCompiler.CompilationUnit)
  commentId: M:PascalABCCompiler.Compiler.GetReferences(PascalABCCompiler.CompilationUnit)
  id: GetReferences(PascalABCCompiler.CompilationUnit)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: GetReferences(CompilationUnit)
  nameWithType: Compiler.GetReferences(CompilationUnit)
  fullName: PascalABCCompiler.Compiler.GetReferences(PascalABCCompiler.CompilationUnit)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public unit_node_list GetReferences(CompilationUnit compilationUnit)
    parameters:
    - id: compilationUnit
      type: PascalABCCompiler.CompilationUnit
    return:
      type: PascalABCCompiler.TreeRealization.unit_node_list
    content.vb: Public Function GetReferences(compilationUnit As CompilationUnit) As unit_node_list
  overload: PascalABCCompiler.Compiler.GetReferences*
- uid: PascalABCCompiler.Compiler.DisablePABCRtlIfUsingDotnet5(System.Collections.Generic.List{PascalABCCompiler.TreeRealization.compiler_directive})
  commentId: M:PascalABCCompiler.Compiler.DisablePABCRtlIfUsingDotnet5(System.Collections.Generic.List{PascalABCCompiler.TreeRealization.compiler_directive})
  id: DisablePABCRtlIfUsingDotnet5(System.Collections.Generic.List{PascalABCCompiler.TreeRealization.compiler_directive})
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: DisablePABCRtlIfUsingDotnet5(List<compiler_directive>)
  nameWithType: Compiler.DisablePABCRtlIfUsingDotnet5(List<compiler_directive>)
  fullName: PascalABCCompiler.Compiler.DisablePABCRtlIfUsingDotnet5(System.Collections.Generic.List<PascalABCCompiler.TreeRealization.compiler_directive>)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private void DisablePABCRtlIfUsingDotnet5(List<compiler_directive> directives)
    parameters:
    - id: directives
      type: System.Collections.Generic.List{PascalABCCompiler.TreeRealization.compiler_directive}
    content.vb: Private Sub DisablePABCRtlIfUsingDotnet5(directives As List(Of compiler_directive))
  overload: PascalABCCompiler.Compiler.DisablePABCRtlIfUsingDotnet5*
  nameWithType.vb: Compiler.DisablePABCRtlIfUsingDotnet5(List(Of compiler_directive))
  fullName.vb: PascalABCCompiler.Compiler.DisablePABCRtlIfUsingDotnet5(System.Collections.Generic.List(Of PascalABCCompiler.TreeRealization.compiler_directive))
  name.vb: DisablePABCRtlIfUsingDotnet5(List(Of compiler_directive))
- uid: PascalABCCompiler.Compiler.AddReferencesToNetSystemLibraries(PascalABCCompiler.CompilationUnit,System.Collections.Generic.List{PascalABCCompiler.TreeRealization.compiler_directive})
  commentId: M:PascalABCCompiler.Compiler.AddReferencesToNetSystemLibraries(PascalABCCompiler.CompilationUnit,System.Collections.Generic.List{PascalABCCompiler.TreeRealization.compiler_directive})
  id: AddReferencesToNetSystemLibraries(PascalABCCompiler.CompilationUnit,System.Collections.Generic.List{PascalABCCompiler.TreeRealization.compiler_directive})
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: AddReferencesToNetSystemLibraries(CompilationUnit, List<compiler_directive>)
  nameWithType: Compiler.AddReferencesToNetSystemLibraries(CompilationUnit, List<compiler_directive>)
  fullName: PascalABCCompiler.Compiler.AddReferencesToNetSystemLibraries(PascalABCCompiler.CompilationUnit, System.Collections.Generic.List<PascalABCCompiler.TreeRealization.compiler_directive>)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  summary: Добавляет ссылки на стандартные системные dll .NET - версия с директивами уровня семантики
  example: []
  syntax:
    content: private void AddReferencesToNetSystemLibraries(CompilationUnit compilationUnit, List<compiler_directive> directives)
    parameters:
    - id: compilationUnit
      type: PascalABCCompiler.CompilationUnit
      description: ''
    - id: directives
      type: System.Collections.Generic.List{PascalABCCompiler.TreeRealization.compiler_directive}
      description: ''
    content.vb: Private Sub AddReferencesToNetSystemLibraries(compilationUnit As CompilationUnit, directives As List(Of compiler_directive))
  overload: PascalABCCompiler.Compiler.AddReferencesToNetSystemLibraries*
  nameWithType.vb: Compiler.AddReferencesToNetSystemLibraries(CompilationUnit, List(Of compiler_directive))
  fullName.vb: PascalABCCompiler.Compiler.AddReferencesToNetSystemLibraries(PascalABCCompiler.CompilationUnit, System.Collections.Generic.List(Of PascalABCCompiler.TreeRealization.compiler_directive))
  name.vb: AddReferencesToNetSystemLibraries(CompilationUnit, List(Of compiler_directive))
- uid: PascalABCCompiler.Compiler.AddReferencesToNetSystemLibraries(PascalABCCompiler.CompilationUnit,System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.compiler_directive})
  commentId: M:PascalABCCompiler.Compiler.AddReferencesToNetSystemLibraries(PascalABCCompiler.CompilationUnit,System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.compiler_directive})
  id: AddReferencesToNetSystemLibraries(PascalABCCompiler.CompilationUnit,System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.compiler_directive})
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: AddReferencesToNetSystemLibraries(CompilationUnit, List<compiler_directive>)
  nameWithType: Compiler.AddReferencesToNetSystemLibraries(CompilationUnit, List<compiler_directive>)
  fullName: PascalABCCompiler.Compiler.AddReferencesToNetSystemLibraries(PascalABCCompiler.CompilationUnit, System.Collections.Generic.List<PascalABCCompiler.SyntaxTree.compiler_directive>)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  summary: Добавляет ссылки на стандартные системные dll .NET - версия с директивами уровня синтаксиса
  example: []
  syntax:
    content: private void AddReferencesToNetSystemLibraries(CompilationUnit compilationUnit, List<compiler_directive> directives)
    parameters:
    - id: compilationUnit
      type: PascalABCCompiler.CompilationUnit
      description: ''
    - id: directives
      type: System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.compiler_directive}
      description: ''
    content.vb: Private Sub AddReferencesToNetSystemLibraries(compilationUnit As CompilationUnit, directives As List(Of compiler_directive))
  overload: PascalABCCompiler.Compiler.AddReferencesToNetSystemLibraries*
  nameWithType.vb: Compiler.AddReferencesToNetSystemLibraries(CompilationUnit, List(Of compiler_directive))
  fullName.vb: PascalABCCompiler.Compiler.AddReferencesToNetSystemLibraries(PascalABCCompiler.CompilationUnit, System.Collections.Generic.List(Of PascalABCCompiler.SyntaxTree.compiler_directive))
  name.vb: AddReferencesToNetSystemLibraries(CompilationUnit, List(Of compiler_directive))
- uid: PascalABCCompiler.Compiler.IsPossibleNetNamespaceOrStandardPasFile(PascalABCCompiler.SyntaxTree.unit_or_namespace,System.Boolean,System.String)
  commentId: M:PascalABCCompiler.Compiler.IsPossibleNetNamespaceOrStandardPasFile(PascalABCCompiler.SyntaxTree.unit_or_namespace,System.Boolean,System.String)
  id: IsPossibleNetNamespaceOrStandardPasFile(PascalABCCompiler.SyntaxTree.unit_or_namespace,System.Boolean,System.String)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: IsPossibleNetNamespaceOrStandardPasFile(unit_or_namespace, bool, string)
  nameWithType: Compiler.IsPossibleNetNamespaceOrStandardPasFile(unit_or_namespace, bool, string)
  fullName: PascalABCCompiler.Compiler.IsPossibleNetNamespaceOrStandardPasFile(PascalABCCompiler.SyntaxTree.unit_or_namespace, bool, string)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private bool IsPossibleNetNamespaceOrStandardPasFile(unit_or_namespace name_space, bool addToStandardModules, string currentPath)
    parameters:
    - id: name_space
      type: PascalABCCompiler.SyntaxTree.unit_or_namespace
    - id: addToStandardModules
      type: System.Boolean
    - id: currentPath
      type: System.String
    return:
      type: System.Boolean
    content.vb: Private Function IsPossibleNetNamespaceOrStandardPasFile(name_space As unit_or_namespace, addToStandardModules As Boolean, currentPath As String) As Boolean
  overload: PascalABCCompiler.Compiler.IsPossibleNetNamespaceOrStandardPasFile*
  nameWithType.vb: Compiler.IsPossibleNetNamespaceOrStandardPasFile(unit_or_namespace, Boolean, String)
  fullName.vb: PascalABCCompiler.Compiler.IsPossibleNetNamespaceOrStandardPasFile(PascalABCCompiler.SyntaxTree.unit_or_namespace, Boolean, String)
  name.vb: IsPossibleNetNamespaceOrStandardPasFile(unit_or_namespace, Boolean, String)
- uid: PascalABCCompiler.Compiler.GetNamespace(PascalABCCompiler.SyntaxTree.unit_or_namespace)
  commentId: M:PascalABCCompiler.Compiler.GetNamespace(PascalABCCompiler.SyntaxTree.unit_or_namespace)
  id: GetNamespace(PascalABCCompiler.SyntaxTree.unit_or_namespace)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: GetNamespace(unit_or_namespace)
  nameWithType: Compiler.GetNamespace(unit_or_namespace)
  fullName: PascalABCCompiler.Compiler.GetNamespace(PascalABCCompiler.SyntaxTree.unit_or_namespace)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public using_namespace GetNamespace(unit_or_namespace _name_space)
    parameters:
    - id: _name_space
      type: PascalABCCompiler.SyntaxTree.unit_or_namespace
    return:
      type: PascalABCCompiler.TreeRealization.using_namespace
    content.vb: Public Function GetNamespace(_name_space As unit_or_namespace) As using_namespace
  overload: PascalABCCompiler.Compiler.GetNamespace*
- uid: PascalABCCompiler.Compiler.GetNamespace(PascalABCCompiler.TreeRealization.using_namespace_list,System.String,PascalABCCompiler.SyntaxTree.unit_or_namespace,System.Boolean,System.Collections.Generic.Dictionary{System.String,PascalABCCompiler.SyntaxTree.syntax_namespace_node})
  commentId: M:PascalABCCompiler.Compiler.GetNamespace(PascalABCCompiler.TreeRealization.using_namespace_list,System.String,PascalABCCompiler.SyntaxTree.unit_or_namespace,System.Boolean,System.Collections.Generic.Dictionary{System.String,PascalABCCompiler.SyntaxTree.syntax_namespace_node})
  id: GetNamespace(PascalABCCompiler.TreeRealization.using_namespace_list,System.String,PascalABCCompiler.SyntaxTree.unit_or_namespace,System.Boolean,System.Collections.Generic.Dictionary{System.String,PascalABCCompiler.SyntaxTree.syntax_namespace_node})
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: GetNamespace(using_namespace_list, string, unit_or_namespace, bool, Dictionary<string, syntax_namespace_node>)
  nameWithType: Compiler.GetNamespace(using_namespace_list, string, unit_or_namespace, bool, Dictionary<string, syntax_namespace_node>)
  fullName: PascalABCCompiler.Compiler.GetNamespace(PascalABCCompiler.TreeRealization.using_namespace_list, string, PascalABCCompiler.SyntaxTree.unit_or_namespace, bool, System.Collections.Generic.Dictionary<string, PascalABCCompiler.SyntaxTree.syntax_namespace_node>)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  summary: Формирует узел семантического дерева, соответствующий пространству имен (.NET или пользовательскому)
  example: []
  syntax:
    content: private using_namespace GetNamespace(using_namespace_list usingList, string fullNamespaceName, unit_or_namespace name_space, bool mightBeUnit, Dictionary<string, syntax_namespace_node> namespaces)
    parameters:
    - id: usingList
      type: PascalABCCompiler.TreeRealization.using_namespace_list
    - id: fullNamespaceName
      type: System.String
    - id: name_space
      type: PascalABCCompiler.SyntaxTree.unit_or_namespace
    - id: mightBeUnit
      type: System.Boolean
    - id: namespaces
      type: System.Collections.Generic.Dictionary{System.String,PascalABCCompiler.SyntaxTree.syntax_namespace_node}
    return:
      type: PascalABCCompiler.TreeRealization.using_namespace
    content.vb: Private Function GetNamespace(usingList As using_namespace_list, fullNamespaceName As String, name_space As unit_or_namespace, mightBeUnit As Boolean, namespaces As Dictionary(Of String, syntax_namespace_node)) As using_namespace
  overload: PascalABCCompiler.Compiler.GetNamespace*
  exceptions:
  - type: PascalABCCompiler.Errors.UnitNotFound
    commentId: T:PascalABCCompiler.Errors.UnitNotFound
    description: ''
  - type: PascalABCCompiler.TreeConverter.NamespaceNotFound
    commentId: T:PascalABCCompiler.TreeConverter.NamespaceNotFound
    description: ''
  nameWithType.vb: Compiler.GetNamespace(using_namespace_list, String, unit_or_namespace, Boolean, Dictionary(Of String, syntax_namespace_node))
  fullName.vb: PascalABCCompiler.Compiler.GetNamespace(PascalABCCompiler.TreeRealization.using_namespace_list, String, PascalABCCompiler.SyntaxTree.unit_or_namespace, Boolean, System.Collections.Generic.Dictionary(Of String, PascalABCCompiler.SyntaxTree.syntax_namespace_node))
  name.vb: GetNamespace(using_namespace_list, String, unit_or_namespace, Boolean, Dictionary(Of String, syntax_namespace_node))
- uid: PascalABCCompiler.Compiler.AddNamespacesToUsingList(PascalABCCompiler.TreeRealization.using_namespace_list,System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace},System.Boolean,System.Collections.Generic.Dictionary{System.String,PascalABCCompiler.SyntaxTree.syntax_namespace_node})
  commentId: M:PascalABCCompiler.Compiler.AddNamespacesToUsingList(PascalABCCompiler.TreeRealization.using_namespace_list,System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace},System.Boolean,System.Collections.Generic.Dictionary{System.String,PascalABCCompiler.SyntaxTree.syntax_namespace_node})
  id: AddNamespacesToUsingList(PascalABCCompiler.TreeRealization.using_namespace_list,System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace},System.Boolean,System.Collections.Generic.Dictionary{System.String,PascalABCCompiler.SyntaxTree.syntax_namespace_node})
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: AddNamespacesToUsingList(using_namespace_list, List<unit_or_namespace>, bool, Dictionary<string, syntax_namespace_node>)
  nameWithType: Compiler.AddNamespacesToUsingList(using_namespace_list, List<unit_or_namespace>, bool, Dictionary<string, syntax_namespace_node>)
  fullName: PascalABCCompiler.Compiler.AddNamespacesToUsingList(PascalABCCompiler.TreeRealization.using_namespace_list, System.Collections.Generic.List<PascalABCCompiler.SyntaxTree.unit_or_namespace>, bool, System.Collections.Generic.Dictionary<string, PascalABCCompiler.SyntaxTree.syntax_namespace_node>)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public void AddNamespacesToUsingList(using_namespace_list usingList, List<unit_or_namespace> possibleNamespaces, bool mightContainUnits, Dictionary<string, syntax_namespace_node> namespaces)
    parameters:
    - id: usingList
      type: PascalABCCompiler.TreeRealization.using_namespace_list
    - id: possibleNamespaces
      type: System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace}
    - id: mightContainUnits
      type: System.Boolean
    - id: namespaces
      type: System.Collections.Generic.Dictionary{System.String,PascalABCCompiler.SyntaxTree.syntax_namespace_node}
    content.vb: Public Sub AddNamespacesToUsingList(usingList As using_namespace_list, possibleNamespaces As List(Of unit_or_namespace), mightContainUnits As Boolean, namespaces As Dictionary(Of String, syntax_namespace_node))
  overload: PascalABCCompiler.Compiler.AddNamespacesToUsingList*
  nameWithType.vb: Compiler.AddNamespacesToUsingList(using_namespace_list, List(Of unit_or_namespace), Boolean, Dictionary(Of String, syntax_namespace_node))
  fullName.vb: PascalABCCompiler.Compiler.AddNamespacesToUsingList(PascalABCCompiler.TreeRealization.using_namespace_list, System.Collections.Generic.List(Of PascalABCCompiler.SyntaxTree.unit_or_namespace), Boolean, System.Collections.Generic.Dictionary(Of String, PascalABCCompiler.SyntaxTree.syntax_namespace_node))
  name.vb: AddNamespacesToUsingList(using_namespace_list, List(Of unit_or_namespace), Boolean, Dictionary(Of String, syntax_namespace_node))
- uid: PascalABCCompiler.Compiler.AddNamespacesToUsingList(PascalABCCompiler.TreeRealization.using_namespace_list,PascalABCCompiler.SyntaxTree.using_list)
  commentId: M:PascalABCCompiler.Compiler.AddNamespacesToUsingList(PascalABCCompiler.TreeRealization.using_namespace_list,PascalABCCompiler.SyntaxTree.using_list)
  id: AddNamespacesToUsingList(PascalABCCompiler.TreeRealization.using_namespace_list,PascalABCCompiler.SyntaxTree.using_list)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: AddNamespacesToUsingList(using_namespace_list, using_list)
  nameWithType: Compiler.AddNamespacesToUsingList(using_namespace_list, using_list)
  fullName: PascalABCCompiler.Compiler.AddNamespacesToUsingList(PascalABCCompiler.TreeRealization.using_namespace_list, PascalABCCompiler.SyntaxTree.using_list)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public void AddNamespacesToUsingList(using_namespace_list using_list, using_list ul)
    parameters:
    - id: using_list
      type: PascalABCCompiler.TreeRealization.using_namespace_list
    - id: ul
      type: PascalABCCompiler.SyntaxTree.using_list
    content.vb: Public Sub AddNamespacesToUsingList(using_list As using_namespace_list, ul As using_list)
  overload: PascalABCCompiler.Compiler.AddNamespacesToUsingList*
- uid: PascalABCCompiler.Compiler.GetInterfaceUsingList(PascalABCCompiler.SyntaxTree.compilation_unit)
  commentId: M:PascalABCCompiler.Compiler.GetInterfaceUsingList(PascalABCCompiler.SyntaxTree.compilation_unit)
  id: GetInterfaceUsingList(PascalABCCompiler.SyntaxTree.compilation_unit)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: GetInterfaceUsingList(compilation_unit)
  nameWithType: Compiler.GetInterfaceUsingList(compilation_unit)
  fullName: PascalABCCompiler.Compiler.GetInterfaceUsingList(PascalABCCompiler.SyntaxTree.compilation_unit)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  summary: получение списка using - legacy code !!!
  example: []
  syntax:
    content: public using_list GetInterfaceUsingList(compilation_unit cu)
    parameters:
    - id: cu
      type: PascalABCCompiler.SyntaxTree.compilation_unit
    return:
      type: PascalABCCompiler.SyntaxTree.using_list
    content.vb: Public Function GetInterfaceUsingList(cu As compilation_unit) As using_list
  overload: PascalABCCompiler.Compiler.GetInterfaceUsingList*
- uid: PascalABCCompiler.Compiler.GetImplementationSyntaxUsingList(PascalABCCompiler.SyntaxTree.compilation_unit)
  commentId: M:PascalABCCompiler.Compiler.GetImplementationSyntaxUsingList(PascalABCCompiler.SyntaxTree.compilation_unit)
  id: GetImplementationSyntaxUsingList(PascalABCCompiler.SyntaxTree.compilation_unit)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: GetImplementationSyntaxUsingList(compilation_unit)
  nameWithType: Compiler.GetImplementationSyntaxUsingList(compilation_unit)
  fullName: PascalABCCompiler.Compiler.GetImplementationSyntaxUsingList(PascalABCCompiler.SyntaxTree.compilation_unit)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  summary: получение списка using - legacy code !!!
  example: []
  syntax:
    content: private using_list GetImplementationSyntaxUsingList(compilation_unit cu)
    parameters:
    - id: cu
      type: PascalABCCompiler.SyntaxTree.compilation_unit
    return:
      type: PascalABCCompiler.SyntaxTree.using_list
    content.vb: Private Function GetImplementationSyntaxUsingList(cu As compilation_unit) As using_list
  overload: PascalABCCompiler.Compiler.GetImplementationSyntaxUsingList*
- uid: PascalABCCompiler.Compiler.GetSourceFileText(System.String)
  commentId: M:PascalABCCompiler.Compiler.GetSourceFileText(System.String)
  id: GetSourceFileText(System.String)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: GetSourceFileText(string)
  nameWithType: Compiler.GetSourceFileText(string)
  fullName: PascalABCCompiler.Compiler.GetSourceFileText(string)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  example: []
  syntax:
    content: public string GetSourceFileText(string FileName)
    parameters:
    - id: FileName
      type: System.String
    return:
      type: System.String
    content.vb: Public Function GetSourceFileText(FileName As String) As String
  overload: PascalABCCompiler.Compiler.GetSourceFileText*
  implements:
  - PascalABCCompiler.ICompiler.GetSourceFileText(System.String)
  nameWithType.vb: Compiler.GetSourceFileText(String)
  fullName.vb: PascalABCCompiler.Compiler.GetSourceFileText(String)
  name.vb: GetSourceFileText(String)
- uid: PascalABCCompiler.Compiler.ParseText(System.String,System.String,System.Collections.Generic.List{PascalABCCompiler.Errors.Error},System.Collections.Generic.List{PascalABCCompiler.Errors.CompilerWarning})
  commentId: M:PascalABCCompiler.Compiler.ParseText(System.String,System.String,System.Collections.Generic.List{PascalABCCompiler.Errors.Error},System.Collections.Generic.List{PascalABCCompiler.Errors.CompilerWarning})
  id: ParseText(System.String,System.String,System.Collections.Generic.List{PascalABCCompiler.Errors.Error},System.Collections.Generic.List{PascalABCCompiler.Errors.CompilerWarning})
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: ParseText(string, string, List<Error>, List<CompilerWarning>)
  nameWithType: Compiler.ParseText(string, string, List<Error>, List<CompilerWarning>)
  fullName: PascalABCCompiler.Compiler.ParseText(string, string, System.Collections.Generic.List<PascalABCCompiler.Errors.Error>, System.Collections.Generic.List<PascalABCCompiler.Errors.CompilerWarning>)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  example: []
  syntax:
    content: public compilation_unit ParseText(string fileName, string text, List<Error> errorList, List<CompilerWarning> warnings)
    parameters:
    - id: fileName
      type: System.String
    - id: text
      type: System.String
    - id: errorList
      type: System.Collections.Generic.List{PascalABCCompiler.Errors.Error}
    - id: warnings
      type: System.Collections.Generic.List{PascalABCCompiler.Errors.CompilerWarning}
    return:
      type: PascalABCCompiler.SyntaxTree.compilation_unit
    content.vb: Public Function ParseText(fileName As String, text As String, errorList As List(Of [Error]), warnings As List(Of CompilerWarning)) As compilation_unit
  overload: PascalABCCompiler.Compiler.ParseText*
  implements:
  - PascalABCCompiler.ICompiler.ParseText(System.String,System.String,System.Collections.Generic.List{PascalABCCompiler.Errors.Error},System.Collections.Generic.List{PascalABCCompiler.Errors.CompilerWarning})
  nameWithType.vb: Compiler.ParseText(String, String, List(Of Error), List(Of CompilerWarning))
  fullName.vb: PascalABCCompiler.Compiler.ParseText(String, String, System.Collections.Generic.List(Of PascalABCCompiler.Errors.Error), System.Collections.Generic.List(Of PascalABCCompiler.Errors.CompilerWarning))
  name.vb: ParseText(String, String, List(Of Error), List(Of CompilerWarning))
- uid: PascalABCCompiler.Compiler.CalculateLinesCompiled(System.Collections.Generic.List{PascalABCCompiler.Errors.Error},PascalABCCompiler.SyntaxTree.compilation_unit)
  commentId: M:PascalABCCompiler.Compiler.CalculateLinesCompiled(System.Collections.Generic.List{PascalABCCompiler.Errors.Error},PascalABCCompiler.SyntaxTree.compilation_unit)
  id: CalculateLinesCompiled(System.Collections.Generic.List{PascalABCCompiler.Errors.Error},PascalABCCompiler.SyntaxTree.compilation_unit)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: CalculateLinesCompiled(List<Error>, compilation_unit)
  nameWithType: Compiler.CalculateLinesCompiled(List<Error>, compilation_unit)
  fullName: PascalABCCompiler.Compiler.CalculateLinesCompiled(System.Collections.Generic.List<PascalABCCompiler.Errors.Error>, PascalABCCompiler.SyntaxTree.compilation_unit)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private void CalculateLinesCompiled(List<Error> errorList, compilation_unit unitSyntaxTree)
    parameters:
    - id: errorList
      type: System.Collections.Generic.List{PascalABCCompiler.Errors.Error}
    - id: unitSyntaxTree
      type: PascalABCCompiler.SyntaxTree.compilation_unit
    content.vb: Private Sub CalculateLinesCompiled(errorList As List(Of [Error]), unitSyntaxTree As compilation_unit)
  overload: PascalABCCompiler.Compiler.CalculateLinesCompiled*
  nameWithType.vb: Compiler.CalculateLinesCompiled(List(Of Error), compilation_unit)
  fullName.vb: PascalABCCompiler.Compiler.CalculateLinesCompiled(System.Collections.Generic.List(Of PascalABCCompiler.Errors.Error), PascalABCCompiler.SyntaxTree.compilation_unit)
  name.vb: CalculateLinesCompiled(List(Of Error), compilation_unit)
- uid: PascalABCCompiler.Compiler.CalculatePascalProgramHealth(PascalABCCompiler.SyntaxTree.compilation_unit)
  commentId: M:PascalABCCompiler.Compiler.CalculatePascalProgramHealth(PascalABCCompiler.SyntaxTree.compilation_unit)
  id: CalculatePascalProgramHealth(PascalABCCompiler.SyntaxTree.compilation_unit)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: CalculatePascalProgramHealth(compilation_unit)
  nameWithType: Compiler.CalculatePascalProgramHealth(compilation_unit)
  fullName: PascalABCCompiler.Compiler.CalculatePascalProgramHealth(PascalABCCompiler.SyntaxTree.compilation_unit)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private void CalculatePascalProgramHealth(compilation_unit unitSyntaxTree)
    parameters:
    - id: unitSyntaxTree
      type: PascalABCCompiler.SyntaxTree.compilation_unit
    content.vb: Private Sub CalculatePascalProgramHealth(unitSyntaxTree As compilation_unit)
  overload: PascalABCCompiler.Compiler.CalculatePascalProgramHealth*
- uid: PascalABCCompiler.Compiler.InternalParseText(Languages.Facade.ILanguage,System.String,System.String,System.Collections.Generic.List{PascalABCCompiler.Errors.Error},System.Collections.Generic.List{PascalABCCompiler.Errors.CompilerWarning},System.Collections.Generic.List{System.String},System.Boolean)
  commentId: M:PascalABCCompiler.Compiler.InternalParseText(Languages.Facade.ILanguage,System.String,System.String,System.Collections.Generic.List{PascalABCCompiler.Errors.Error},System.Collections.Generic.List{PascalABCCompiler.Errors.CompilerWarning},System.Collections.Generic.List{System.String},System.Boolean)
  id: InternalParseText(Languages.Facade.ILanguage,System.String,System.String,System.Collections.Generic.List{PascalABCCompiler.Errors.Error},System.Collections.Generic.List{PascalABCCompiler.Errors.CompilerWarning},System.Collections.Generic.List{System.String},System.Boolean)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: InternalParseText(ILanguage, string, string, List<Error>, List<CompilerWarning>, List<string>, bool)
  nameWithType: Compiler.InternalParseText(ILanguage, string, string, List<Error>, List<CompilerWarning>, List<string>, bool)
  fullName: PascalABCCompiler.Compiler.InternalParseText(Languages.Facade.ILanguage, string, string, System.Collections.Generic.List<PascalABCCompiler.Errors.Error>, System.Collections.Generic.List<PascalABCCompiler.Errors.CompilerWarning>, System.Collections.Generic.List<string>, bool)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private compilation_unit InternalParseText(ILanguage language, string fileName, string text, List<Error> errorList, List<CompilerWarning> warnings, List<string> definesList = null, bool calculateHealth = true)
    parameters:
    - id: language
      type: Languages.Facade.ILanguage
    - id: fileName
      type: System.String
    - id: text
      type: System.String
    - id: errorList
      type: System.Collections.Generic.List{PascalABCCompiler.Errors.Error}
    - id: warnings
      type: System.Collections.Generic.List{PascalABCCompiler.Errors.CompilerWarning}
    - id: definesList
      type: System.Collections.Generic.List{System.String}
    - id: calculateHealth
      type: System.Boolean
    return:
      type: PascalABCCompiler.SyntaxTree.compilation_unit
    content.vb: Private Function InternalParseText(language As ILanguage, fileName As String, text As String, errorList As List(Of [Error]), warnings As List(Of CompilerWarning), definesList As List(Of String) = Nothing, calculateHealth As Boolean = True) As compilation_unit
  overload: PascalABCCompiler.Compiler.InternalParseText*
  nameWithType.vb: Compiler.InternalParseText(ILanguage, String, String, List(Of Error), List(Of CompilerWarning), List(Of String), Boolean)
  fullName.vb: PascalABCCompiler.Compiler.InternalParseText(Languages.Facade.ILanguage, String, String, System.Collections.Generic.List(Of PascalABCCompiler.Errors.Error), System.Collections.Generic.List(Of PascalABCCompiler.Errors.CompilerWarning), System.Collections.Generic.List(Of String), Boolean)
  name.vb: InternalParseText(ILanguage, String, String, List(Of Error), List(Of CompilerWarning), List(Of String), Boolean)
- uid: PascalABCCompiler.Compiler.IsDll(PascalABCCompiler.SyntaxTree.compilation_unit)
  commentId: M:PascalABCCompiler.Compiler.IsDll(PascalABCCompiler.SyntaxTree.compilation_unit)
  id: IsDll(PascalABCCompiler.SyntaxTree.compilation_unit)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: IsDll(compilation_unit)
  nameWithType: Compiler.IsDll(compilation_unit)
  fullName: PascalABCCompiler.Compiler.IsDll(PascalABCCompiler.SyntaxTree.compilation_unit)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  summary: Проверяет, является ли модуль dll по соответствующей директиве
  example: []
  syntax:
    content: public static bool IsDll(compilation_unit unitSyntaxTree)
    parameters:
    - id: unitSyntaxTree
      type: PascalABCCompiler.SyntaxTree.compilation_unit
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsDll(unitSyntaxTree As compilation_unit) As Boolean
  overload: PascalABCCompiler.Compiler.IsDll*
- uid: PascalABCCompiler.Compiler.IsDll(PascalABCCompiler.SyntaxTree.compilation_unit,PascalABCCompiler.SyntaxTree.compiler_directive@)
  commentId: M:PascalABCCompiler.Compiler.IsDll(PascalABCCompiler.SyntaxTree.compilation_unit,PascalABCCompiler.SyntaxTree.compiler_directive@)
  id: IsDll(PascalABCCompiler.SyntaxTree.compilation_unit,PascalABCCompiler.SyntaxTree.compiler_directive@)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: IsDll(compilation_unit, out compiler_directive)
  nameWithType: Compiler.IsDll(compilation_unit, out compiler_directive)
  fullName: PascalABCCompiler.Compiler.IsDll(PascalABCCompiler.SyntaxTree.compilation_unit, out PascalABCCompiler.SyntaxTree.compiler_directive)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  summary: Проверяет, является ли модуль dll по соответствующей директиве и возвращает эту директиву выходным параметром
  example: []
  syntax:
    content: public static bool IsDll(compilation_unit unitSyntaxTree, out compiler_directive dllDirective)
    parameters:
    - id: unitSyntaxTree
      type: PascalABCCompiler.SyntaxTree.compilation_unit
    - id: dllDirective
      type: PascalABCCompiler.SyntaxTree.compiler_directive
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsDll(unitSyntaxTree As compilation_unit, dllDirective As compiler_directive) As Boolean
  overload: PascalABCCompiler.Compiler.IsDll*
  nameWithType.vb: Compiler.IsDll(compilation_unit, compiler_directive)
  fullName.vb: PascalABCCompiler.Compiler.IsDll(PascalABCCompiler.SyntaxTree.compilation_unit, PascalABCCompiler.SyntaxTree.compiler_directive)
  name.vb: IsDll(compilation_unit, compiler_directive)
- uid: PascalABCCompiler.Compiler.CompileUnit(PascalABCCompiler.TreeRealization.unit_node_list,System.Collections.Generic.Dictionary{PascalABCCompiler.TreeRealization.unit_node,PascalABCCompiler.CompilationUnit},PascalABCCompiler.SyntaxTree.unit_or_namespace,System.String)
  commentId: M:PascalABCCompiler.Compiler.CompileUnit(PascalABCCompiler.TreeRealization.unit_node_list,System.Collections.Generic.Dictionary{PascalABCCompiler.TreeRealization.unit_node,PascalABCCompiler.CompilationUnit},PascalABCCompiler.SyntaxTree.unit_or_namespace,System.String)
  id: CompileUnit(PascalABCCompiler.TreeRealization.unit_node_list,System.Collections.Generic.Dictionary{PascalABCCompiler.TreeRealization.unit_node,PascalABCCompiler.CompilationUnit},PascalABCCompiler.SyntaxTree.unit_or_namespace,System.String)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: CompileUnit(unit_node_list, Dictionary<unit_node, CompilationUnit>, unit_or_namespace, string)
  nameWithType: Compiler.CompileUnit(unit_node_list, Dictionary<unit_node, CompilationUnit>, unit_or_namespace, string)
  fullName: PascalABCCompiler.Compiler.CompileUnit(PascalABCCompiler.TreeRealization.unit_node_list, System.Collections.Generic.Dictionary<PascalABCCompiler.TreeRealization.unit_node, PascalABCCompiler.CompilationUnit>, PascalABCCompiler.SyntaxTree.unit_or_namespace, string)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  summary: Компилирует основную программу и все используемые ей юниты рекурсивно
  example: []
  syntax:
    content: public CompilationUnit CompileUnit(unit_node_list unitsFromUsesSection, Dictionary<unit_node, CompilationUnit> directUnitsFromUsesSection, unit_or_namespace currentUnitNode, string previousPath)
    parameters:
    - id: unitsFromUsesSection
      type: PascalABCCompiler.TreeRealization.unit_node_list
      description: >-
        Вспомогательная переменная для заполнения CompilationUnit.interfaceUsedUnits и 
                   CompilationUnit.implementationUsedUnits (здесь могут содержаться юниты и dll)
    - id: directUnitsFromUsesSection
      type: System.Collections.Generic.Dictionary{PascalABCCompiler.TreeRealization.unit_node,PascalABCCompiler.CompilationUnit}
      description: >-
        Вспомогательная переменная для заполнения CompilationUnit.interfaceUsedDirectUnits и 
                    CompilationUnit.implementationUsedDirectUnits
    - id: currentUnitNode
      type: PascalABCCompiler.SyntaxTree.unit_or_namespace
      description: Синтаксический узел текущего модуля (или пространства имен)
    - id: previousPath
      type: System.String
      description: Директория родительского модуля
    return:
      type: PascalABCCompiler.CompilationUnit
      description: Скомпилированный юнит
    content.vb: Public Function CompileUnit(unitsFromUsesSection As unit_node_list, directUnitsFromUsesSection As Dictionary(Of unit_node, CompilationUnit), currentUnitNode As unit_or_namespace, previousPath As String) As CompilationUnit
  overload: PascalABCCompiler.Compiler.CompileUnit*
  nameWithType.vb: Compiler.CompileUnit(unit_node_list, Dictionary(Of unit_node, CompilationUnit), unit_or_namespace, String)
  fullName.vb: PascalABCCompiler.Compiler.CompileUnit(PascalABCCompiler.TreeRealization.unit_node_list, System.Collections.Generic.Dictionary(Of PascalABCCompiler.TreeRealization.unit_node, PascalABCCompiler.CompilationUnit), PascalABCCompiler.SyntaxTree.unit_or_namespace, String)
  name.vb: CompileUnit(unit_node_list, Dictionary(Of unit_node, CompilationUnit), unit_or_namespace, String)
- uid: PascalABCCompiler.Compiler.CreateDependencyListsForCurrentUnit(PascalABCCompiler.CompilationUnit,System.String,System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace}@,PascalABCCompiler.TreeRealization.unit_node_list@,System.Collections.Generic.Dictionary{System.String,PascalABCCompiler.SyntaxTree.syntax_namespace_node}@)
  commentId: M:PascalABCCompiler.Compiler.CreateDependencyListsForCurrentUnit(PascalABCCompiler.CompilationUnit,System.String,System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace}@,PascalABCCompiler.TreeRealization.unit_node_list@,System.Collections.Generic.Dictionary{System.String,PascalABCCompiler.SyntaxTree.syntax_namespace_node}@)
  id: CreateDependencyListsForCurrentUnit(PascalABCCompiler.CompilationUnit,System.String,System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace}@,PascalABCCompiler.TreeRealization.unit_node_list@,System.Collections.Generic.Dictionary{System.String,PascalABCCompiler.SyntaxTree.syntax_namespace_node}@)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: CreateDependencyListsForCurrentUnit(CompilationUnit, string, out List<unit_or_namespace>, out unit_node_list, out Dictionary<string, syntax_namespace_node>)
  nameWithType: Compiler.CreateDependencyListsForCurrentUnit(CompilationUnit, string, out List<unit_or_namespace>, out unit_node_list, out Dictionary<string, syntax_namespace_node>)
  fullName: PascalABCCompiler.Compiler.CreateDependencyListsForCurrentUnit(PascalABCCompiler.CompilationUnit, string, out System.Collections.Generic.List<PascalABCCompiler.SyntaxTree.unit_or_namespace>, out PascalABCCompiler.TreeRealization.unit_node_list, out System.Collections.Generic.Dictionary<string, PascalABCCompiler.SyntaxTree.syntax_namespace_node>)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private void CreateDependencyListsForCurrentUnit(CompilationUnit currentUnit, string currentDirectory, out List<unit_or_namespace> interfaceUsesList, out unit_node_list references, out Dictionary<string, syntax_namespace_node> namespaces)
    parameters:
    - id: currentUnit
      type: PascalABCCompiler.CompilationUnit
    - id: currentDirectory
      type: System.String
    - id: interfaceUsesList
      type: System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace}
    - id: references
      type: PascalABCCompiler.TreeRealization.unit_node_list
    - id: namespaces
      type: System.Collections.Generic.Dictionary{System.String,PascalABCCompiler.SyntaxTree.syntax_namespace_node}
    content.vb: Private Sub CreateDependencyListsForCurrentUnit(currentUnit As CompilationUnit, currentDirectory As String, interfaceUsesList As List(Of unit_or_namespace), references As unit_node_list, namespaces As Dictionary(Of String, syntax_namespace_node))
  overload: PascalABCCompiler.Compiler.CreateDependencyListsForCurrentUnit*
  nameWithType.vb: Compiler.CreateDependencyListsForCurrentUnit(CompilationUnit, String, List(Of unit_or_namespace), unit_node_list, Dictionary(Of String, syntax_namespace_node))
  fullName.vb: PascalABCCompiler.Compiler.CreateDependencyListsForCurrentUnit(PascalABCCompiler.CompilationUnit, String, System.Collections.Generic.List(Of PascalABCCompiler.SyntaxTree.unit_or_namespace), PascalABCCompiler.TreeRealization.unit_node_list, System.Collections.Generic.Dictionary(Of String, PascalABCCompiler.SyntaxTree.syntax_namespace_node))
  name.vb: CreateDependencyListsForCurrentUnit(CompilationUnit, String, List(Of unit_or_namespace), unit_node_list, Dictionary(Of String, syntax_namespace_node))
- uid: PascalABCCompiler.Compiler.AddCurrentUnitAndItsReferencesToUsesLists(PascalABCCompiler.TreeRealization.unit_node_list,System.Collections.Generic.Dictionary{PascalABCCompiler.TreeRealization.unit_node,PascalABCCompiler.CompilationUnit},PascalABCCompiler.SyntaxTree.unit_or_namespace,PascalABCCompiler.CompilationUnit,PascalABCCompiler.TreeRealization.unit_node_list)
  commentId: M:PascalABCCompiler.Compiler.AddCurrentUnitAndItsReferencesToUsesLists(PascalABCCompiler.TreeRealization.unit_node_list,System.Collections.Generic.Dictionary{PascalABCCompiler.TreeRealization.unit_node,PascalABCCompiler.CompilationUnit},PascalABCCompiler.SyntaxTree.unit_or_namespace,PascalABCCompiler.CompilationUnit,PascalABCCompiler.TreeRealization.unit_node_list)
  id: AddCurrentUnitAndItsReferencesToUsesLists(PascalABCCompiler.TreeRealization.unit_node_list,System.Collections.Generic.Dictionary{PascalABCCompiler.TreeRealization.unit_node,PascalABCCompiler.CompilationUnit},PascalABCCompiler.SyntaxTree.unit_or_namespace,PascalABCCompiler.CompilationUnit,PascalABCCompiler.TreeRealization.unit_node_list)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: AddCurrentUnitAndItsReferencesToUsesLists(unit_node_list, Dictionary<unit_node, CompilationUnit>, unit_or_namespace, CompilationUnit, unit_node_list)
  nameWithType: Compiler.AddCurrentUnitAndItsReferencesToUsesLists(unit_node_list, Dictionary<unit_node, CompilationUnit>, unit_or_namespace, CompilationUnit, unit_node_list)
  fullName: PascalABCCompiler.Compiler.AddCurrentUnitAndItsReferencesToUsesLists(PascalABCCompiler.TreeRealization.unit_node_list, System.Collections.Generic.Dictionary<PascalABCCompiler.TreeRealization.unit_node, PascalABCCompiler.CompilationUnit>, PascalABCCompiler.SyntaxTree.unit_or_namespace, PascalABCCompiler.CompilationUnit, PascalABCCompiler.TreeRealization.unit_node_list)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private void AddCurrentUnitAndItsReferencesToUsesLists(unit_node_list unitsFromUsesSection, Dictionary<unit_node, CompilationUnit> directUnitsFromUsesSection, unit_or_namespace currentUnitNode, CompilationUnit currentUnit, unit_node_list references)
    parameters:
    - id: unitsFromUsesSection
      type: PascalABCCompiler.TreeRealization.unit_node_list
    - id: directUnitsFromUsesSection
      type: System.Collections.Generic.Dictionary{PascalABCCompiler.TreeRealization.unit_node,PascalABCCompiler.CompilationUnit}
    - id: currentUnitNode
      type: PascalABCCompiler.SyntaxTree.unit_or_namespace
    - id: currentUnit
      type: PascalABCCompiler.CompilationUnit
    - id: references
      type: PascalABCCompiler.TreeRealization.unit_node_list
    content.vb: Private Sub AddCurrentUnitAndItsReferencesToUsesLists(unitsFromUsesSection As unit_node_list, directUnitsFromUsesSection As Dictionary(Of unit_node, CompilationUnit), currentUnitNode As unit_or_namespace, currentUnit As CompilationUnit, references As unit_node_list)
  overload: PascalABCCompiler.Compiler.AddCurrentUnitAndItsReferencesToUsesLists*
  nameWithType.vb: Compiler.AddCurrentUnitAndItsReferencesToUsesLists(unit_node_list, Dictionary(Of unit_node, CompilationUnit), unit_or_namespace, CompilationUnit, unit_node_list)
  fullName.vb: PascalABCCompiler.Compiler.AddCurrentUnitAndItsReferencesToUsesLists(PascalABCCompiler.TreeRealization.unit_node_list, System.Collections.Generic.Dictionary(Of PascalABCCompiler.TreeRealization.unit_node, PascalABCCompiler.CompilationUnit), PascalABCCompiler.SyntaxTree.unit_or_namespace, PascalABCCompiler.CompilationUnit, PascalABCCompiler.TreeRealization.unit_node_list)
  name.vb: AddCurrentUnitAndItsReferencesToUsesLists(unit_node_list, Dictionary(Of unit_node, CompilationUnit), unit_or_namespace, CompilationUnit, unit_node_list)
- uid: PascalABCCompiler.Compiler.SemanticCheckUsesInIsNotNamespace(PascalABCCompiler.SyntaxTree.unit_or_namespace,PascalABCCompiler.CompilationUnit)
  commentId: M:PascalABCCompiler.Compiler.SemanticCheckUsesInIsNotNamespace(PascalABCCompiler.SyntaxTree.unit_or_namespace,PascalABCCompiler.CompilationUnit)
  id: SemanticCheckUsesInIsNotNamespace(PascalABCCompiler.SyntaxTree.unit_or_namespace,PascalABCCompiler.CompilationUnit)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: SemanticCheckUsesInIsNotNamespace(unit_or_namespace, CompilationUnit)
  nameWithType: Compiler.SemanticCheckUsesInIsNotNamespace(unit_or_namespace, CompilationUnit)
  fullName: PascalABCCompiler.Compiler.SemanticCheckUsesInIsNotNamespace(PascalABCCompiler.SyntaxTree.unit_or_namespace, PascalABCCompiler.CompilationUnit)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private void SemanticCheckUsesInIsNotNamespace(unit_or_namespace currentUnitNode, CompilationUnit currentUnit)
    parameters:
    - id: currentUnitNode
      type: PascalABCCompiler.SyntaxTree.unit_or_namespace
    - id: currentUnit
      type: PascalABCCompiler.CompilationUnit
    content.vb: Private Sub SemanticCheckUsesInIsNotNamespace(currentUnitNode As unit_or_namespace, currentUnit As CompilationUnit)
  overload: PascalABCCompiler.Compiler.SemanticCheckUsesInIsNotNamespace*
- uid: PascalABCCompiler.Compiler.CompileCurrentUnitImplementation(System.String,PascalABCCompiler.CompilationUnit,System.Collections.Generic.Dictionary{PascalABCCompiler.SyntaxTree.syntax_tree_node,System.String})
  commentId: M:PascalABCCompiler.Compiler.CompileCurrentUnitImplementation(System.String,PascalABCCompiler.CompilationUnit,System.Collections.Generic.Dictionary{PascalABCCompiler.SyntaxTree.syntax_tree_node,System.String})
  id: CompileCurrentUnitImplementation(System.String,PascalABCCompiler.CompilationUnit,System.Collections.Generic.Dictionary{PascalABCCompiler.SyntaxTree.syntax_tree_node,System.String})
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: CompileCurrentUnitImplementation(string, CompilationUnit, Dictionary<syntax_tree_node, string>)
  nameWithType: Compiler.CompileCurrentUnitImplementation(string, CompilationUnit, Dictionary<syntax_tree_node, string>)
  fullName: PascalABCCompiler.Compiler.CompileCurrentUnitImplementation(string, PascalABCCompiler.CompilationUnit, System.Collections.Generic.Dictionary<PascalABCCompiler.SyntaxTree.syntax_tree_node, string>)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private void CompileCurrentUnitImplementation(string UnitFileName, CompilationUnit currentUnit, Dictionary<syntax_tree_node, string> docs)
    parameters:
    - id: UnitFileName
      type: System.String
    - id: currentUnit
      type: PascalABCCompiler.CompilationUnit
    - id: docs
      type: System.Collections.Generic.Dictionary{PascalABCCompiler.SyntaxTree.syntax_tree_node,System.String}
    content.vb: Private Sub CompileCurrentUnitImplementation(UnitFileName As String, currentUnit As CompilationUnit, docs As Dictionary(Of syntax_tree_node, String))
  overload: PascalABCCompiler.Compiler.CompileCurrentUnitImplementation*
  nameWithType.vb: Compiler.CompileCurrentUnitImplementation(String, CompilationUnit, Dictionary(Of syntax_tree_node, String))
  fullName.vb: PascalABCCompiler.Compiler.CompileCurrentUnitImplementation(String, PascalABCCompiler.CompilationUnit, System.Collections.Generic.Dictionary(Of PascalABCCompiler.SyntaxTree.syntax_tree_node, String))
  name.vb: CompileCurrentUnitImplementation(String, CompilationUnit, Dictionary(Of syntax_tree_node, String))
- uid: PascalABCCompiler.Compiler.CompileImplementationDependencies(System.String,PascalABCCompiler.CompilationUnit,System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace},System.Collections.Generic.Dictionary{System.String,PascalABCCompiler.SyntaxTree.syntax_namespace_node},PascalABCCompiler.TreeRealization.common_unit_node,System.Boolean@)
  commentId: M:PascalABCCompiler.Compiler.CompileImplementationDependencies(System.String,PascalABCCompiler.CompilationUnit,System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace},System.Collections.Generic.Dictionary{System.String,PascalABCCompiler.SyntaxTree.syntax_namespace_node},PascalABCCompiler.TreeRealization.common_unit_node,System.Boolean@)
  id: CompileImplementationDependencies(System.String,PascalABCCompiler.CompilationUnit,System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace},System.Collections.Generic.Dictionary{System.String,PascalABCCompiler.SyntaxTree.syntax_namespace_node},PascalABCCompiler.TreeRealization.common_unit_node,System.Boolean@)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: CompileImplementationDependencies(string, CompilationUnit, List<unit_or_namespace>, Dictionary<string, syntax_namespace_node>, common_unit_node, out bool)
  nameWithType: Compiler.CompileImplementationDependencies(string, CompilationUnit, List<unit_or_namespace>, Dictionary<string, syntax_namespace_node>, common_unit_node, out bool)
  fullName: PascalABCCompiler.Compiler.CompileImplementationDependencies(string, PascalABCCompiler.CompilationUnit, System.Collections.Generic.List<PascalABCCompiler.SyntaxTree.unit_or_namespace>, System.Collections.Generic.Dictionary<string, PascalABCCompiler.SyntaxTree.syntax_namespace_node>, PascalABCCompiler.TreeRealization.common_unit_node, out bool)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  summary: Компилирует модули из секции uses текущего модуля реализации рекурсивно
  example: []
  syntax:
    content: private void CompileImplementationDependencies(string currentPath, CompilationUnit currentUnit, List<unit_or_namespace> implementationUsesList, Dictionary<string, syntax_namespace_node> namespaces, common_unit_node commonUnitNode, out bool shouldReturnCurrentUnit)
    parameters:
    - id: currentPath
      type: System.String
    - id: currentUnit
      type: PascalABCCompiler.CompilationUnit
    - id: implementationUsesList
      type: System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace}
    - id: namespaces
      type: System.Collections.Generic.Dictionary{System.String,PascalABCCompiler.SyntaxTree.syntax_namespace_node}
    - id: commonUnitNode
      type: PascalABCCompiler.TreeRealization.common_unit_node
    - id: shouldReturnCurrentUnit
      type: System.Boolean
    content.vb: Private Sub CompileImplementationDependencies(currentPath As String, currentUnit As CompilationUnit, implementationUsesList As List(Of unit_or_namespace), namespaces As Dictionary(Of String, syntax_namespace_node), commonUnitNode As common_unit_node, shouldReturnCurrentUnit As Boolean)
  overload: PascalABCCompiler.Compiler.CompileImplementationDependencies*
  nameWithType.vb: Compiler.CompileImplementationDependencies(String, CompilationUnit, List(Of unit_or_namespace), Dictionary(Of String, syntax_namespace_node), common_unit_node, Boolean)
  fullName.vb: PascalABCCompiler.Compiler.CompileImplementationDependencies(String, PascalABCCompiler.CompilationUnit, System.Collections.Generic.List(Of PascalABCCompiler.SyntaxTree.unit_or_namespace), System.Collections.Generic.Dictionary(Of String, PascalABCCompiler.SyntaxTree.syntax_namespace_node), PascalABCCompiler.TreeRealization.common_unit_node, Boolean)
  name.vb: CompileImplementationDependencies(String, CompilationUnit, List(Of unit_or_namespace), Dictionary(Of String, syntax_namespace_node), common_unit_node, Boolean)
- uid: PascalABCCompiler.Compiler.CompileCurrentUnitInterface(System.String,PascalABCCompiler.CompilationUnit,System.Collections.Generic.Dictionary{PascalABCCompiler.SyntaxTree.syntax_tree_node,System.String})
  commentId: M:PascalABCCompiler.Compiler.CompileCurrentUnitInterface(System.String,PascalABCCompiler.CompilationUnit,System.Collections.Generic.Dictionary{PascalABCCompiler.SyntaxTree.syntax_tree_node,System.String})
  id: CompileCurrentUnitInterface(System.String,PascalABCCompiler.CompilationUnit,System.Collections.Generic.Dictionary{PascalABCCompiler.SyntaxTree.syntax_tree_node,System.String})
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: CompileCurrentUnitInterface(string, CompilationUnit, Dictionary<syntax_tree_node, string>)
  nameWithType: Compiler.CompileCurrentUnitInterface(string, CompilationUnit, Dictionary<syntax_tree_node, string>)
  fullName: PascalABCCompiler.Compiler.CompileCurrentUnitInterface(string, PascalABCCompiler.CompilationUnit, System.Collections.Generic.Dictionary<PascalABCCompiler.SyntaxTree.syntax_tree_node, string>)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private void CompileCurrentUnitInterface(string UnitFileName, CompilationUnit currentUnit, Dictionary<syntax_tree_node, string> docs)
    parameters:
    - id: UnitFileName
      type: System.String
    - id: currentUnit
      type: PascalABCCompiler.CompilationUnit
    - id: docs
      type: System.Collections.Generic.Dictionary{PascalABCCompiler.SyntaxTree.syntax_tree_node,System.String}
    content.vb: Private Sub CompileCurrentUnitInterface(UnitFileName As String, currentUnit As CompilationUnit, docs As Dictionary(Of syntax_tree_node, String))
  overload: PascalABCCompiler.Compiler.CompileCurrentUnitInterface*
  nameWithType.vb: Compiler.CompileCurrentUnitInterface(String, CompilationUnit, Dictionary(Of syntax_tree_node, String))
  fullName.vb: PascalABCCompiler.Compiler.CompileCurrentUnitInterface(String, PascalABCCompiler.CompilationUnit, System.Collections.Generic.Dictionary(Of PascalABCCompiler.SyntaxTree.syntax_tree_node, String))
  name.vb: CompileCurrentUnitInterface(String, CompilationUnit, Dictionary(Of syntax_tree_node, String))
- uid: PascalABCCompiler.Compiler.CompileInterfaceDependencies(PascalABCCompiler.TreeRealization.unit_node_list,System.Collections.Generic.Dictionary{PascalABCCompiler.TreeRealization.unit_node,PascalABCCompiler.CompilationUnit},PascalABCCompiler.SyntaxTree.unit_or_namespace,System.String,System.String,PascalABCCompiler.CompilationUnit,System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace},PascalABCCompiler.TreeRealization.unit_node_list,System.Collections.Generic.Dictionary{System.String,PascalABCCompiler.SyntaxTree.syntax_namespace_node},System.Boolean@)
  commentId: M:PascalABCCompiler.Compiler.CompileInterfaceDependencies(PascalABCCompiler.TreeRealization.unit_node_list,System.Collections.Generic.Dictionary{PascalABCCompiler.TreeRealization.unit_node,PascalABCCompiler.CompilationUnit},PascalABCCompiler.SyntaxTree.unit_or_namespace,System.String,System.String,PascalABCCompiler.CompilationUnit,System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace},PascalABCCompiler.TreeRealization.unit_node_list,System.Collections.Generic.Dictionary{System.String,PascalABCCompiler.SyntaxTree.syntax_namespace_node},System.Boolean@)
  id: CompileInterfaceDependencies(PascalABCCompiler.TreeRealization.unit_node_list,System.Collections.Generic.Dictionary{PascalABCCompiler.TreeRealization.unit_node,PascalABCCompiler.CompilationUnit},PascalABCCompiler.SyntaxTree.unit_or_namespace,System.String,System.String,PascalABCCompiler.CompilationUnit,System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace},PascalABCCompiler.TreeRealization.unit_node_list,System.Collections.Generic.Dictionary{System.String,PascalABCCompiler.SyntaxTree.syntax_namespace_node},System.Boolean@)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: CompileInterfaceDependencies(unit_node_list, Dictionary<unit_node, CompilationUnit>, unit_or_namespace, string, string, CompilationUnit, List<unit_or_namespace>, unit_node_list, Dictionary<string, syntax_namespace_node>, out bool)
  nameWithType: Compiler.CompileInterfaceDependencies(unit_node_list, Dictionary<unit_node, CompilationUnit>, unit_or_namespace, string, string, CompilationUnit, List<unit_or_namespace>, unit_node_list, Dictionary<string, syntax_namespace_node>, out bool)
  fullName: PascalABCCompiler.Compiler.CompileInterfaceDependencies(PascalABCCompiler.TreeRealization.unit_node_list, System.Collections.Generic.Dictionary<PascalABCCompiler.TreeRealization.unit_node, PascalABCCompiler.CompilationUnit>, PascalABCCompiler.SyntaxTree.unit_or_namespace, string, string, PascalABCCompiler.CompilationUnit, System.Collections.Generic.List<PascalABCCompiler.SyntaxTree.unit_or_namespace>, PascalABCCompiler.TreeRealization.unit_node_list, System.Collections.Generic.Dictionary<string, PascalABCCompiler.SyntaxTree.syntax_namespace_node>, out bool)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  summary: Компилирует модули из секции uses интерфейса текущего модуля рекурсивно
  example: []
  syntax:
    content: private void CompileInterfaceDependencies(unit_node_list unitsFromUsesSection, Dictionary<unit_node, CompilationUnit> directUnitsFromUsesSection, unit_or_namespace currentUnitNode, string unitFileName, string currentPath, CompilationUnit currentUnit, List<unit_or_namespace> interfaceUsesList, unit_node_list references, Dictionary<string, syntax_namespace_node> namespaces, out bool shouldReturnCurrentUnit)
    parameters:
    - id: unitsFromUsesSection
      type: PascalABCCompiler.TreeRealization.unit_node_list
    - id: directUnitsFromUsesSection
      type: System.Collections.Generic.Dictionary{PascalABCCompiler.TreeRealization.unit_node,PascalABCCompiler.CompilationUnit}
    - id: currentUnitNode
      type: PascalABCCompiler.SyntaxTree.unit_or_namespace
    - id: unitFileName
      type: System.String
    - id: currentPath
      type: System.String
    - id: currentUnit
      type: PascalABCCompiler.CompilationUnit
    - id: interfaceUsesList
      type: System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace}
    - id: references
      type: PascalABCCompiler.TreeRealization.unit_node_list
    - id: namespaces
      type: System.Collections.Generic.Dictionary{System.String,PascalABCCompiler.SyntaxTree.syntax_namespace_node}
    - id: shouldReturnCurrentUnit
      type: System.Boolean
    content.vb: Private Sub CompileInterfaceDependencies(unitsFromUsesSection As unit_node_list, directUnitsFromUsesSection As Dictionary(Of unit_node, CompilationUnit), currentUnitNode As unit_or_namespace, unitFileName As String, currentPath As String, currentUnit As CompilationUnit, interfaceUsesList As List(Of unit_or_namespace), references As unit_node_list, namespaces As Dictionary(Of String, syntax_namespace_node), shouldReturnCurrentUnit As Boolean)
  overload: PascalABCCompiler.Compiler.CompileInterfaceDependencies*
  exceptions:
  - type: PascalABCCompiler.Errors.CycleUnitReference
    commentId: T:PascalABCCompiler.Errors.CycleUnitReference
    description: ''
  nameWithType.vb: Compiler.CompileInterfaceDependencies(unit_node_list, Dictionary(Of unit_node, CompilationUnit), unit_or_namespace, String, String, CompilationUnit, List(Of unit_or_namespace), unit_node_list, Dictionary(Of String, syntax_namespace_node), Boolean)
  fullName.vb: PascalABCCompiler.Compiler.CompileInterfaceDependencies(PascalABCCompiler.TreeRealization.unit_node_list, System.Collections.Generic.Dictionary(Of PascalABCCompiler.TreeRealization.unit_node, PascalABCCompiler.CompilationUnit), PascalABCCompiler.SyntaxTree.unit_or_namespace, String, String, PascalABCCompiler.CompilationUnit, System.Collections.Generic.List(Of PascalABCCompiler.SyntaxTree.unit_or_namespace), PascalABCCompiler.TreeRealization.unit_node_list, System.Collections.Generic.Dictionary(Of String, PascalABCCompiler.SyntaxTree.syntax_namespace_node), Boolean)
  name.vb: CompileInterfaceDependencies(unit_node_list, Dictionary(Of unit_node, CompilationUnit), unit_or_namespace, String, String, CompilationUnit, List(Of unit_or_namespace), unit_node_list, Dictionary(Of String, syntax_namespace_node), Boolean)
- uid: PascalABCCompiler.Compiler.SemanticCheckNoLoopDependenciesOfInterfaces(PascalABCCompiler.CompilationUnit,System.String,PascalABCCompiler.SyntaxTree.unit_or_namespace,System.String)
  commentId: M:PascalABCCompiler.Compiler.SemanticCheckNoLoopDependenciesOfInterfaces(PascalABCCompiler.CompilationUnit,System.String,PascalABCCompiler.SyntaxTree.unit_or_namespace,System.String)
  id: SemanticCheckNoLoopDependenciesOfInterfaces(PascalABCCompiler.CompilationUnit,System.String,PascalABCCompiler.SyntaxTree.unit_or_namespace,System.String)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: SemanticCheckNoLoopDependenciesOfInterfaces(CompilationUnit, string, unit_or_namespace, string)
  nameWithType: Compiler.SemanticCheckNoLoopDependenciesOfInterfaces(CompilationUnit, string, unit_or_namespace, string)
  fullName: PascalABCCompiler.Compiler.SemanticCheckNoLoopDependenciesOfInterfaces(PascalABCCompiler.CompilationUnit, string, PascalABCCompiler.SyntaxTree.unit_or_namespace, string)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private void SemanticCheckNoLoopDependenciesOfInterfaces(CompilationUnit currentUnit, string unitFileName, unit_or_namespace usedUnitNode, string currentPath)
    parameters:
    - id: currentUnit
      type: PascalABCCompiler.CompilationUnit
    - id: unitFileName
      type: System.String
    - id: usedUnitNode
      type: PascalABCCompiler.SyntaxTree.unit_or_namespace
    - id: currentPath
      type: System.String
    content.vb: Private Sub SemanticCheckNoLoopDependenciesOfInterfaces(currentUnit As CompilationUnit, unitFileName As String, usedUnitNode As unit_or_namespace, currentPath As String)
  overload: PascalABCCompiler.Compiler.SemanticCheckNoLoopDependenciesOfInterfaces*
  nameWithType.vb: Compiler.SemanticCheckNoLoopDependenciesOfInterfaces(CompilationUnit, String, unit_or_namespace, String)
  fullName.vb: PascalABCCompiler.Compiler.SemanticCheckNoLoopDependenciesOfInterfaces(PascalABCCompiler.CompilationUnit, String, PascalABCCompiler.SyntaxTree.unit_or_namespace, String)
  name.vb: SemanticCheckNoLoopDependenciesOfInterfaces(CompilationUnit, String, unit_or_namespace, String)
- uid: PascalABCCompiler.Compiler.SetUseDLLForSystemUnits(System.String,System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace},System.Int32)
  commentId: M:PascalABCCompiler.Compiler.SetUseDLLForSystemUnits(System.String,System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace},System.Int32)
  id: SetUseDLLForSystemUnits(System.String,System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace},System.Int32)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: SetUseDLLForSystemUnits(string, List<unit_or_namespace>, int)
  nameWithType: Compiler.SetUseDLLForSystemUnits(string, List<unit_or_namespace>, int)
  fullName: PascalABCCompiler.Compiler.SetUseDLLForSystemUnits(string, System.Collections.Generic.List<PascalABCCompiler.SyntaxTree.unit_or_namespace>, int)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  summary: Если в программе в секции uses есть не про-во имен и не стандартный модуль, то использование PABCRtl.dll отменяется
  example: []
  syntax:
    content: private void SetUseDLLForSystemUnits(string currentDirectory, List<unit_or_namespace> usesList, int lastUnitIndex)
    parameters:
    - id: currentDirectory
      type: System.String
    - id: usesList
      type: System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace}
    - id: lastUnitIndex
      type: System.Int32
    content.vb: Private Sub SetUseDLLForSystemUnits(currentDirectory As String, usesList As List(Of unit_or_namespace), lastUnitIndex As Integer)
  overload: PascalABCCompiler.Compiler.SetUseDLLForSystemUnits*
  nameWithType.vb: Compiler.SetUseDLLForSystemUnits(String, List(Of unit_or_namespace), Integer)
  fullName.vb: PascalABCCompiler.Compiler.SetUseDLLForSystemUnits(String, System.Collections.Generic.List(Of PascalABCCompiler.SyntaxTree.unit_or_namespace), Integer)
  name.vb: SetUseDLLForSystemUnits(String, List(Of unit_or_namespace), Integer)
- uid: PascalABCCompiler.Compiler.InitializeNewUnit(System.String,System.String,PascalABCCompiler.CompilationUnit@,System.Collections.Generic.Dictionary{PascalABCCompiler.SyntaxTree.syntax_tree_node,System.String}@)
  commentId: M:PascalABCCompiler.Compiler.InitializeNewUnit(System.String,System.String,PascalABCCompiler.CompilationUnit@,System.Collections.Generic.Dictionary{PascalABCCompiler.SyntaxTree.syntax_tree_node,System.String}@)
  id: InitializeNewUnit(System.String,System.String,PascalABCCompiler.CompilationUnit@,System.Collections.Generic.Dictionary{PascalABCCompiler.SyntaxTree.syntax_tree_node,System.String}@)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: InitializeNewUnit(string, string, ref CompilationUnit, out Dictionary<syntax_tree_node, string>)
  nameWithType: Compiler.InitializeNewUnit(string, string, ref CompilationUnit, out Dictionary<syntax_tree_node, string>)
  fullName: PascalABCCompiler.Compiler.InitializeNewUnit(string, string, ref PascalABCCompiler.CompilationUnit, out System.Collections.Generic.Dictionary<PascalABCCompiler.SyntaxTree.syntax_tree_node, string>)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  summary: >-
    Получение исходного кода модуля, заполнение документации,

    генерация синтаксического дерева,

    обработка синтаксических ошибок
  example: []
  syntax:
    content: private void InitializeNewUnit(string unitFileName, string UnitId, ref CompilationUnit currentUnit, out Dictionary<syntax_tree_node, string> docs)
    parameters:
    - id: unitFileName
      type: System.String
    - id: UnitId
      type: System.String
    - id: currentUnit
      type: PascalABCCompiler.CompilationUnit
    - id: docs
      type: System.Collections.Generic.Dictionary{PascalABCCompiler.SyntaxTree.syntax_tree_node,System.String}
    content.vb: Private Sub InitializeNewUnit(unitFileName As String, UnitId As String, currentUnit As CompilationUnit, docs As Dictionary(Of syntax_tree_node, String))
  overload: PascalABCCompiler.Compiler.InitializeNewUnit*
  nameWithType.vb: Compiler.InitializeNewUnit(String, String, CompilationUnit, Dictionary(Of syntax_tree_node, String))
  fullName.vb: PascalABCCompiler.Compiler.InitializeNewUnit(String, String, PascalABCCompiler.CompilationUnit, System.Collections.Generic.Dictionary(Of PascalABCCompiler.SyntaxTree.syntax_tree_node, String))
  name.vb: InitializeNewUnit(String, String, CompilationUnit, Dictionary(Of syntax_tree_node, String))
- uid: PascalABCCompiler.Compiler.ConstructSyntaxTreeAndRunSugarConversions(System.String,PascalABCCompiler.CompilationUnit,System.Collections.Generic.Dictionary{PascalABCCompiler.SyntaxTree.syntax_tree_node,System.String}@)
  commentId: M:PascalABCCompiler.Compiler.ConstructSyntaxTreeAndRunSugarConversions(System.String,PascalABCCompiler.CompilationUnit,System.Collections.Generic.Dictionary{PascalABCCompiler.SyntaxTree.syntax_tree_node,System.String}@)
  id: ConstructSyntaxTreeAndRunSugarConversions(System.String,PascalABCCompiler.CompilationUnit,System.Collections.Generic.Dictionary{PascalABCCompiler.SyntaxTree.syntax_tree_node,System.String}@)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: ConstructSyntaxTreeAndRunSugarConversions(string, CompilationUnit, out Dictionary<syntax_tree_node, string>)
  nameWithType: Compiler.ConstructSyntaxTreeAndRunSugarConversions(string, CompilationUnit, out Dictionary<syntax_tree_node, string>)
  fullName: PascalABCCompiler.Compiler.ConstructSyntaxTreeAndRunSugarConversions(string, PascalABCCompiler.CompilationUnit, out System.Collections.Generic.Dictionary<PascalABCCompiler.SyntaxTree.syntax_tree_node, string>)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  summary: Строит синтаксическое дерево, бросает первую из найденных ошибок (если они есть) и запускает сахарные преобразования
  example: []
  syntax:
    content: private void ConstructSyntaxTreeAndRunSugarConversions(string unitFileName, CompilationUnit currentUnit, out Dictionary<syntax_tree_node, string> docs)
    parameters:
    - id: unitFileName
      type: System.String
    - id: currentUnit
      type: PascalABCCompiler.CompilationUnit
    - id: docs
      type: System.Collections.Generic.Dictionary{PascalABCCompiler.SyntaxTree.syntax_tree_node,System.String}
    content.vb: Private Sub ConstructSyntaxTreeAndRunSugarConversions(unitFileName As String, currentUnit As CompilationUnit, docs As Dictionary(Of syntax_tree_node, String))
  overload: PascalABCCompiler.Compiler.ConstructSyntaxTreeAndRunSugarConversions*
  nameWithType.vb: Compiler.ConstructSyntaxTreeAndRunSugarConversions(String, CompilationUnit, Dictionary(Of syntax_tree_node, String))
  fullName.vb: PascalABCCompiler.Compiler.ConstructSyntaxTreeAndRunSugarConversions(String, PascalABCCompiler.CompilationUnit, System.Collections.Generic.Dictionary(Of PascalABCCompiler.SyntaxTree.syntax_tree_node, String))
  name.vb: ConstructSyntaxTreeAndRunSugarConversions(String, CompilationUnit, Dictionary(Of syntax_tree_node, String))
- uid: PascalABCCompiler.Compiler.InitializeCompilerOptionsRelatedToStandardUnits(PascalABCCompiler.SyntaxTree.compilation_unit)
  commentId: M:PascalABCCompiler.Compiler.InitializeCompilerOptionsRelatedToStandardUnits(PascalABCCompiler.SyntaxTree.compilation_unit)
  id: InitializeCompilerOptionsRelatedToStandardUnits(PascalABCCompiler.SyntaxTree.compilation_unit)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: InitializeCompilerOptionsRelatedToStandardUnits(compilation_unit)
  nameWithType: Compiler.InitializeCompilerOptionsRelatedToStandardUnits(compilation_unit)
  fullName: PascalABCCompiler.Compiler.InitializeCompilerOptionsRelatedToStandardUnits(PascalABCCompiler.SyntaxTree.compilation_unit)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  summary: Устанавливает значения опций DisableStandardUnits и UseDllForSystemUnits
  example: []
  syntax:
    content: private void InitializeCompilerOptionsRelatedToStandardUnits(compilation_unit unitSyntaxTree)
    parameters:
    - id: unitSyntaxTree
      type: PascalABCCompiler.SyntaxTree.compilation_unit
    content.vb: Private Sub InitializeCompilerOptionsRelatedToStandardUnits(unitSyntaxTree As compilation_unit)
  overload: PascalABCCompiler.Compiler.InitializeCompilerOptionsRelatedToStandardUnits*
- uid: PascalABCCompiler.Compiler.RunSemanticChecks(System.String,PascalABCCompiler.CompilationUnit)
  commentId: M:PascalABCCompiler.Compiler.RunSemanticChecks(System.String,PascalABCCompiler.CompilationUnit)
  id: RunSemanticChecks(System.String,PascalABCCompiler.CompilationUnit)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: RunSemanticChecks(string, CompilationUnit)
  nameWithType: Compiler.RunSemanticChecks(string, CompilationUnit)
  fullName: PascalABCCompiler.Compiler.RunSemanticChecks(string, PascalABCCompiler.CompilationUnit)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  summary: Семантические проверки по директивам и по типу файла
  example: []
  syntax:
    content: private void RunSemanticChecks(string unitFileName, CompilationUnit currentUnit)
    parameters:
    - id: unitFileName
      type: System.String
    - id: currentUnit
      type: PascalABCCompiler.CompilationUnit
    content.vb: Private Sub RunSemanticChecks(unitFileName As String, currentUnit As CompilationUnit)
  overload: PascalABCCompiler.Compiler.RunSemanticChecks*
  nameWithType.vb: Compiler.RunSemanticChecks(String, CompilationUnit)
  fullName.vb: PascalABCCompiler.Compiler.RunSemanticChecks(String, PascalABCCompiler.CompilationUnit)
  name.vb: RunSemanticChecks(String, CompilationUnit)
- uid: PascalABCCompiler.Compiler.ConvertSyntaxTree(PascalABCCompiler.SyntaxTree.compilation_unit,System.Collections.Generic.List{PascalABCCompiler.SyntaxTreeConverters.ISyntaxTreeConverter})
  commentId: M:PascalABCCompiler.Compiler.ConvertSyntaxTree(PascalABCCompiler.SyntaxTree.compilation_unit,System.Collections.Generic.List{PascalABCCompiler.SyntaxTreeConverters.ISyntaxTreeConverter})
  id: ConvertSyntaxTree(PascalABCCompiler.SyntaxTree.compilation_unit,System.Collections.Generic.List{PascalABCCompiler.SyntaxTreeConverters.ISyntaxTreeConverter})
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: ConvertSyntaxTree(compilation_unit, List<ISyntaxTreeConverter>)
  nameWithType: Compiler.ConvertSyntaxTree(compilation_unit, List<ISyntaxTreeConverter>)
  fullName: PascalABCCompiler.Compiler.ConvertSyntaxTree(PascalABCCompiler.SyntaxTree.compilation_unit, System.Collections.Generic.List<PascalABCCompiler.SyntaxTreeConverters.ISyntaxTreeConverter>)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private compilation_unit ConvertSyntaxTree(compilation_unit syntaxTree, List<ISyntaxTreeConverter> converters)
    parameters:
    - id: syntaxTree
      type: PascalABCCompiler.SyntaxTree.compilation_unit
    - id: converters
      type: System.Collections.Generic.List{PascalABCCompiler.SyntaxTreeConverters.ISyntaxTreeConverter}
    return:
      type: PascalABCCompiler.SyntaxTree.compilation_unit
    content.vb: Private Function ConvertSyntaxTree(syntaxTree As compilation_unit, converters As List(Of ISyntaxTreeConverter)) As compilation_unit
  overload: PascalABCCompiler.Compiler.ConvertSyntaxTree*
  nameWithType.vb: Compiler.ConvertSyntaxTree(compilation_unit, List(Of ISyntaxTreeConverter))
  fullName.vb: PascalABCCompiler.Compiler.ConvertSyntaxTree(PascalABCCompiler.SyntaxTree.compilation_unit, System.Collections.Generic.List(Of PascalABCCompiler.SyntaxTreeConverters.ISyntaxTreeConverter))
  name.vb: ConvertSyntaxTree(compilation_unit, List(Of ISyntaxTreeConverter))
- uid: PascalABCCompiler.Compiler.SemanticCheckNamespacesOnlyInProjects(PascalABCCompiler.CompilationUnit)
  commentId: M:PascalABCCompiler.Compiler.SemanticCheckNamespacesOnlyInProjects(PascalABCCompiler.CompilationUnit)
  id: SemanticCheckNamespacesOnlyInProjects(PascalABCCompiler.CompilationUnit)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: SemanticCheckNamespacesOnlyInProjects(CompilationUnit)
  nameWithType: Compiler.SemanticCheckNamespacesOnlyInProjects(CompilationUnit)
  fullName: PascalABCCompiler.Compiler.SemanticCheckNamespacesOnlyInProjects(PascalABCCompiler.CompilationUnit)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private void SemanticCheckNamespacesOnlyInProjects(CompilationUnit currentUnit)
    parameters:
    - id: currentUnit
      type: PascalABCCompiler.CompilationUnit
    content.vb: Private Sub SemanticCheckNamespacesOnlyInProjects(currentUnit As CompilationUnit)
  overload: PascalABCCompiler.Compiler.SemanticCheckNamespacesOnlyInProjects*
- uid: PascalABCCompiler.Compiler.SemanticCheckCurrentUnitMustBeUnitModule(System.String,PascalABCCompiler.CompilationUnit,System.Boolean)
  commentId: M:PascalABCCompiler.Compiler.SemanticCheckCurrentUnitMustBeUnitModule(System.String,PascalABCCompiler.CompilationUnit,System.Boolean)
  id: SemanticCheckCurrentUnitMustBeUnitModule(System.String,PascalABCCompiler.CompilationUnit,System.Boolean)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: SemanticCheckCurrentUnitMustBeUnitModule(string, CompilationUnit, bool)
  nameWithType: Compiler.SemanticCheckCurrentUnitMustBeUnitModule(string, CompilationUnit, bool)
  fullName: PascalABCCompiler.Compiler.SemanticCheckCurrentUnitMustBeUnitModule(string, PascalABCCompiler.CompilationUnit, bool)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private void SemanticCheckCurrentUnitMustBeUnitModule(string UnitFileName, CompilationUnit currentUnit, bool isDll)
    parameters:
    - id: UnitFileName
      type: System.String
    - id: currentUnit
      type: PascalABCCompiler.CompilationUnit
    - id: isDll
      type: System.Boolean
    content.vb: Private Sub SemanticCheckCurrentUnitMustBeUnitModule(UnitFileName As String, currentUnit As CompilationUnit, isDll As Boolean)
  overload: PascalABCCompiler.Compiler.SemanticCheckCurrentUnitMustBeUnitModule*
  nameWithType.vb: Compiler.SemanticCheckCurrentUnitMustBeUnitModule(String, CompilationUnit, Boolean)
  fullName.vb: PascalABCCompiler.Compiler.SemanticCheckCurrentUnitMustBeUnitModule(String, PascalABCCompiler.CompilationUnit, Boolean)
  name.vb: SemanticCheckCurrentUnitMustBeUnitModule(String, CompilationUnit, Boolean)
- uid: PascalABCCompiler.Compiler.MatchSyntaxErrorsToBadNodes(PascalABCCompiler.CompilationUnit)
  commentId: M:PascalABCCompiler.Compiler.MatchSyntaxErrorsToBadNodes(PascalABCCompiler.CompilationUnit)
  id: MatchSyntaxErrorsToBadNodes(PascalABCCompiler.CompilationUnit)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: MatchSyntaxErrorsToBadNodes(CompilationUnit)
  nameWithType: Compiler.MatchSyntaxErrorsToBadNodes(CompilationUnit)
  fullName: PascalABCCompiler.Compiler.MatchSyntaxErrorsToBadNodes(PascalABCCompiler.CompilationUnit)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private void MatchSyntaxErrorsToBadNodes(CompilationUnit currentUnit)
    parameters:
    - id: currentUnit
      type: PascalABCCompiler.CompilationUnit
    content.vb: Private Sub MatchSyntaxErrorsToBadNodes(currentUnit As CompilationUnit)
  overload: PascalABCCompiler.Compiler.MatchSyntaxErrorsToBadNodes*
- uid: PascalABCCompiler.Compiler.SemanticCheckDLLDirectiveOnlyForLibraries(PascalABCCompiler.SyntaxTree.compilation_unit,System.Boolean,PascalABCCompiler.SyntaxTree.compiler_directive)
  commentId: M:PascalABCCompiler.Compiler.SemanticCheckDLLDirectiveOnlyForLibraries(PascalABCCompiler.SyntaxTree.compilation_unit,System.Boolean,PascalABCCompiler.SyntaxTree.compiler_directive)
  id: SemanticCheckDLLDirectiveOnlyForLibraries(PascalABCCompiler.SyntaxTree.compilation_unit,System.Boolean,PascalABCCompiler.SyntaxTree.compiler_directive)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: SemanticCheckDLLDirectiveOnlyForLibraries(compilation_unit, bool, compiler_directive)
  nameWithType: Compiler.SemanticCheckDLLDirectiveOnlyForLibraries(compilation_unit, bool, compiler_directive)
  fullName: PascalABCCompiler.Compiler.SemanticCheckDLLDirectiveOnlyForLibraries(PascalABCCompiler.SyntaxTree.compilation_unit, bool, PascalABCCompiler.SyntaxTree.compiler_directive)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  summary: Проверка, что директива dll только в Library - требует передачи директивы dll
  example: []
  syntax:
    content: private void SemanticCheckDLLDirectiveOnlyForLibraries(compilation_unit unitSyntaxTree, bool isDll, compiler_directive dllDirective)
    parameters:
    - id: unitSyntaxTree
      type: PascalABCCompiler.SyntaxTree.compilation_unit
    - id: isDll
      type: System.Boolean
    - id: dllDirective
      type: PascalABCCompiler.SyntaxTree.compiler_directive
    content.vb: Private Sub SemanticCheckDLLDirectiveOnlyForLibraries(unitSyntaxTree As compilation_unit, isDll As Boolean, dllDirective As compiler_directive)
  overload: PascalABCCompiler.Compiler.SemanticCheckDLLDirectiveOnlyForLibraries*
  nameWithType.vb: Compiler.SemanticCheckDLLDirectiveOnlyForLibraries(compilation_unit, Boolean, compiler_directive)
  fullName.vb: PascalABCCompiler.Compiler.SemanticCheckDLLDirectiveOnlyForLibraries(PascalABCCompiler.SyntaxTree.compilation_unit, Boolean, PascalABCCompiler.SyntaxTree.compiler_directive)
  name.vb: SemanticCheckDLLDirectiveOnlyForLibraries(compilation_unit, Boolean, compiler_directive)
- uid: PascalABCCompiler.Compiler.SemanticCheckDisableStandardUnitsDirectiveInUnit(PascalABCCompiler.SyntaxTree.compilation_unit)
  commentId: M:PascalABCCompiler.Compiler.SemanticCheckDisableStandardUnitsDirectiveInUnit(PascalABCCompiler.SyntaxTree.compilation_unit)
  id: SemanticCheckDisableStandardUnitsDirectiveInUnit(PascalABCCompiler.SyntaxTree.compilation_unit)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: SemanticCheckDisableStandardUnitsDirectiveInUnit(compilation_unit)
  nameWithType: Compiler.SemanticCheckDisableStandardUnitsDirectiveInUnit(compilation_unit)
  fullName: PascalABCCompiler.Compiler.SemanticCheckDisableStandardUnitsDirectiveInUnit(PascalABCCompiler.SyntaxTree.compilation_unit)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  summary: Ошибка указания директивы DisableStandardUnits в подключенном модулей
  example: []
  syntax:
    content: private void SemanticCheckDisableStandardUnitsDirectiveInUnit(compilation_unit unitSyntaxTree)
    parameters:
    - id: unitSyntaxTree
      type: PascalABCCompiler.SyntaxTree.compilation_unit
    content.vb: Private Sub SemanticCheckDisableStandardUnitsDirectiveInUnit(unitSyntaxTree As compilation_unit)
  overload: PascalABCCompiler.Compiler.SemanticCheckDisableStandardUnitsDirectiveInUnit*
- uid: PascalABCCompiler.Compiler.ConstructSyntaxTree(System.String,PascalABCCompiler.CompilationUnit,System.String)
  commentId: M:PascalABCCompiler.Compiler.ConstructSyntaxTree(System.String,PascalABCCompiler.CompilationUnit,System.String)
  id: ConstructSyntaxTree(System.String,PascalABCCompiler.CompilationUnit,System.String)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: ConstructSyntaxTree(string, CompilationUnit, string)
  nameWithType: Compiler.ConstructSyntaxTree(string, CompilationUnit, string)
  fullName: PascalABCCompiler.Compiler.ConstructSyntaxTree(string, PascalABCCompiler.CompilationUnit, string)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private compilation_unit ConstructSyntaxTree(string unitFileName, CompilationUnit currentUnit, string sourceText)
    parameters:
    - id: unitFileName
      type: System.String
    - id: currentUnit
      type: PascalABCCompiler.CompilationUnit
    - id: sourceText
      type: System.String
    return:
      type: PascalABCCompiler.SyntaxTree.compilation_unit
    content.vb: Private Function ConstructSyntaxTree(unitFileName As String, currentUnit As CompilationUnit, sourceText As String) As compilation_unit
  overload: PascalABCCompiler.Compiler.ConstructSyntaxTree*
  nameWithType.vb: Compiler.ConstructSyntaxTree(String, CompilationUnit, String)
  fullName.vb: PascalABCCompiler.Compiler.ConstructSyntaxTree(String, PascalABCCompiler.CompilationUnit, String)
  name.vb: ConstructSyntaxTree(String, CompilationUnit, String)
- uid: PascalABCCompiler.Compiler.GetSourceCode(System.String,PascalABCCompiler.CompilationUnit)
  commentId: M:PascalABCCompiler.Compiler.GetSourceCode(System.String,PascalABCCompiler.CompilationUnit)
  id: GetSourceCode(System.String,PascalABCCompiler.CompilationUnit)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: GetSourceCode(string, CompilationUnit)
  nameWithType: Compiler.GetSourceCode(string, CompilationUnit)
  fullName: PascalABCCompiler.Compiler.GetSourceCode(string, PascalABCCompiler.CompilationUnit)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private string GetSourceCode(string UnitFileName, CompilationUnit currentUnit)
    parameters:
    - id: UnitFileName
      type: System.String
    - id: currentUnit
      type: PascalABCCompiler.CompilationUnit
    return:
      type: System.String
    content.vb: Private Function GetSourceCode(UnitFileName As String, currentUnit As CompilationUnit) As String
  overload: PascalABCCompiler.Compiler.GetSourceCode*
  nameWithType.vb: Compiler.GetSourceCode(String, CompilationUnit)
  fullName.vb: PascalABCCompiler.Compiler.GetSourceCode(String, PascalABCCompiler.CompilationUnit)
  name.vb: GetSourceCode(String, CompilationUnit)
- uid: PascalABCCompiler.Compiler.CurrentUnitIsNotMainProgram
  commentId: M:PascalABCCompiler.Compiler.CurrentUnitIsNotMainProgram
  id: CurrentUnitIsNotMainProgram
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: CurrentUnitIsNotMainProgram()
  nameWithType: Compiler.CurrentUnitIsNotMainProgram()
  fullName: PascalABCCompiler.Compiler.CurrentUnitIsNotMainProgram()
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  summary: Возвращает true, если текущий компилируемый модуль не является основной программой (program_module)
  example: []
  syntax:
    content: private bool CurrentUnitIsNotMainProgram()
    return:
      type: System.Boolean
    content.vb: Private Function CurrentUnitIsNotMainProgram() As Boolean
  overload: PascalABCCompiler.Compiler.CurrentUnitIsNotMainProgram*
- uid: PascalABCCompiler.Compiler.GenUnitDocumentation(PascalABCCompiler.CompilationUnit,System.String)
  commentId: M:PascalABCCompiler.Compiler.GenUnitDocumentation(PascalABCCompiler.CompilationUnit,System.String)
  id: GenUnitDocumentation(PascalABCCompiler.CompilationUnit,System.String)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: GenUnitDocumentation(CompilationUnit, string)
  nameWithType: Compiler.GenUnitDocumentation(CompilationUnit, string)
  fullName: PascalABCCompiler.Compiler.GenUnitDocumentation(PascalABCCompiler.CompilationUnit, string)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private Dictionary<syntax_tree_node, string> GenUnitDocumentation(CompilationUnit currentUnit, string SourceText)
    parameters:
    - id: currentUnit
      type: PascalABCCompiler.CompilationUnit
    - id: SourceText
      type: System.String
    return:
      type: System.Collections.Generic.Dictionary{PascalABCCompiler.SyntaxTree.syntax_tree_node,System.String}
    content.vb: Private Function GenUnitDocumentation(currentUnit As CompilationUnit, SourceText As String) As Dictionary(Of syntax_tree_node, String)
  overload: PascalABCCompiler.Compiler.GenUnitDocumentation*
  nameWithType.vb: Compiler.GenUnitDocumentation(CompilationUnit, String)
  fullName.vb: PascalABCCompiler.Compiler.GenUnitDocumentation(PascalABCCompiler.CompilationUnit, String)
  name.vb: GenUnitDocumentation(CompilationUnit, String)
- uid: PascalABCCompiler.Compiler.UnitHasPCU(PascalABCCompiler.TreeRealization.unit_node_list,System.Collections.Generic.Dictionary{PascalABCCompiler.TreeRealization.unit_node,PascalABCCompiler.CompilationUnit},PascalABCCompiler.SyntaxTree.unit_or_namespace,System.String@,PascalABCCompiler.CompilationUnit@)
  commentId: M:PascalABCCompiler.Compiler.UnitHasPCU(PascalABCCompiler.TreeRealization.unit_node_list,System.Collections.Generic.Dictionary{PascalABCCompiler.TreeRealization.unit_node,PascalABCCompiler.CompilationUnit},PascalABCCompiler.SyntaxTree.unit_or_namespace,System.String@,PascalABCCompiler.CompilationUnit@)
  id: UnitHasPCU(PascalABCCompiler.TreeRealization.unit_node_list,System.Collections.Generic.Dictionary{PascalABCCompiler.TreeRealization.unit_node,PascalABCCompiler.CompilationUnit},PascalABCCompiler.SyntaxTree.unit_or_namespace,System.String@,PascalABCCompiler.CompilationUnit@)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: UnitHasPCU(unit_node_list, Dictionary<unit_node, CompilationUnit>, unit_or_namespace, ref string, ref CompilationUnit)
  nameWithType: Compiler.UnitHasPCU(unit_node_list, Dictionary<unit_node, CompilationUnit>, unit_or_namespace, ref string, ref CompilationUnit)
  fullName: PascalABCCompiler.Compiler.UnitHasPCU(PascalABCCompiler.TreeRealization.unit_node_list, System.Collections.Generic.Dictionary<PascalABCCompiler.TreeRealization.unit_node, PascalABCCompiler.CompilationUnit>, PascalABCCompiler.SyntaxTree.unit_or_namespace, ref string, ref PascalABCCompiler.CompilationUnit)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private bool UnitHasPCU(unit_node_list unitsFromUsesSection, Dictionary<unit_node, CompilationUnit> directUnitsFromUsesSection, unit_or_namespace currentUnitNode, ref string UnitFileName, ref CompilationUnit currentUnit)
    parameters:
    - id: unitsFromUsesSection
      type: PascalABCCompiler.TreeRealization.unit_node_list
    - id: directUnitsFromUsesSection
      type: System.Collections.Generic.Dictionary{PascalABCCompiler.TreeRealization.unit_node,PascalABCCompiler.CompilationUnit}
    - id: currentUnitNode
      type: PascalABCCompiler.SyntaxTree.unit_or_namespace
    - id: UnitFileName
      type: System.String
    - id: currentUnit
      type: PascalABCCompiler.CompilationUnit
    return:
      type: System.Boolean
    content.vb: Private Function UnitHasPCU(unitsFromUsesSection As unit_node_list, directUnitsFromUsesSection As Dictionary(Of unit_node, CompilationUnit), currentUnitNode As unit_or_namespace, UnitFileName As String, currentUnit As CompilationUnit) As Boolean
  overload: PascalABCCompiler.Compiler.UnitHasPCU*
  nameWithType.vb: Compiler.UnitHasPCU(unit_node_list, Dictionary(Of unit_node, CompilationUnit), unit_or_namespace, String, CompilationUnit)
  fullName.vb: PascalABCCompiler.Compiler.UnitHasPCU(PascalABCCompiler.TreeRealization.unit_node_list, System.Collections.Generic.Dictionary(Of PascalABCCompiler.TreeRealization.unit_node, PascalABCCompiler.CompilationUnit), PascalABCCompiler.SyntaxTree.unit_or_namespace, String, PascalABCCompiler.CompilationUnit)
  name.vb: UnitHasPCU(unit_node_list, Dictionary(Of unit_node, CompilationUnit), unit_or_namespace, String, CompilationUnit)
- uid: PascalABCCompiler.Compiler.AddDocumentationToNodes(PascalABCCompiler.CompilationUnit,System.String)
  commentId: M:PascalABCCompiler.Compiler.AddDocumentationToNodes(PascalABCCompiler.CompilationUnit,System.String)
  id: AddDocumentationToNodes(PascalABCCompiler.CompilationUnit,System.String)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: AddDocumentationToNodes(CompilationUnit, string)
  nameWithType: Compiler.AddDocumentationToNodes(CompilationUnit, string)
  fullName: PascalABCCompiler.Compiler.AddDocumentationToNodes(PascalABCCompiler.CompilationUnit, string)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private Dictionary<syntax_tree_node, string> AddDocumentationToNodes(CompilationUnit currentUnit, string text)
    parameters:
    - id: currentUnit
      type: PascalABCCompiler.CompilationUnit
    - id: text
      type: System.String
    return:
      type: System.Collections.Generic.Dictionary{PascalABCCompiler.SyntaxTree.syntax_tree_node,System.String}
    content.vb: Private Function AddDocumentationToNodes(currentUnit As CompilationUnit, text As String) As Dictionary(Of syntax_tree_node, String)
  overload: PascalABCCompiler.Compiler.AddDocumentationToNodes*
  nameWithType.vb: Compiler.AddDocumentationToNodes(CompilationUnit, String)
  fullName.vb: PascalABCCompiler.Compiler.AddDocumentationToNodes(PascalABCCompiler.CompilationUnit, String)
  name.vb: AddDocumentationToNodes(CompilationUnit, String)
- uid: PascalABCCompiler.Compiler.IsDocumentationNeeded(PascalABCCompiler.SyntaxTree.compilation_unit)
  commentId: M:PascalABCCompiler.Compiler.IsDocumentationNeeded(PascalABCCompiler.SyntaxTree.compilation_unit)
  id: IsDocumentationNeeded(PascalABCCompiler.SyntaxTree.compilation_unit)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: IsDocumentationNeeded(compilation_unit)
  nameWithType: Compiler.IsDocumentationNeeded(compilation_unit)
  fullName: PascalABCCompiler.Compiler.IsDocumentationNeeded(PascalABCCompiler.SyntaxTree.compilation_unit)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private bool IsDocumentationNeeded(compilation_unit unitSyntaxTree)
    parameters:
    - id: unitSyntaxTree
      type: PascalABCCompiler.SyntaxTree.compilation_unit
    return:
      type: System.Boolean
    content.vb: Private Function IsDocumentationNeeded(unitSyntaxTree As compilation_unit) As Boolean
  overload: PascalABCCompiler.Compiler.IsDocumentationNeeded*
- uid: PascalABCCompiler.Compiler.buildImplementationUsesList(PascalABCCompiler.CompilationUnit)
  commentId: M:PascalABCCompiler.Compiler.buildImplementationUsesList(PascalABCCompiler.CompilationUnit)
  id: buildImplementationUsesList(PascalABCCompiler.CompilationUnit)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: buildImplementationUsesList(CompilationUnit)
  nameWithType: Compiler.buildImplementationUsesList(CompilationUnit)
  fullName: PascalABCCompiler.Compiler.buildImplementationUsesList(PascalABCCompiler.CompilationUnit)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private unit_node_list buildImplementationUsesList(CompilationUnit cu)
    parameters:
    - id: cu
      type: PascalABCCompiler.CompilationUnit
    return:
      type: PascalABCCompiler.TreeRealization.unit_node_list
    content.vb: Private Function buildImplementationUsesList(cu As CompilationUnit) As unit_node_list
  overload: PascalABCCompiler.Compiler.buildImplementationUsesList*
- uid: PascalABCCompiler.Compiler.SavePCU(PascalABCCompiler.CompilationUnit)
  commentId: M:PascalABCCompiler.Compiler.SavePCU(PascalABCCompiler.CompilationUnit)
  id: SavePCU(PascalABCCompiler.CompilationUnit)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: SavePCU(CompilationUnit)
  nameWithType: Compiler.SavePCU(CompilationUnit)
  fullName: PascalABCCompiler.Compiler.SavePCU(PascalABCCompiler.CompilationUnit)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public void SavePCU(CompilationUnit Unit)
    parameters:
    - id: Unit
      type: PascalABCCompiler.CompilationUnit
    content.vb: Public Sub SavePCU(Unit As CompilationUnit)
  overload: PascalABCCompiler.Compiler.SavePCU*
- uid: PascalABCCompiler.Compiler.ReadPCU(System.String)
  commentId: M:PascalABCCompiler.Compiler.ReadPCU(System.String)
  id: ReadPCU(System.String)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: ReadPCU(string)
  nameWithType: Compiler.ReadPCU(string)
  fullName: PascalABCCompiler.Compiler.ReadPCU(string)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public CompilationUnit ReadPCU(string FileName)
    parameters:
    - id: FileName
      type: System.String
    return:
      type: PascalABCCompiler.CompilationUnit
    content.vb: Public Function ReadPCU(FileName As String) As CompilationUnit
  overload: PascalABCCompiler.Compiler.ReadPCU*
  nameWithType.vb: Compiler.ReadPCU(String)
  fullName.vb: PascalABCCompiler.Compiler.ReadPCU(String)
  name.vb: ReadPCU(String)
- uid: PascalABCCompiler.Compiler.pr_ChangeState(System.Object,PascalABCCompiler.PCU.PCUReaderWriterState,System.Object)
  commentId: M:PascalABCCompiler.Compiler.pr_ChangeState(System.Object,PascalABCCompiler.PCU.PCUReaderWriterState,System.Object)
  id: pr_ChangeState(System.Object,PascalABCCompiler.PCU.PCUReaderWriterState,System.Object)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: pr_ChangeState(object, PCUReaderWriterState, object)
  nameWithType: Compiler.pr_ChangeState(object, PCUReaderWriterState, object)
  fullName: PascalABCCompiler.Compiler.pr_ChangeState(object, PascalABCCompiler.PCU.PCUReaderWriterState, object)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private void pr_ChangeState(object Sender, PCUReaderWriterState State, object obj)
    parameters:
    - id: Sender
      type: System.Object
    - id: State
      type: PascalABCCompiler.PCU.PCUReaderWriterState
    - id: obj
      type: System.Object
    content.vb: Private Sub pr_ChangeState(Sender As Object, State As PCUReaderWriterState, obj As Object)
  overload: PascalABCCompiler.Compiler.pr_ChangeState*
  nameWithType.vb: Compiler.pr_ChangeState(Object, PCUReaderWriterState, Object)
  fullName.vb: PascalABCCompiler.Compiler.pr_ChangeState(Object, PascalABCCompiler.PCU.PCUReaderWriterState, Object)
  name.vb: pr_ChangeState(Object, PCUReaderWriterState, Object)
- uid: PascalABCCompiler.Compiler.get_standart_assembly_path(System.String)
  commentId: M:PascalABCCompiler.Compiler.get_standart_assembly_path(System.String)
  id: get_standart_assembly_path(System.String)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: get_standart_assembly_path(string)
  nameWithType: Compiler.get_standart_assembly_path(string)
  fullName: PascalABCCompiler.Compiler.get_standart_assembly_path(string)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public static string get_standart_assembly_path(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function get_standart_assembly_path(name As String) As String
  overload: PascalABCCompiler.Compiler.get_standart_assembly_path*
  nameWithType.vb: Compiler.get_standart_assembly_path(String)
  fullName.vb: PascalABCCompiler.Compiler.get_standart_assembly_path(String)
  name.vb: get_standart_assembly_path(String)
- uid: PascalABCCompiler.Compiler.get_assembly_path(System.String,System.Boolean)
  commentId: M:PascalABCCompiler.Compiler.get_assembly_path(System.String,System.Boolean)
  id: get_assembly_path(System.String,System.Boolean)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: get_assembly_path(string, bool)
  nameWithType: Compiler.get_assembly_path(string, bool)
  fullName: PascalABCCompiler.Compiler.get_assembly_path(string, bool)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public static string get_assembly_path(string name, bool search_for_intellisense)
    parameters:
    - id: name
      type: System.String
    - id: search_for_intellisense
      type: System.Boolean
    return:
      type: System.String
    content.vb: Public Shared Function get_assembly_path(name As String, search_for_intellisense As Boolean) As String
  overload: PascalABCCompiler.Compiler.get_assembly_path*
  nameWithType.vb: Compiler.get_assembly_path(String, Boolean)
  fullName.vb: PascalABCCompiler.Compiler.get_assembly_path(String, Boolean)
  name.vb: get_assembly_path(String, Boolean)
- uid: PascalABCCompiler.Compiler.ReadDLL(System.String,PascalABCCompiler.SyntaxTree.SourceContext)
  commentId: M:PascalABCCompiler.Compiler.ReadDLL(System.String,PascalABCCompiler.SyntaxTree.SourceContext)
  id: ReadDLL(System.String,PascalABCCompiler.SyntaxTree.SourceContext)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: ReadDLL(string, SourceContext)
  nameWithType: Compiler.ReadDLL(string, SourceContext)
  fullName: PascalABCCompiler.Compiler.ReadDLL(string, PascalABCCompiler.SyntaxTree.SourceContext)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public CompilationUnit ReadDLL(string FileName, SourceContext sc = null)
    parameters:
    - id: FileName
      type: System.String
    - id: sc
      type: PascalABCCompiler.SyntaxTree.SourceContext
    return:
      type: PascalABCCompiler.CompilationUnit
    content.vb: Public Function ReadDLL(FileName As String, sc As SourceContext = Nothing) As CompilationUnit
  overload: PascalABCCompiler.Compiler.ReadDLL*
  nameWithType.vb: Compiler.ReadDLL(String, SourceContext)
  fullName.vb: PascalABCCompiler.Compiler.ReadDLL(String, PascalABCCompiler.SyntaxTree.SourceContext)
  name.vb: ReadDLL(String, SourceContext)
- uid: PascalABCCompiler.Compiler.NeedRecompiled(System.String,System.String[],PascalABCCompiler.PCU.PCUReader)
  commentId: M:PascalABCCompiler.Compiler.NeedRecompiled(System.String,System.String[],PascalABCCompiler.PCU.PCUReader)
  id: NeedRecompiled(System.String,System.String[],PascalABCCompiler.PCU.PCUReader)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: NeedRecompiled(string, string[], PCUReader)
  nameWithType: Compiler.NeedRecompiled(string, string[], PCUReader)
  fullName: PascalABCCompiler.Compiler.NeedRecompiled(string, string[], PascalABCCompiler.PCU.PCUReader)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public bool NeedRecompiled(string pcu_name, string[] included, PCUReader pr)
    parameters:
    - id: pcu_name
      type: System.String
    - id: included
      type: System.String[]
    - id: pr
      type: PascalABCCompiler.PCU.PCUReader
    return:
      type: System.Boolean
    content.vb: Public Function NeedRecompiled(pcu_name As String, included As String(), pr As PCUReader) As Boolean
  overload: PascalABCCompiler.Compiler.NeedRecompiled*
  nameWithType.vb: Compiler.NeedRecompiled(String, String(), PCUReader)
  fullName.vb: PascalABCCompiler.Compiler.NeedRecompiled(String, String(), PascalABCCompiler.PCU.PCUReader)
  name.vb: NeedRecompiled(String, String(), PCUReader)
- uid: PascalABCCompiler.Compiler.ClearAll(System.Boolean)
  commentId: M:PascalABCCompiler.Compiler.ClearAll(System.Boolean)
  id: ClearAll(System.Boolean)
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: ClearAll(bool)
  nameWithType: Compiler.ClearAll(bool)
  fullName: PascalABCCompiler.Compiler.ClearAll(bool)
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public void ClearAll(bool close_pcu = true)
    parameters:
    - id: close_pcu
      type: System.Boolean
    content.vb: Public Sub ClearAll(close_pcu As Boolean = True)
  overload: PascalABCCompiler.Compiler.ClearAll*
  nameWithType.vb: Compiler.ClearAll(Boolean)
  fullName.vb: PascalABCCompiler.Compiler.ClearAll(Boolean)
  name.vb: ClearAll(Boolean)
- uid: PascalABCCompiler.Compiler.Free
  commentId: M:PascalABCCompiler.Compiler.Free
  id: Free
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: Free()
  nameWithType: Compiler.Free()
  fullName: PascalABCCompiler.Compiler.Free()
  type: Method
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  example: []
  syntax:
    content: public void Free()
    content.vb: Public Sub Free()
  overload: PascalABCCompiler.Compiler.Free*
  implements:
  - PascalABCCompiler.ICompiler.Free
- uid: PascalABCCompiler.Compiler.PABCCodeHealth
  commentId: P:PascalABCCompiler.Compiler.PABCCodeHealth
  id: PABCCodeHealth
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: PABCCodeHealth
  nameWithType: Compiler.PABCCodeHealth
  fullName: PascalABCCompiler.Compiler.PABCCodeHealth
  type: Property
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  summary: >-
    Здоровье кода на всякий случай выносим в интерфейс компилятора

    Реально оно будет использоваться только при запуске из под оболочки (Remote Compiler)
  example: []
  syntax:
    content: public int PABCCodeHealth { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property PABCCodeHealth As Integer
  overload: PascalABCCompiler.Compiler.PABCCodeHealth*
  implements:
  - PascalABCCompiler.ICompiler.PABCCodeHealth
- uid: PascalABCCompiler.Compiler.Version
  commentId: P:PascalABCCompiler.Compiler.Version
  id: Version
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: Compiler.Version
  fullName: PascalABCCompiler.Compiler.Version
  type: Property
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public static string Version { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property Version As String
  overload: PascalABCCompiler.Compiler.Version*
- uid: PascalABCCompiler.Compiler.ShortVersion
  commentId: P:PascalABCCompiler.Compiler.ShortVersion
  id: ShortVersion
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: ShortVersion
  nameWithType: Compiler.ShortVersion
  fullName: PascalABCCompiler.Compiler.ShortVersion
  type: Property
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public static string ShortVersion { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property ShortVersion As String
  overload: PascalABCCompiler.Compiler.ShortVersion*
- uid: PascalABCCompiler.Compiler.VersionDateTime
  commentId: P:PascalABCCompiler.Compiler.VersionDateTime
  id: VersionDateTime
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: VersionDateTime
  nameWithType: Compiler.VersionDateTime
  fullName: PascalABCCompiler.Compiler.VersionDateTime
  type: Property
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public static DateTime VersionDateTime { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Shared ReadOnly Property VersionDateTime As Date
  overload: PascalABCCompiler.Compiler.VersionDateTime*
- uid: PascalABCCompiler.Compiler.Banner
  commentId: P:PascalABCCompiler.Compiler.Banner
  id: Banner
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: Banner
  nameWithType: Compiler.Banner
  fullName: PascalABCCompiler.Compiler.Banner
  type: Property
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public static string Banner { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property Banner As String
  overload: PascalABCCompiler.Compiler.Banner*
- uid: PascalABCCompiler.Compiler.SemanticTreeConvertersController
  commentId: P:PascalABCCompiler.Compiler.SemanticTreeConvertersController
  id: SemanticTreeConvertersController
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: SemanticTreeConvertersController
  nameWithType: Compiler.SemanticTreeConvertersController
  fullName: PascalABCCompiler.Compiler.SemanticTreeConvertersController
  type: Property
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  example: []
  syntax:
    content: public SemanticTreeConvertersController SemanticTreeConvertersController { get; }
    parameters: []
    return:
      type: PascalABCCompiler.SemanticTreeConverters.SemanticTreeConvertersController
    content.vb: Public ReadOnly Property SemanticTreeConvertersController As SemanticTreeConvertersController
  overload: PascalABCCompiler.Compiler.SemanticTreeConvertersController*
  implements:
  - PascalABCCompiler.ICompiler.SemanticTreeConvertersController
- uid: PascalABCCompiler.Compiler.SemanticTree
  commentId: P:PascalABCCompiler.Compiler.SemanticTree
  id: SemanticTree
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: SemanticTree
  nameWithType: Compiler.SemanticTree
  fullName: PascalABCCompiler.Compiler.SemanticTree
  type: Property
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  example: []
  syntax:
    content: public IProgramNode SemanticTree { get; }
    parameters: []
    return:
      type: PascalABCCompiler.SemanticTree.IProgramNode
    content.vb: Public ReadOnly Property SemanticTree As IProgramNode
  overload: PascalABCCompiler.Compiler.SemanticTree*
  implements:
  - PascalABCCompiler.ICompiler.SemanticTree
- uid: PascalABCCompiler.Compiler.LinesCompiled
  commentId: P:PascalABCCompiler.Compiler.LinesCompiled
  id: LinesCompiled
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: LinesCompiled
  nameWithType: Compiler.LinesCompiled
  fullName: PascalABCCompiler.Compiler.LinesCompiled
  type: Property
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  example: []
  syntax:
    content: public uint LinesCompiled { get; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public ReadOnly Property LinesCompiled As UInteger
  overload: PascalABCCompiler.Compiler.LinesCompiled*
  implements:
  - PascalABCCompiler.ICompiler.LinesCompiled
- uid: PascalABCCompiler.Compiler.InternalDebug
  commentId: P:PascalABCCompiler.Compiler.InternalDebug
  id: InternalDebug
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: InternalDebug
  nameWithType: Compiler.InternalDebug
  fullName: PascalABCCompiler.Compiler.InternalDebug
  type: Property
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  example: []
  syntax:
    content: public CompilerInternalDebug InternalDebug { get; set; }
    parameters: []
    return:
      type: PascalABCCompiler.CompilerInternalDebug
    content.vb: Public Property InternalDebug As CompilerInternalDebug
  overload: PascalABCCompiler.Compiler.InternalDebug*
  implements:
  - PascalABCCompiler.ICompiler.InternalDebug
- uid: PascalABCCompiler.Compiler.State
  commentId: P:PascalABCCompiler.Compiler.State
  id: State
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: State
  nameWithType: Compiler.State
  fullName: PascalABCCompiler.Compiler.State
  type: Property
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  example: []
  syntax:
    content: public CompilerState State { get; }
    parameters: []
    return:
      type: PascalABCCompiler.CompilerState
    content.vb: Public ReadOnly Property State As CompilerState
  overload: PascalABCCompiler.Compiler.State*
  implements:
  - PascalABCCompiler.ICompiler.State
- uid: PascalABCCompiler.Compiler.SupportedSourceFiles
  commentId: P:PascalABCCompiler.Compiler.SupportedSourceFiles
  id: SupportedSourceFiles
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: SupportedSourceFiles
  nameWithType: Compiler.SupportedSourceFiles
  fullName: PascalABCCompiler.Compiler.SupportedSourceFiles
  type: Property
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  example: []
  syntax:
    content: public SupportedSourceFile[] SupportedSourceFiles { get; set; }
    parameters: []
    return:
      type: PascalABCCompiler.SupportedSourceFile[]
    content.vb: Public Property SupportedSourceFiles As SupportedSourceFile()
  overload: PascalABCCompiler.Compiler.SupportedSourceFiles*
  implements:
  - PascalABCCompiler.ICompiler.SupportedSourceFiles
- uid: PascalABCCompiler.Compiler.SupportedProjectFiles
  commentId: P:PascalABCCompiler.Compiler.SupportedProjectFiles
  id: SupportedProjectFiles
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: SupportedProjectFiles
  nameWithType: Compiler.SupportedProjectFiles
  fullName: PascalABCCompiler.Compiler.SupportedProjectFiles
  type: Property
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  example: []
  syntax:
    content: public SupportedSourceFile[] SupportedProjectFiles { get; }
    parameters: []
    return:
      type: PascalABCCompiler.SupportedSourceFile[]
    content.vb: Public ReadOnly Property SupportedProjectFiles As SupportedSourceFile()
  overload: PascalABCCompiler.Compiler.SupportedProjectFiles*
  implements:
  - PascalABCCompiler.ICompiler.SupportedProjectFiles
- uid: PascalABCCompiler.Compiler.UnitTable
  commentId: P:PascalABCCompiler.Compiler.UnitTable
  id: UnitTable
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: UnitTable
  nameWithType: Compiler.UnitTable
  fullName: PascalABCCompiler.Compiler.UnitTable
  type: Property
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  example: []
  syntax:
    content: public CompilationUnitHashTable UnitTable { get; }
    parameters: []
    return:
      type: PascalABCCompiler.CompilationUnitHashTable
    content.vb: Public ReadOnly Property UnitTable As CompilationUnitHashTable
  overload: PascalABCCompiler.Compiler.UnitTable*
  implements:
  - PascalABCCompiler.ICompiler.UnitTable
- uid: PascalABCCompiler.Compiler.CompilerOptions
  commentId: P:PascalABCCompiler.Compiler.CompilerOptions
  id: CompilerOptions
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: CompilerOptions
  nameWithType: Compiler.CompilerOptions
  fullName: PascalABCCompiler.Compiler.CompilerOptions
  type: Property
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  example: []
  syntax:
    content: public CompilerOptions CompilerOptions { get; set; }
    parameters: []
    return:
      type: PascalABCCompiler.CompilerOptions
    content.vb: Public Property CompilerOptions As CompilerOptions
  overload: PascalABCCompiler.Compiler.CompilerOptions*
  implements:
  - PascalABCCompiler.ICompiler.CompilerOptions
- uid: PascalABCCompiler.Compiler.LanguageProvider
  commentId: P:PascalABCCompiler.Compiler.LanguageProvider
  id: LanguageProvider
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: LanguageProvider
  nameWithType: Compiler.LanguageProvider
  fullName: PascalABCCompiler.Compiler.LanguageProvider
  type: Property
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: private LanguageProvider LanguageProvider { get; }
    parameters: []
    return:
      type: Languages.Facade.LanguageProvider
    content.vb: Private ReadOnly Property LanguageProvider As LanguageProvider
  overload: PascalABCCompiler.Compiler.LanguageProvider*
- uid: PascalABCCompiler.Compiler.ClearAfterCompilation
  commentId: P:PascalABCCompiler.Compiler.ClearAfterCompilation
  id: ClearAfterCompilation
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: ClearAfterCompilation
  nameWithType: Compiler.ClearAfterCompilation
  fullName: PascalABCCompiler.Compiler.ClearAfterCompilation
  type: Property
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public bool ClearAfterCompilation { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ClearAfterCompilation As Boolean
  overload: PascalABCCompiler.Compiler.ClearAfterCompilation*
- uid: PascalABCCompiler.Compiler.BeginOffset
  commentId: P:PascalABCCompiler.Compiler.BeginOffset
  id: BeginOffset
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: BeginOffset
  nameWithType: Compiler.BeginOffset
  fullName: PascalABCCompiler.Compiler.BeginOffset
  type: Property
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  example: []
  syntax:
    content: public int BeginOffset { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property BeginOffset As Integer
  overload: PascalABCCompiler.Compiler.BeginOffset*
  implements:
  - PascalABCCompiler.ICompiler.BeginOffset
- uid: PascalABCCompiler.Compiler.VarBeginOffset
  commentId: P:PascalABCCompiler.Compiler.VarBeginOffset
  id: VarBeginOffset
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: VarBeginOffset
  nameWithType: Compiler.VarBeginOffset
  fullName: PascalABCCompiler.Compiler.VarBeginOffset
  type: Property
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  example: []
  syntax:
    content: public int VarBeginOffset { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property VarBeginOffset As Integer
  overload: PascalABCCompiler.Compiler.VarBeginOffset*
  implements:
  - PascalABCCompiler.ICompiler.VarBeginOffset
- uid: PascalABCCompiler.Compiler.Warnings
  commentId: P:PascalABCCompiler.Compiler.Warnings
  id: Warnings
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: Warnings
  nameWithType: Compiler.Warnings
  fullName: PascalABCCompiler.Compiler.Warnings
  type: Property
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  example: []
  syntax:
    content: public List<CompilerWarning> Warnings { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{PascalABCCompiler.Errors.CompilerWarning}
    content.vb: Public ReadOnly Property Warnings As List(Of CompilerWarning)
  overload: PascalABCCompiler.Compiler.Warnings*
  implements:
  - PascalABCCompiler.ICompiler.Warnings
- uid: PascalABCCompiler.Compiler.SourceFileNamesDictionary
  commentId: P:PascalABCCompiler.Compiler.SourceFileNamesDictionary
  id: SourceFileNamesDictionary
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: SourceFileNamesDictionary
  nameWithType: Compiler.SourceFileNamesDictionary
  fullName: PascalABCCompiler.Compiler.SourceFileNamesDictionary
  type: Property
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public Dictionary<Tuple<string, string>, Tuple<string, int>> SourceFileNamesDictionary { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.Tuple{System.String,System.String},System.Tuple{System.String,System.Int32}}
    content.vb: Public ReadOnly Property SourceFileNamesDictionary As Dictionary(Of Tuple(Of String, String), Tuple(Of String, Integer))
  overload: PascalABCCompiler.Compiler.SourceFileNamesDictionary*
- uid: PascalABCCompiler.Compiler.PCUFileNamesDictionary
  commentId: P:PascalABCCompiler.Compiler.PCUFileNamesDictionary
  id: PCUFileNamesDictionary
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: PCUFileNamesDictionary
  nameWithType: Compiler.PCUFileNamesDictionary
  fullName: PascalABCCompiler.Compiler.PCUFileNamesDictionary
  type: Property
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public Dictionary<Tuple<string, string>, Tuple<string, int>> PCUFileNamesDictionary { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.Tuple{System.String,System.String},System.Tuple{System.String,System.Int32}}
    content.vb: Public ReadOnly Property PCUFileNamesDictionary As Dictionary(Of Tuple(Of String, String), Tuple(Of String, Integer))
  overload: PascalABCCompiler.Compiler.PCUFileNamesDictionary*
- uid: PascalABCCompiler.Compiler.GetUnitFileNameCache
  commentId: P:PascalABCCompiler.Compiler.GetUnitFileNameCache
  id: GetUnitFileNameCache
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: GetUnitFileNameCache
  nameWithType: Compiler.GetUnitFileNameCache
  fullName: PascalABCCompiler.Compiler.GetUnitFileNameCache
  type: Property
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  syntax:
    content: public Dictionary<Tuple<string, string>, string> GetUnitFileNameCache { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.Tuple{System.String,System.String},System.String}
    content.vb: Public ReadOnly Property GetUnitFileNameCache As Dictionary(Of Tuple(Of String, String), String)
  overload: PascalABCCompiler.Compiler.GetUnitFileNameCache*
- uid: PascalABCCompiler.Compiler.SourceFilesProvider
  commentId: P:PascalABCCompiler.Compiler.SourceFilesProvider
  id: SourceFilesProvider
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: SourceFilesProvider
  nameWithType: Compiler.SourceFilesProvider
  fullName: PascalABCCompiler.Compiler.SourceFilesProvider
  type: Property
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  example: []
  syntax:
    content: public SourceFilesProviderDelegate SourceFilesProvider { get; }
    parameters: []
    return:
      type: PascalABCCompiler.SourceFilesProviderDelegate
    content.vb: Public ReadOnly Property SourceFilesProvider As SourceFilesProviderDelegate
  overload: PascalABCCompiler.Compiler.SourceFilesProvider*
  implements:
  - PascalABCCompiler.ICompiler.SourceFilesProvider
- uid: PascalABCCompiler.Compiler.ErrorsList
  commentId: P:PascalABCCompiler.Compiler.ErrorsList
  id: ErrorsList
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: ErrorsList
  nameWithType: Compiler.ErrorsList
  fullName: PascalABCCompiler.Compiler.ErrorsList
  type: Property
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  example: []
  syntax:
    content: public List<Error> ErrorsList { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{PascalABCCompiler.Errors.Error}
    content.vb: Public ReadOnly Property ErrorsList As List(Of [Error])
  overload: PascalABCCompiler.Compiler.ErrorsList*
  implements:
  - PascalABCCompiler.ICompiler.ErrorsList
- uid: PascalABCCompiler.Compiler.CompilerType
  commentId: P:PascalABCCompiler.Compiler.CompilerType
  id: CompilerType
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: CompilerType
  nameWithType: Compiler.CompilerType
  fullName: PascalABCCompiler.Compiler.CompilerType
  type: Property
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  example: []
  syntax:
    content: public CompilerType CompilerType { get; }
    parameters: []
    return:
      type: PascalABCCompiler.CompilerType
    content.vb: Public ReadOnly Property CompilerType As CompilerType
  overload: PascalABCCompiler.Compiler.CompilerType*
  implements:
  - PascalABCCompiler.ICompiler.CompilerType
- uid: PascalABCCompiler.Compiler.OnChangeCompilerState
  commentId: E:PascalABCCompiler.Compiler.OnChangeCompilerState
  id: OnChangeCompilerState
  parent: PascalABCCompiler.Compiler
  langs:
  - csharp
  - vb
  name: OnChangeCompilerState
  nameWithType: Compiler.OnChangeCompilerState
  fullName: PascalABCCompiler.Compiler.OnChangeCompilerState
  type: Event
  assemblies:
  - Compiler
  namespace: PascalABCCompiler
  example: []
  syntax:
    content: public event ChangeCompilerStateEventDelegate OnChangeCompilerState
    return:
      type: PascalABCCompiler.ChangeCompilerStateEventDelegate
    content.vb: Public Event OnChangeCompilerState As ChangeCompilerStateEventDelegate
  implements:
  - PascalABCCompiler.ICompiler.OnChangeCompilerState
references:
- uid: PascalABCCompiler
  commentId: N:PascalABCCompiler
  isExternal: true
  href: PascalABCCompiler.html
  name: PascalABCCompiler
  nameWithType: PascalABCCompiler
  fullName: PascalABCCompiler
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.MarshalByRefObject
  commentId: T:System.MarshalByRefObject
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: PascalABCCompiler.ICompiler
  commentId: T:PascalABCCompiler.ICompiler
  parent: PascalABCCompiler
  isExternal: true
  href: PascalABCCompiler.ICompiler.html
  name: ICompiler
  nameWithType: ICompiler
  fullName: PascalABCCompiler.ICompiler
- uid: System.MarshalByRefObject.__identity
  commentId: F:System.MarshalByRefObject.__identity
  parent: System.MarshalByRefObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.__identity
  name: __identity
  nameWithType: MarshalByRefObject.__identity
  fullName: System.MarshalByRefObject.__identity
- uid: System.MarshalByRefObject.GetComIUnknown(System.Boolean)
  commentId: M:System.MarshalByRefObject.GetComIUnknown(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.getcomiunknown#system-marshalbyrefobject-getcomiunknown(system-boolean)
  name: GetComIUnknown(bool)
  nameWithType: MarshalByRefObject.GetComIUnknown(bool)
  fullName: System.MarshalByRefObject.GetComIUnknown(bool)
  nameWithType.vb: MarshalByRefObject.GetComIUnknown(Boolean)
  fullName.vb: System.MarshalByRefObject.GetComIUnknown(Boolean)
  name.vb: GetComIUnknown(Boolean)
  spec.csharp:
  - uid: System.MarshalByRefObject.GetComIUnknown(System.Boolean)
    name: GetComIUnknown
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.getcomiunknown#system-marshalbyrefobject-getcomiunknown(system-boolean)
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: System.MarshalByRefObject.GetComIUnknown(System.Boolean)
    name: GetComIUnknown
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.getcomiunknown#system-marshalbyrefobject-getcomiunknown(system-boolean)
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.MarshalByRefObject.GetComIUnknown(System.MarshalByRefObject)
  commentId: M:System.MarshalByRefObject.GetComIUnknown(System.MarshalByRefObject)
  parent: System.MarshalByRefObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.getcomiunknown#system-marshalbyrefobject-getcomiunknown(system-marshalbyrefobject)
  name: GetComIUnknown(MarshalByRefObject)
  nameWithType: MarshalByRefObject.GetComIUnknown(MarshalByRefObject)
  fullName: System.MarshalByRefObject.GetComIUnknown(System.MarshalByRefObject)
  spec.csharp:
  - uid: System.MarshalByRefObject.GetComIUnknown(System.MarshalByRefObject)
    name: GetComIUnknown
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.getcomiunknown#system-marshalbyrefobject-getcomiunknown(system-marshalbyrefobject)
  - name: (
  - uid: System.MarshalByRefObject
    name: MarshalByRefObject
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject
  - name: )
  spec.vb:
  - uid: System.MarshalByRefObject.GetComIUnknown(System.MarshalByRefObject)
    name: GetComIUnknown
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.getcomiunknown#system-marshalbyrefobject-getcomiunknown(system-marshalbyrefobject)
  - name: (
  - uid: System.MarshalByRefObject
    name: MarshalByRefObject
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject
  - name: )
- uid: System.MarshalByRefObject.IsInstanceOfType(System.Type)
  commentId: M:System.MarshalByRefObject.IsInstanceOfType(System.Type)
  parent: System.MarshalByRefObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.isinstanceoftype
  name: IsInstanceOfType(Type)
  nameWithType: MarshalByRefObject.IsInstanceOfType(Type)
  fullName: System.MarshalByRefObject.IsInstanceOfType(System.Type)
  spec.csharp:
  - uid: System.MarshalByRefObject.IsInstanceOfType(System.Type)
    name: IsInstanceOfType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.isinstanceoftype
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: System.MarshalByRefObject.IsInstanceOfType(System.Type)
    name: IsInstanceOfType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.isinstanceoftype
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.MarshalByRefObject.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  commentId: M:System.MarshalByRefObject.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  parent: System.MarshalByRefObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.invokemember
  name: InvokeMember(string, BindingFlags, Binder, object[], ParameterModifier[], CultureInfo, string[])
  nameWithType: MarshalByRefObject.InvokeMember(string, BindingFlags, Binder, object[], ParameterModifier[], CultureInfo, string[])
  fullName: System.MarshalByRefObject.InvokeMember(string, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Reflection.ParameterModifier[], System.Globalization.CultureInfo, string[])
  nameWithType.vb: MarshalByRefObject.InvokeMember(String, BindingFlags, Binder, Object(), ParameterModifier(), CultureInfo, String())
  fullName.vb: System.MarshalByRefObject.InvokeMember(String, System.Reflection.BindingFlags, System.Reflection.Binder, Object(), System.Reflection.ParameterModifier(), System.Globalization.CultureInfo, String())
  name.vb: InvokeMember(String, BindingFlags, Binder, Object(), ParameterModifier(), CultureInfo, String())
  spec.csharp:
  - uid: System.MarshalByRefObject.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
    name: InvokeMember
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.invokemember
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Reflection.Binder
    name: Binder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.binder
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.parametermodifier
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: System.MarshalByRefObject.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
    name: InvokeMember
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.invokemember
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Reflection.Binder
    name: Binder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.binder
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.parametermodifier
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: )
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  commentId: M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.memberwiseclone
  name: MemberwiseClone(bool)
  nameWithType: MarshalByRefObject.MemberwiseClone(bool)
  fullName: System.MarshalByRefObject.MemberwiseClone(bool)
  nameWithType.vb: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName.vb: System.MarshalByRefObject.MemberwiseClone(Boolean)
  name.vb: MemberwiseClone(Boolean)
  spec.csharp:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.memberwiseclone
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.memberwiseclone
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.MarshalByRefObject.GetIdentity(System.MarshalByRefObject,System.Boolean@)
  commentId: M:System.MarshalByRefObject.GetIdentity(System.MarshalByRefObject,System.Boolean@)
  parent: System.MarshalByRefObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.getidentity#system-marshalbyrefobject-getidentity(system-marshalbyrefobject-system-boolean@)
  name: GetIdentity(MarshalByRefObject, out bool)
  nameWithType: MarshalByRefObject.GetIdentity(MarshalByRefObject, out bool)
  fullName: System.MarshalByRefObject.GetIdentity(System.MarshalByRefObject, out bool)
  nameWithType.vb: MarshalByRefObject.GetIdentity(MarshalByRefObject, Boolean)
  fullName.vb: System.MarshalByRefObject.GetIdentity(System.MarshalByRefObject, Boolean)
  name.vb: GetIdentity(MarshalByRefObject, Boolean)
  spec.csharp:
  - uid: System.MarshalByRefObject.GetIdentity(System.MarshalByRefObject,System.Boolean@)
    name: GetIdentity
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.getidentity#system-marshalbyrefobject-getidentity(system-marshalbyrefobject-system-boolean@)
  - name: (
  - uid: System.MarshalByRefObject
    name: MarshalByRefObject
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: System.MarshalByRefObject.GetIdentity(System.MarshalByRefObject,System.Boolean@)
    name: GetIdentity
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.getidentity#system-marshalbyrefobject-getidentity(system-marshalbyrefobject-system-boolean@)
  - name: (
  - uid: System.MarshalByRefObject
    name: MarshalByRefObject
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.MarshalByRefObject.GetIdentity(System.MarshalByRefObject)
  commentId: M:System.MarshalByRefObject.GetIdentity(System.MarshalByRefObject)
  parent: System.MarshalByRefObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.getidentity#system-marshalbyrefobject-getidentity(system-marshalbyrefobject)
  name: GetIdentity(MarshalByRefObject)
  nameWithType: MarshalByRefObject.GetIdentity(MarshalByRefObject)
  fullName: System.MarshalByRefObject.GetIdentity(System.MarshalByRefObject)
  spec.csharp:
  - uid: System.MarshalByRefObject.GetIdentity(System.MarshalByRefObject)
    name: GetIdentity
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.getidentity#system-marshalbyrefobject-getidentity(system-marshalbyrefobject)
  - name: (
  - uid: System.MarshalByRefObject
    name: MarshalByRefObject
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject
  - name: )
  spec.vb:
  - uid: System.MarshalByRefObject.GetIdentity(System.MarshalByRefObject)
    name: GetIdentity
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.getidentity#system-marshalbyrefobject-getidentity(system-marshalbyrefobject)
  - name: (
  - uid: System.MarshalByRefObject
    name: MarshalByRefObject
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject
  - name: )
- uid: System.MarshalByRefObject.__RaceSetServerIdentity(System.Runtime.Remoting.ServerIdentity)
  commentId: M:System.MarshalByRefObject.__RaceSetServerIdentity(System.Runtime.Remoting.ServerIdentity)
  parent: System.MarshalByRefObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.__racesetserveridentity
  name: __RaceSetServerIdentity(ServerIdentity)
  nameWithType: MarshalByRefObject.__RaceSetServerIdentity(ServerIdentity)
  fullName: System.MarshalByRefObject.__RaceSetServerIdentity(System.Runtime.Remoting.ServerIdentity)
  spec.csharp:
  - uid: System.MarshalByRefObject.__RaceSetServerIdentity(System.Runtime.Remoting.ServerIdentity)
    name: __RaceSetServerIdentity
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.__racesetserveridentity
  - name: (
  - uid: System.Runtime.Remoting.ServerIdentity
    name: ServerIdentity
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.remoting.serveridentity
  - name: )
  spec.vb:
  - uid: System.MarshalByRefObject.__RaceSetServerIdentity(System.Runtime.Remoting.ServerIdentity)
    name: __RaceSetServerIdentity
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.__racesetserveridentity
  - name: (
  - uid: System.Runtime.Remoting.ServerIdentity
    name: ServerIdentity
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.remoting.serveridentity
  - name: )
- uid: System.MarshalByRefObject.__ResetServerIdentity
  commentId: M:System.MarshalByRefObject.__ResetServerIdentity
  parent: System.MarshalByRefObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.__resetserveridentity
  name: __ResetServerIdentity()
  nameWithType: MarshalByRefObject.__ResetServerIdentity()
  fullName: System.MarshalByRefObject.__ResetServerIdentity()
  spec.csharp:
  - uid: System.MarshalByRefObject.__ResetServerIdentity
    name: __ResetServerIdentity
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.__resetserveridentity
  - name: (
  - name: )
  spec.vb:
  - uid: System.MarshalByRefObject.__ResetServerIdentity
    name: __ResetServerIdentity
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.__resetserveridentity
  - name: (
  - name: )
- uid: System.MarshalByRefObject.GetLifetimeService
  commentId: M:System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.getlifetimeservice
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.getlifetimeservice
  - name: (
  - name: )
  spec.vb:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.getlifetimeservice
  - name: (
  - name: )
- uid: System.MarshalByRefObject.InitializeLifetimeService
  commentId: M:System.MarshalByRefObject.InitializeLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.initializelifetimeservice
  name: InitializeLifetimeService()
  nameWithType: MarshalByRefObject.InitializeLifetimeService()
  fullName: System.MarshalByRefObject.InitializeLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.InitializeLifetimeService
    name: InitializeLifetimeService
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.initializelifetimeservice
  - name: (
  - name: )
  spec.vb:
  - uid: System.MarshalByRefObject.InitializeLifetimeService
    name: InitializeLifetimeService
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.initializelifetimeservice
  - name: (
  - name: )
- uid: System.MarshalByRefObject.CreateObjRef(System.Type)
  commentId: M:System.MarshalByRefObject.CreateObjRef(System.Type)
  parent: System.MarshalByRefObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.createobjref
  name: CreateObjRef(Type)
  nameWithType: MarshalByRefObject.CreateObjRef(Type)
  fullName: System.MarshalByRefObject.CreateObjRef(System.Type)
  spec.csharp:
  - uid: System.MarshalByRefObject.CreateObjRef(System.Type)
    name: CreateObjRef
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.createobjref
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: System.MarshalByRefObject.CreateObjRef(System.Type)
    name: CreateObjRef
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.createobjref
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.MarshalByRefObject.CanCastToXmlType(System.String,System.String)
  commentId: M:System.MarshalByRefObject.CanCastToXmlType(System.String,System.String)
  parent: System.MarshalByRefObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.cancasttoxmltype
  name: CanCastToXmlType(string, string)
  nameWithType: MarshalByRefObject.CanCastToXmlType(string, string)
  fullName: System.MarshalByRefObject.CanCastToXmlType(string, string)
  nameWithType.vb: MarshalByRefObject.CanCastToXmlType(String, String)
  fullName.vb: System.MarshalByRefObject.CanCastToXmlType(String, String)
  name.vb: CanCastToXmlType(String, String)
  spec.csharp:
  - uid: System.MarshalByRefObject.CanCastToXmlType(System.String,System.String)
    name: CanCastToXmlType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.cancasttoxmltype
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.MarshalByRefObject.CanCastToXmlType(System.String,System.String)
    name: CanCastToXmlType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.cancasttoxmltype
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.MarshalByRefObject.CanCastToXmlTypeHelper(System.RuntimeType,System.MarshalByRefObject)
  commentId: M:System.MarshalByRefObject.CanCastToXmlTypeHelper(System.RuntimeType,System.MarshalByRefObject)
  parent: System.MarshalByRefObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.cancasttoxmltypehelper
  name: CanCastToXmlTypeHelper(RuntimeType, MarshalByRefObject)
  nameWithType: MarshalByRefObject.CanCastToXmlTypeHelper(RuntimeType, MarshalByRefObject)
  fullName: System.MarshalByRefObject.CanCastToXmlTypeHelper(System.RuntimeType, System.MarshalByRefObject)
  spec.csharp:
  - uid: System.MarshalByRefObject.CanCastToXmlTypeHelper(System.RuntimeType,System.MarshalByRefObject)
    name: CanCastToXmlTypeHelper
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.cancasttoxmltypehelper
  - name: (
  - uid: System.RuntimeType
    name: RuntimeType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtimetype
  - name: ','
  - name: " "
  - uid: System.MarshalByRefObject
    name: MarshalByRefObject
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject
  - name: )
  spec.vb:
  - uid: System.MarshalByRefObject.CanCastToXmlTypeHelper(System.RuntimeType,System.MarshalByRefObject)
    name: CanCastToXmlTypeHelper
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.cancasttoxmltypehelper
  - name: (
  - uid: System.RuntimeType
    name: RuntimeType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtimetype
  - name: ','
  - name: " "
  - uid: System.MarshalByRefObject
    name: MarshalByRefObject
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject
  - name: )
- uid: System.MarshalByRefObject.Identity
  commentId: P:System.MarshalByRefObject.Identity
  parent: System.MarshalByRefObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.identity
  name: Identity
  nameWithType: MarshalByRefObject.Identity
  fullName: System.MarshalByRefObject.Identity
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.FieldSetter(System.String,System.String,System.Object)
  commentId: M:System.Object.FieldSetter(System.String,System.String,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.fieldsetter
  name: FieldSetter(string, string, object)
  nameWithType: object.FieldSetter(string, string, object)
  fullName: object.FieldSetter(string, string, object)
  nameWithType.vb: Object.FieldSetter(String, String, Object)
  fullName.vb: Object.FieldSetter(String, String, Object)
  name.vb: FieldSetter(String, String, Object)
  spec.csharp:
  - uid: System.Object.FieldSetter(System.String,System.String,System.Object)
    name: FieldSetter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.fieldsetter
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.FieldSetter(System.String,System.String,System.Object)
    name: FieldSetter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.fieldsetter
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.FieldGetter(System.String,System.String,System.Object@)
  commentId: M:System.Object.FieldGetter(System.String,System.String,System.Object@)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.fieldgetter
  name: FieldGetter(string, string, ref object)
  nameWithType: object.FieldGetter(string, string, ref object)
  fullName: object.FieldGetter(string, string, ref object)
  nameWithType.vb: Object.FieldGetter(String, String, Object)
  fullName.vb: Object.FieldGetter(String, String, Object)
  name.vb: FieldGetter(String, String, Object)
  spec.csharp:
  - uid: System.Object.FieldGetter(System.String,System.String,System.Object@)
    name: FieldGetter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.fieldgetter
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.FieldGetter(System.String,System.String,System.Object@)
    name: FieldGetter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.fieldgetter
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetFieldInfo(System.String,System.String)
  commentId: M:System.Object.GetFieldInfo(System.String,System.String)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.getfieldinfo
  name: GetFieldInfo(string, string)
  nameWithType: object.GetFieldInfo(string, string)
  fullName: object.GetFieldInfo(string, string)
  nameWithType.vb: Object.GetFieldInfo(String, String)
  fullName.vb: Object.GetFieldInfo(String, String)
  name.vb: GetFieldInfo(String, String)
  spec.csharp:
  - uid: System.Object.GetFieldInfo(System.String,System.String)
    name: GetFieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.getfieldinfo
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.Object.GetFieldInfo(System.String,System.String)
    name: GetFieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.getfieldinfo
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: PascalABCCompiler.SemanticTreeConverters.SemanticTreeConvertersController
  commentId: T:PascalABCCompiler.SemanticTreeConverters.SemanticTreeConvertersController
  parent: PascalABCCompiler.SemanticTreeConverters
  isExternal: true
  href: PascalABCCompiler.SemanticTreeConverters.SemanticTreeConvertersController.html
  name: SemanticTreeConvertersController
  nameWithType: SemanticTreeConvertersController
  fullName: PascalABCCompiler.SemanticTreeConverters.SemanticTreeConvertersController
- uid: PascalABCCompiler.SemanticTreeConverters
  commentId: N:PascalABCCompiler.SemanticTreeConverters
  isExternal: true
  href: PascalABCCompiler.html
  name: PascalABCCompiler.SemanticTreeConverters
  nameWithType: PascalABCCompiler.SemanticTreeConverters
  fullName: PascalABCCompiler.SemanticTreeConverters
  spec.csharp:
  - uid: PascalABCCompiler
    name: PascalABCCompiler
    isExternal: true
    href: PascalABCCompiler.html
  - name: .
  - uid: PascalABCCompiler.SemanticTreeConverters
    name: SemanticTreeConverters
    isExternal: true
    href: PascalABCCompiler.SemanticTreeConverters.html
  spec.vb:
  - uid: PascalABCCompiler
    name: PascalABCCompiler
    isExternal: true
    href: PascalABCCompiler.html
  - name: .
  - uid: PascalABCCompiler.SemanticTreeConverters
    name: SemanticTreeConverters
    isExternal: true
    href: PascalABCCompiler.SemanticTreeConverters.html
- uid: System.Collections.Hashtable
  commentId: T:System.Collections.Hashtable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.hashtable
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: PascalABCCompiler.TreeRealization.program_node
  commentId: T:PascalABCCompiler.TreeRealization.program_node
  parent: PascalABCCompiler.TreeRealization
  isExternal: true
  name: program_node
  nameWithType: program_node
  fullName: PascalABCCompiler.TreeRealization.program_node
- uid: PascalABCCompiler.TreeRealization
  commentId: N:PascalABCCompiler.TreeRealization
  isExternal: true
  name: PascalABCCompiler.TreeRealization
  nameWithType: PascalABCCompiler.TreeRealization
  fullName: PascalABCCompiler.TreeRealization
  spec.csharp:
  - uid: PascalABCCompiler
    name: PascalABCCompiler
    isExternal: true
  - name: .
  - uid: PascalABCCompiler.TreeRealization
    name: TreeRealization
    isExternal: true
  spec.vb:
  - uid: PascalABCCompiler
    name: PascalABCCompiler
    isExternal: true
  - name: .
  - uid: PascalABCCompiler.TreeRealization
    name: TreeRealization
    isExternal: true
- uid: System.Collections.Generic.List{PascalABCCompiler.TreeRealization.var_definition_node}
  commentId: T:System.Collections.Generic.List{PascalABCCompiler.TreeRealization.var_definition_node}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<var_definition_node>
  nameWithType: List<var_definition_node>
  fullName: System.Collections.Generic.List<PascalABCCompiler.TreeRealization.var_definition_node>
  nameWithType.vb: List(Of var_definition_node)
  fullName.vb: System.Collections.Generic.List(Of PascalABCCompiler.TreeRealization.var_definition_node)
  name.vb: List(Of var_definition_node)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: PascalABCCompiler.TreeRealization.var_definition_node
    name: var_definition_node
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: PascalABCCompiler.TreeRealization.var_definition_node
    name: var_definition_node
    isExternal: true
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: PascalABCCompiler.CompilerInternalDebug
  commentId: T:PascalABCCompiler.CompilerInternalDebug
  parent: PascalABCCompiler
  isExternal: true
  href: PascalABCCompiler.CompilerInternalDebug.html
  name: CompilerInternalDebug
  nameWithType: CompilerInternalDebug
  fullName: PascalABCCompiler.CompilerInternalDebug
- uid: PascalABCCompiler.CompilerState
  commentId: T:PascalABCCompiler.CompilerState
  parent: PascalABCCompiler
  isExternal: true
  href: PascalABCCompiler.CompilerState.html
  name: CompilerState
  nameWithType: CompilerState
  fullName: PascalABCCompiler.CompilerState
- uid: PascalABCCompiler.SupportedSourceFile[]
  isExternal: true
  href: PascalABCCompiler.SupportedSourceFile.html
  name: SupportedSourceFile[]
  nameWithType: SupportedSourceFile[]
  fullName: PascalABCCompiler.SupportedSourceFile[]
  nameWithType.vb: SupportedSourceFile()
  fullName.vb: PascalABCCompiler.SupportedSourceFile()
  name.vb: SupportedSourceFile()
  spec.csharp:
  - uid: PascalABCCompiler.SupportedSourceFile
    name: SupportedSourceFile
    isExternal: true
    href: PascalABCCompiler.SupportedSourceFile.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: PascalABCCompiler.SupportedSourceFile
    name: SupportedSourceFile
    isExternal: true
    href: PascalABCCompiler.SupportedSourceFile.html
  - name: (
  - name: )
- uid: PascalABCCompiler.CompilationUnitHashTable
  commentId: T:PascalABCCompiler.CompilationUnitHashTable
  parent: PascalABCCompiler
  isExternal: true
  href: PascalABCCompiler.CompilationUnitHashTable.html
  name: CompilationUnitHashTable
  nameWithType: CompilationUnitHashTable
  fullName: PascalABCCompiler.CompilationUnitHashTable
- uid: System.Collections.Generic.List{PascalABCCompiler.CompilationUnit}
  commentId: T:System.Collections.Generic.List{PascalABCCompiler.CompilationUnit}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<CompilationUnit>
  nameWithType: List<CompilationUnit>
  fullName: System.Collections.Generic.List<PascalABCCompiler.CompilationUnit>
  nameWithType.vb: List(Of CompilationUnit)
  fullName.vb: System.Collections.Generic.List(Of PascalABCCompiler.CompilationUnit)
  name.vb: List(Of CompilationUnit)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: PascalABCCompiler.CompilationUnit
    name: CompilationUnit
    isExternal: true
    href: PascalABCCompiler.CompilationUnit.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: PascalABCCompiler.CompilationUnit
    name: CompilationUnit
    isExternal: true
    href: PascalABCCompiler.CompilationUnit.html
  - name: )
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.Dictionary{System.String,PascalABCCompiler.CompilationUnit}
  commentId: T:System.Collections.Generic.Dictionary{System.String,PascalABCCompiler.CompilationUnit}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, CompilationUnit>
  nameWithType: Dictionary<string, CompilationUnit>
  fullName: System.Collections.Generic.Dictionary<string, PascalABCCompiler.CompilationUnit>
  nameWithType.vb: Dictionary(Of String, CompilationUnit)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, PascalABCCompiler.CompilationUnit)
  name.vb: Dictionary(Of String, CompilationUnit)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: PascalABCCompiler.CompilationUnit
    name: CompilationUnit
    isExternal: true
    href: PascalABCCompiler.CompilationUnit.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: PascalABCCompiler.CompilationUnit
    name: CompilationUnit
    isExternal: true
    href: PascalABCCompiler.CompilationUnit.html
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: PascalABCCompiler.TreeConverter.SyntaxTreeToSemanticTreeConverter
  commentId: T:PascalABCCompiler.TreeConverter.SyntaxTreeToSemanticTreeConverter
  parent: PascalABCCompiler.TreeConverter
  isExternal: true
  href: PascalABCCompiler.TreeConverter.SyntaxTreeToSemanticTreeConverter.html
  name: SyntaxTreeToSemanticTreeConverter
  nameWithType: SyntaxTreeToSemanticTreeConverter
  fullName: PascalABCCompiler.TreeConverter.SyntaxTreeToSemanticTreeConverter
- uid: PascalABCCompiler.TreeConverter
  commentId: N:PascalABCCompiler.TreeConverter
  isExternal: true
  href: PascalABCCompiler.html
  name: PascalABCCompiler.TreeConverter
  nameWithType: PascalABCCompiler.TreeConverter
  fullName: PascalABCCompiler.TreeConverter
  spec.csharp:
  - uid: PascalABCCompiler
    name: PascalABCCompiler
    isExternal: true
    href: PascalABCCompiler.html
  - name: .
  - uid: PascalABCCompiler.TreeConverter
    name: TreeConverter
    isExternal: true
    href: PascalABCCompiler.TreeConverter.html
  spec.vb:
  - uid: PascalABCCompiler
    name: PascalABCCompiler
    isExternal: true
    href: PascalABCCompiler.html
  - name: .
  - uid: PascalABCCompiler.TreeConverter
    name: TreeConverter
    isExternal: true
    href: PascalABCCompiler.TreeConverter.html
- uid: PascalABCCompiler.CodeGenerators.Controller
  commentId: T:PascalABCCompiler.CodeGenerators.Controller
  parent: PascalABCCompiler.CodeGenerators
  isExternal: true
  name: Controller
  nameWithType: Controller
  fullName: PascalABCCompiler.CodeGenerators.Controller
- uid: PascalABCCompiler.CodeGenerators
  commentId: N:PascalABCCompiler.CodeGenerators
  isExternal: true
  name: PascalABCCompiler.CodeGenerators
  nameWithType: PascalABCCompiler.CodeGenerators
  fullName: PascalABCCompiler.CodeGenerators
  spec.csharp:
  - uid: PascalABCCompiler
    name: PascalABCCompiler
    isExternal: true
  - name: .
  - uid: PascalABCCompiler.CodeGenerators
    name: CodeGenerators
    isExternal: true
  spec.vb:
  - uid: PascalABCCompiler
    name: PascalABCCompiler
    isExternal: true
  - name: .
  - uid: PascalABCCompiler.CodeGenerators
    name: CodeGenerators
    isExternal: true
- uid: PascalABCCompiler.CompilationUnit
  commentId: T:PascalABCCompiler.CompilationUnit
  parent: PascalABCCompiler
  isExternal: true
  href: PascalABCCompiler.CompilationUnit.html
  name: CompilationUnit
  nameWithType: CompilationUnit
  fullName: PascalABCCompiler.CompilationUnit
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.List{PascalABCCompiler.Errors.CompilerWarning}
  commentId: T:System.Collections.Generic.List{PascalABCCompiler.Errors.CompilerWarning}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<CompilerWarning>
  nameWithType: List<CompilerWarning>
  fullName: System.Collections.Generic.List<PascalABCCompiler.Errors.CompilerWarning>
  nameWithType.vb: List(Of CompilerWarning)
  fullName.vb: System.Collections.Generic.List(Of PascalABCCompiler.Errors.CompilerWarning)
  name.vb: List(Of CompilerWarning)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: PascalABCCompiler.Errors.CompilerWarning
    name: CompilerWarning
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: PascalABCCompiler.Errors.CompilerWarning
    name: CompilerWarning
    isExternal: true
  - name: )
- uid: PascalABCCompiler.SourceFilesProviderDelegate
  commentId: T:PascalABCCompiler.SourceFilesProviderDelegate
  parent: PascalABCCompiler
  isExternal: true
  name: SourceFilesProviderDelegate
  nameWithType: SourceFilesProviderDelegate
  fullName: PascalABCCompiler.SourceFilesProviderDelegate
- uid: System.Collections.Generic.List{PascalABCCompiler.Errors.Error}
  commentId: T:System.Collections.Generic.List{PascalABCCompiler.Errors.Error}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Error>
  nameWithType: List<Error>
  fullName: System.Collections.Generic.List<PascalABCCompiler.Errors.Error>
  nameWithType.vb: List(Of Error)
  fullName.vb: System.Collections.Generic.List(Of PascalABCCompiler.Errors.Error)
  name.vb: List(Of Error)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: PascalABCCompiler.Errors.Error
    name: Error
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: PascalABCCompiler.Errors.Error
    name: Error
    isExternal: true
  - name: )
- uid: PascalABCCompiler.ProjectInfo
  commentId: T:PascalABCCompiler.ProjectInfo
  parent: PascalABCCompiler
  isExternal: true
  href: PascalABCCompiler.ProjectInfo.html
  name: ProjectInfo
  nameWithType: ProjectInfo
  fullName: PascalABCCompiler.ProjectInfo
- uid: PascalABCCompiler.NetHelper.AssemblyResolveScope
  commentId: T:PascalABCCompiler.NetHelper.AssemblyResolveScope
  parent: PascalABCCompiler.NetHelper
  isExternal: true
  name: AssemblyResolveScope
  nameWithType: AssemblyResolveScope
  fullName: PascalABCCompiler.NetHelper.AssemblyResolveScope
- uid: PascalABCCompiler.NetHelper
  commentId: N:PascalABCCompiler.NetHelper
  isExternal: true
  name: PascalABCCompiler.NetHelper
  nameWithType: PascalABCCompiler.NetHelper
  fullName: PascalABCCompiler.NetHelper
  spec.csharp:
  - uid: PascalABCCompiler
    name: PascalABCCompiler
    isExternal: true
  - name: .
  - uid: PascalABCCompiler.NetHelper
    name: NetHelper
    isExternal: true
  spec.vb:
  - uid: PascalABCCompiler
    name: PascalABCCompiler
    isExternal: true
  - name: .
  - uid: PascalABCCompiler.NetHelper
    name: NetHelper
    isExternal: true
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, string>
  nameWithType: Dictionary<string, string>
  fullName: System.Collections.Generic.Dictionary<string, string>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: PascalABCCompiler.Compiler.ToString*
  commentId: Overload:PascalABCCompiler.Compiler.ToString
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_ToString
  name: ToString
  nameWithType: Compiler.ToString
  fullName: PascalABCCompiler.Compiler.ToString
- uid: PascalABCCompiler.Compiler.SetSupportedSourceFiles*
  commentId: Overload:PascalABCCompiler.Compiler.SetSupportedSourceFiles
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_SetSupportedSourceFiles
  name: SetSupportedSourceFiles
  nameWithType: Compiler.SetSupportedSourceFiles
  fullName: PascalABCCompiler.Compiler.SetSupportedSourceFiles
- uid: PascalABCCompiler.Compiler.SetSupportedProjectFiles*
  commentId: Overload:PascalABCCompiler.Compiler.SetSupportedProjectFiles
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_SetSupportedProjectFiles
  name: SetSupportedProjectFiles
  nameWithType: Compiler.SetSupportedProjectFiles
  fullName: PascalABCCompiler.Compiler.SetSupportedProjectFiles
- uid: PascalABCCompiler.Compiler.AddWarnings*
  commentId: Overload:PascalABCCompiler.Compiler.AddWarnings
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_AddWarnings_System_Collections_Generic_List_PascalABCCompiler_Errors_CompilerWarning__
  name: AddWarnings
  nameWithType: Compiler.AddWarnings
  fullName: PascalABCCompiler.Compiler.AddWarnings
- uid: PascalABCCompiler.ICompiler.AddWarnings(System.Collections.Generic.List{PascalABCCompiler.Errors.CompilerWarning})
  commentId: M:PascalABCCompiler.ICompiler.AddWarnings(System.Collections.Generic.List{PascalABCCompiler.Errors.CompilerWarning})
  parent: PascalABCCompiler.ICompiler
  isExternal: true
  href: PascalABCCompiler.ICompiler.html#PascalABCCompiler_ICompiler_AddWarnings_System_Collections_Generic_List_PascalABCCompiler_Errors_CompilerWarning__
  name: AddWarnings(List<CompilerWarning>)
  nameWithType: ICompiler.AddWarnings(List<CompilerWarning>)
  fullName: PascalABCCompiler.ICompiler.AddWarnings(System.Collections.Generic.List<PascalABCCompiler.Errors.CompilerWarning>)
  nameWithType.vb: ICompiler.AddWarnings(List(Of CompilerWarning))
  fullName.vb: PascalABCCompiler.ICompiler.AddWarnings(System.Collections.Generic.List(Of PascalABCCompiler.Errors.CompilerWarning))
  name.vb: AddWarnings(List(Of CompilerWarning))
  spec.csharp:
  - uid: PascalABCCompiler.ICompiler.AddWarnings(System.Collections.Generic.List{PascalABCCompiler.Errors.CompilerWarning})
    name: AddWarnings
    isExternal: true
    href: PascalABCCompiler.ICompiler.html#PascalABCCompiler_ICompiler_AddWarnings_System_Collections_Generic_List_PascalABCCompiler_Errors_CompilerWarning__
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: PascalABCCompiler.Errors.CompilerWarning
    name: CompilerWarning
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: PascalABCCompiler.ICompiler.AddWarnings(System.Collections.Generic.List{PascalABCCompiler.Errors.CompilerWarning})
    name: AddWarnings
    isExternal: true
    href: PascalABCCompiler.ICompiler.html#PascalABCCompiler_ICompiler_AddWarnings_System_Collections_Generic_List_PascalABCCompiler_Errors_CompilerWarning__
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: PascalABCCompiler.Errors.CompilerWarning
    name: CompilerWarning
    isExternal: true
  - name: )
  - name: )
- uid: PascalABCCompiler.Compiler.ChangeCompilerStateEvent*
  commentId: Overload:PascalABCCompiler.Compiler.ChangeCompilerStateEvent
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_ChangeCompilerStateEvent_PascalABCCompiler_ICompiler_PascalABCCompiler_CompilerState_System_String_
  name: ChangeCompilerStateEvent
  nameWithType: Compiler.ChangeCompilerStateEvent
  fullName: PascalABCCompiler.Compiler.ChangeCompilerStateEvent
- uid: PascalABCCompiler.Compiler.SourceFileExists*
  commentId: Overload:PascalABCCompiler.Compiler.SourceFileExists
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_SourceFileExists_System_String_
  name: SourceFileExists
  nameWithType: Compiler.SourceFileExists
  fullName: PascalABCCompiler.Compiler.SourceFileExists
- uid: PascalABCCompiler.Compiler.SourceFileGetLastWriteTime*
  commentId: Overload:PascalABCCompiler.Compiler.SourceFileGetLastWriteTime
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_SourceFileGetLastWriteTime_System_String_
  name: SourceFileGetLastWriteTime
  nameWithType: Compiler.SourceFileGetLastWriteTime
  fullName: PascalABCCompiler.Compiler.SourceFileGetLastWriteTime
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: PascalABCCompiler.Compiler.#ctor*
  commentId: Overload:PascalABCCompiler.Compiler.#ctor
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler__ctor
  name: Compiler
  nameWithType: Compiler.Compiler
  fullName: PascalABCCompiler.Compiler.Compiler
  nameWithType.vb: Compiler.New
  fullName.vb: PascalABCCompiler.Compiler.New
  name.vb: New
- uid: PascalABCCompiler.ChangeCompilerStateEventDelegate
  commentId: T:PascalABCCompiler.ChangeCompilerStateEventDelegate
  parent: PascalABCCompiler
  isExternal: true
  href: PascalABCCompiler.ChangeCompilerStateEventDelegate.html
  name: ChangeCompilerStateEventDelegate
  nameWithType: ChangeCompilerStateEventDelegate
  fullName: PascalABCCompiler.ChangeCompilerStateEventDelegate
- uid: PascalABCCompiler.Compiler.Reload*
  commentId: Overload:PascalABCCompiler.Compiler.Reload
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_Reload
  name: Reload
  nameWithType: Compiler.Reload
  fullName: PascalABCCompiler.Compiler.Reload
- uid: PascalABCCompiler.ICompiler.Reload
  commentId: M:PascalABCCompiler.ICompiler.Reload
  parent: PascalABCCompiler.ICompiler
  isExternal: true
  href: PascalABCCompiler.ICompiler.html#PascalABCCompiler_ICompiler_Reload
  name: Reload()
  nameWithType: ICompiler.Reload()
  fullName: PascalABCCompiler.ICompiler.Reload()
  spec.csharp:
  - uid: PascalABCCompiler.ICompiler.Reload
    name: Reload
    isExternal: true
    href: PascalABCCompiler.ICompiler.html#PascalABCCompiler_ICompiler_Reload
  - name: (
  - name: )
  spec.vb:
  - uid: PascalABCCompiler.ICompiler.Reload
    name: Reload
    isExternal: true
    href: PascalABCCompiler.ICompiler.html#PascalABCCompiler_ICompiler_Reload
  - name: (
  - name: )
- uid: PascalABCCompiler.Compiler.SaveUnitCheckInParsers*
  commentId: Overload:PascalABCCompiler.Compiler.SaveUnitCheckInParsers
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_SaveUnitCheckInParsers
  name: SaveUnitCheckInParsers
  nameWithType: Compiler.SaveUnitCheckInParsers
  fullName: PascalABCCompiler.Compiler.SaveUnitCheckInParsers
- uid: PascalABCCompiler.Compiler.semanticTreeConvertersController_ChangeState*
  commentId: Overload:PascalABCCompiler.Compiler.semanticTreeConvertersController_ChangeState
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_semanticTreeConvertersController_ChangeState_PascalABCCompiler_SemanticTreeConverters_SemanticTreeConvertersController_State_PascalABCCompiler_SemanticTreeConverters_ISemanticTreeConverter_
  name: semanticTreeConvertersController_ChangeState
  nameWithType: Compiler.semanticTreeConvertersController_ChangeState
  fullName: PascalABCCompiler.Compiler.semanticTreeConvertersController_ChangeState
- uid: PascalABCCompiler.SemanticTreeConverters.SemanticTreeConvertersController.State
  commentId: T:PascalABCCompiler.SemanticTreeConverters.SemanticTreeConvertersController.State
  parent: PascalABCCompiler.SemanticTreeConverters
  isExternal: true
  href: PascalABCCompiler.SemanticTreeConverters.SemanticTreeConvertersController.html
  name: SemanticTreeConvertersController.State
  nameWithType: SemanticTreeConvertersController.State
  fullName: PascalABCCompiler.SemanticTreeConverters.SemanticTreeConvertersController.State
  spec.csharp:
  - uid: PascalABCCompiler.SemanticTreeConverters.SemanticTreeConvertersController
    name: SemanticTreeConvertersController
    isExternal: true
    href: PascalABCCompiler.SemanticTreeConverters.SemanticTreeConvertersController.html
  - name: .
  - uid: PascalABCCompiler.SemanticTreeConverters.SemanticTreeConvertersController.State
    name: State
    isExternal: true
    href: PascalABCCompiler.SemanticTreeConverters.SemanticTreeConvertersController.State.html
  spec.vb:
  - uid: PascalABCCompiler.SemanticTreeConverters.SemanticTreeConvertersController
    name: SemanticTreeConvertersController
    isExternal: true
    href: PascalABCCompiler.SemanticTreeConverters.SemanticTreeConvertersController.html
  - name: .
  - uid: PascalABCCompiler.SemanticTreeConverters.SemanticTreeConvertersController.State
    name: State
    isExternal: true
    href: PascalABCCompiler.SemanticTreeConverters.SemanticTreeConvertersController.State.html
- uid: PascalABCCompiler.SemanticTreeConverters.ISemanticTreeConverter
  commentId: T:PascalABCCompiler.SemanticTreeConverters.ISemanticTreeConverter
  parent: PascalABCCompiler.SemanticTreeConverters
  isExternal: true
  href: PascalABCCompiler.SemanticTreeConverters.ISemanticTreeConverter.html
  name: ISemanticTreeConverter
  nameWithType: ISemanticTreeConverter
  fullName: PascalABCCompiler.SemanticTreeConverters.ISemanticTreeConverter
- uid: PascalABCCompiler.Errors.DuplicateDirective
  commentId: T:PascalABCCompiler.Errors.DuplicateDirective
  isExternal: true
  href: PascalABCCompiler.Errors.DuplicateDirective.html
  name: DuplicateDirective
  nameWithType: DuplicateDirective
  fullName: PascalABCCompiler.Errors.DuplicateDirective
- uid: PascalABCCompiler.Compiler.GetCompilerDirectives*
  commentId: Overload:PascalABCCompiler.Compiler.GetCompilerDirectives
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_GetCompilerDirectives_System_Collections_Generic_List_PascalABCCompiler_CompilationUnit__
  name: GetCompilerDirectives
  nameWithType: Compiler.GetCompilerDirectives
  fullName: PascalABCCompiler.Compiler.GetCompilerDirectives
- uid: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{PascalABCCompiler.TreeRealization.compiler_directive}}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{PascalABCCompiler.TreeRealization.compiler_directive}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, List<compiler_directive>>
  nameWithType: Dictionary<string, List<compiler_directive>>
  fullName: System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<PascalABCCompiler.TreeRealization.compiler_directive>>
  nameWithType.vb: Dictionary(Of String, List(Of compiler_directive))
  fullName.vb: System.Collections.Generic.Dictionary(Of String, System.Collections.Generic.List(Of PascalABCCompiler.TreeRealization.compiler_directive))
  name.vb: Dictionary(Of String, List(Of compiler_directive))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: PascalABCCompiler.TreeRealization.compiler_directive
    name: compiler_directive
    isExternal: true
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: PascalABCCompiler.TreeRealization.compiler_directive
    name: compiler_directive
    isExternal: true
  - name: )
  - name: )
- uid: PascalABCCompiler.Compiler.GetDirectivesAsSemanticNodes*
  commentId: Overload:PascalABCCompiler.Compiler.GetDirectivesAsSemanticNodes
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_GetDirectivesAsSemanticNodes_System_Collections_Generic_List_PascalABCCompiler_SyntaxTree_compiler_directive__System_String_
  name: GetDirectivesAsSemanticNodes
  nameWithType: Compiler.GetDirectivesAsSemanticNodes
  fullName: PascalABCCompiler.Compiler.GetDirectivesAsSemanticNodes
- uid: System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.compiler_directive}
  commentId: T:System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.compiler_directive}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<compiler_directive>
  nameWithType: List<compiler_directive>
  fullName: System.Collections.Generic.List<PascalABCCompiler.SyntaxTree.compiler_directive>
  nameWithType.vb: List(Of compiler_directive)
  fullName.vb: System.Collections.Generic.List(Of PascalABCCompiler.SyntaxTree.compiler_directive)
  name.vb: List(Of compiler_directive)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: PascalABCCompiler.SyntaxTree.compiler_directive
    name: compiler_directive
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: PascalABCCompiler.SyntaxTree.compiler_directive
    name: compiler_directive
    isExternal: true
  - name: )
- uid: System.Collections.Generic.List{PascalABCCompiler.TreeRealization.compiler_directive}
  commentId: T:System.Collections.Generic.List{PascalABCCompiler.TreeRealization.compiler_directive}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<compiler_directive>
  nameWithType: List<compiler_directive>
  fullName: System.Collections.Generic.List<PascalABCCompiler.TreeRealization.compiler_directive>
  nameWithType.vb: List(Of compiler_directive)
  fullName.vb: System.Collections.Generic.List(Of PascalABCCompiler.TreeRealization.compiler_directive)
  name.vb: List(Of compiler_directive)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: PascalABCCompiler.TreeRealization.compiler_directive
    name: compiler_directive
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: PascalABCCompiler.TreeRealization.compiler_directive
    name: compiler_directive
    isExternal: true
  - name: )
- uid: PascalABCCompiler.Compiler.GetLocationFromTreenode*
  commentId: Overload:PascalABCCompiler.Compiler.GetLocationFromTreenode
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_GetLocationFromTreenode_PascalABCCompiler_SyntaxTree_syntax_tree_node_System_String_
  name: GetLocationFromTreenode
  nameWithType: Compiler.GetLocationFromTreenode
  fullName: PascalABCCompiler.Compiler.GetLocationFromTreenode
- uid: PascalABCCompiler.SyntaxTree.syntax_tree_node
  commentId: T:PascalABCCompiler.SyntaxTree.syntax_tree_node
  parent: PascalABCCompiler.SyntaxTree
  isExternal: true
  name: syntax_tree_node
  nameWithType: syntax_tree_node
  fullName: PascalABCCompiler.SyntaxTree.syntax_tree_node
- uid: PascalABCCompiler.TreeRealization.location
  commentId: T:PascalABCCompiler.TreeRealization.location
  parent: PascalABCCompiler.TreeRealization
  isExternal: true
  name: location
  nameWithType: location
  fullName: PascalABCCompiler.TreeRealization.location
- uid: PascalABCCompiler.SyntaxTree
  commentId: N:PascalABCCompiler.SyntaxTree
  isExternal: true
  name: PascalABCCompiler.SyntaxTree
  nameWithType: PascalABCCompiler.SyntaxTree
  fullName: PascalABCCompiler.SyntaxTree
  spec.csharp:
  - uid: PascalABCCompiler
    name: PascalABCCompiler
    isExternal: true
  - name: .
  - uid: PascalABCCompiler.SyntaxTree
    name: SyntaxTree
    isExternal: true
  spec.vb:
  - uid: PascalABCCompiler
    name: PascalABCCompiler
    isExternal: true
  - name: .
  - uid: PascalABCCompiler.SyntaxTree
    name: SyntaxTree
    isExternal: true
- uid: PascalABCCompiler.Compiler.StartCompile*
  commentId: Overload:PascalABCCompiler.Compiler.StartCompile
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_StartCompile
  name: StartCompile
  nameWithType: Compiler.StartCompile
  fullName: PascalABCCompiler.Compiler.StartCompile
- uid: PascalABCCompiler.ICompiler.StartCompile
  commentId: M:PascalABCCompiler.ICompiler.StartCompile
  parent: PascalABCCompiler.ICompiler
  isExternal: true
  href: PascalABCCompiler.ICompiler.html#PascalABCCompiler_ICompiler_StartCompile
  name: StartCompile()
  nameWithType: ICompiler.StartCompile()
  fullName: PascalABCCompiler.ICompiler.StartCompile()
  spec.csharp:
  - uid: PascalABCCompiler.ICompiler.StartCompile
    name: StartCompile
    isExternal: true
    href: PascalABCCompiler.ICompiler.html#PascalABCCompiler_ICompiler_StartCompile
  - name: (
  - name: )
  spec.vb:
  - uid: PascalABCCompiler.ICompiler.StartCompile
    name: StartCompile
    isExternal: true
    href: PascalABCCompiler.ICompiler.html#PascalABCCompiler_ICompiler_StartCompile
  - name: (
  - name: )
- uid: PascalABCCompiler.Compiler.Compile*
  commentId: Overload:PascalABCCompiler.Compiler.Compile
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_Compile_PascalABCCompiler_CompilerOptions_
  name: Compile
  nameWithType: Compiler.Compile
  fullName: PascalABCCompiler.Compiler.Compile
- uid: PascalABCCompiler.CompilerOptions
  commentId: T:PascalABCCompiler.CompilerOptions
  parent: PascalABCCompiler
  isExternal: true
  href: PascalABCCompiler.CompilerOptions.html
  name: CompilerOptions
  nameWithType: CompilerOptions
  fullName: PascalABCCompiler.CompilerOptions
- uid: PascalABCCompiler.Compiler.Reset*
  commentId: Overload:PascalABCCompiler.Compiler.Reset
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_Reset
  name: Reset
  nameWithType: Compiler.Reset
  fullName: PascalABCCompiler.Compiler.Reset
- uid: PascalABCCompiler.Compiler.CheckErrorsAndThrowTheFirstOne*
  commentId: Overload:PascalABCCompiler.Compiler.CheckErrorsAndThrowTheFirstOne
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_CheckErrorsAndThrowTheFirstOne
  name: CheckErrorsAndThrowTheFirstOne
  nameWithType: Compiler.CheckErrorsAndThrowTheFirstOne
  fullName: PascalABCCompiler.Compiler.CheckErrorsAndThrowTheFirstOne
- uid: PascalABCCompiler.Compiler.CompileCS*
  commentId: Overload:PascalABCCompiler.Compiler.CompileCS
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_CompileCS
  name: CompileCS
  nameWithType: Compiler.CompileCS
  fullName: PascalABCCompiler.Compiler.CompileCS
- uid: PascalABCCompiler.Compiler.InitializeProjectInfoAndFillCompilerOptionsFromIt*
  commentId: Overload:PascalABCCompiler.Compiler.InitializeProjectInfoAndFillCompilerOptionsFromIt
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_InitializeProjectInfoAndFillCompilerOptionsFromIt
  name: InitializeProjectInfoAndFillCompilerOptionsFromIt
  nameWithType: Compiler.InitializeProjectInfoAndFillCompilerOptionsFromIt
  fullName: PascalABCCompiler.Compiler.InitializeProjectInfoAndFillCompilerOptionsFromIt
- uid: PascalABCCompiler.Compiler.CheckPathValid*
  commentId: Overload:PascalABCCompiler.Compiler.CheckPathValid
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_CheckPathValid_System_String_
  name: CheckPathValid
  nameWithType: Compiler.CheckPathValid
  fullName: PascalABCCompiler.Compiler.CheckPathValid
- uid: PascalABCCompiler.Compiler.TryThrowInvalidPath*
  commentId: Overload:PascalABCCompiler.Compiler.TryThrowInvalidPath
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_TryThrowInvalidPath_System_String_PascalABCCompiler_SyntaxTree_SourceContext_
  name: TryThrowInvalidPath
  nameWithType: Compiler.TryThrowInvalidPath
  fullName: PascalABCCompiler.Compiler.TryThrowInvalidPath
- uid: PascalABCCompiler.SyntaxTree.SourceContext
  commentId: T:PascalABCCompiler.SyntaxTree.SourceContext
  parent: PascalABCCompiler.SyntaxTree
  isExternal: true
  name: SourceContext
  nameWithType: SourceContext
  fullName: PascalABCCompiler.SyntaxTree.SourceContext
- uid: PascalABCCompiler.Compiler.CompileUnitsFromDelayedList*
  commentId: Overload:PascalABCCompiler.Compiler.CompileUnitsFromDelayedList
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_CompileUnitsFromDelayedList
  name: CompileUnitsFromDelayedList
  nameWithType: Compiler.CompileUnitsFromDelayedList
  fullName: PascalABCCompiler.Compiler.CompileUnitsFromDelayedList
- uid: PascalABCCompiler.Compiler.SetOutputFileTypeOption*
  commentId: Overload:PascalABCCompiler.Compiler.SetOutputFileTypeOption
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_SetOutputFileTypeOption_System_Collections_Generic_Dictionary_System_String_System_Collections_Generic_List_PascalABCCompiler_TreeRealization_compiler_directive___
  name: SetOutputFileTypeOption
  nameWithType: Compiler.SetOutputFileTypeOption
  fullName: PascalABCCompiler.Compiler.SetOutputFileTypeOption
- uid: PascalABCCompiler.Compiler.SetOutputPlatformOption*
  commentId: Overload:PascalABCCompiler.Compiler.SetOutputPlatformOption
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_SetOutputPlatformOption_PascalABCCompiler_NETGenerator_CompilerOptions_System_Collections_Generic_Dictionary_System_String_System_Collections_Generic_List_PascalABCCompiler_TreeRealization_compiler_directive___
  name: SetOutputPlatformOption
  nameWithType: Compiler.SetOutputPlatformOption
  fullName: PascalABCCompiler.Compiler.SetOutputPlatformOption
- uid: PascalABCCompiler.NETGenerator.CompilerOptions
  commentId: T:PascalABCCompiler.NETGenerator.CompilerOptions
  parent: PascalABCCompiler.NETGenerator
  isExternal: true
  name: CompilerOptions
  nameWithType: CompilerOptions
  fullName: PascalABCCompiler.NETGenerator.CompilerOptions
- uid: PascalABCCompiler.NETGenerator
  commentId: N:PascalABCCompiler.NETGenerator
  isExternal: true
  name: PascalABCCompiler.NETGenerator
  nameWithType: PascalABCCompiler.NETGenerator
  fullName: PascalABCCompiler.NETGenerator
  spec.csharp:
  - uid: PascalABCCompiler
    name: PascalABCCompiler
    isExternal: true
  - name: .
  - uid: PascalABCCompiler.NETGenerator
    name: NETGenerator
    isExternal: true
  spec.vb:
  - uid: PascalABCCompiler
    name: PascalABCCompiler
    isExternal: true
  - name: .
  - uid: PascalABCCompiler.NETGenerator
    name: NETGenerator
    isExternal: true
- uid: PascalABCCompiler.Compiler.FillNetCompilerOptionsFromCompilerDirectives*
  commentId: Overload:PascalABCCompiler.Compiler.FillNetCompilerOptionsFromCompilerDirectives
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_FillNetCompilerOptionsFromCompilerDirectives_PascalABCCompiler_NETGenerator_CompilerOptions_System_Collections_Generic_Dictionary_System_String_System_Collections_Generic_List_PascalABCCompiler_TreeRealization_compiler_directive___
  name: FillNetCompilerOptionsFromCompilerDirectives
  nameWithType: Compiler.FillNetCompilerOptionsFromCompilerDirectives
  fullName: PascalABCCompiler.Compiler.FillNetCompilerOptionsFromCompilerDirectives
- uid: PascalABCCompiler.Compiler.FillNetCompilerOptionsFromProject*
  commentId: Overload:PascalABCCompiler.Compiler.FillNetCompilerOptionsFromProject
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_FillNetCompilerOptionsFromProject_PascalABCCompiler_NETGenerator_CompilerOptions_
  name: FillNetCompilerOptionsFromProject
  nameWithType: Compiler.FillNetCompilerOptionsFromProject
  fullName: PascalABCCompiler.Compiler.FillNetCompilerOptionsFromProject
- uid: PascalABCCompiler.Compiler.SetTargetTypeOption*
  commentId: Overload:PascalABCCompiler.Compiler.SetTargetTypeOption
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_SetTargetTypeOption_PascalABCCompiler_NETGenerator_CompilerOptions_
  name: SetTargetTypeOption
  nameWithType: Compiler.SetTargetTypeOption
  fullName: PascalABCCompiler.Compiler.SetTargetTypeOption
- uid: PascalABCCompiler.ICompiler.Compile
  commentId: M:PascalABCCompiler.ICompiler.Compile
  parent: PascalABCCompiler.ICompiler
  isExternal: true
  href: PascalABCCompiler.ICompiler.html#PascalABCCompiler_ICompiler_Compile
  name: Compile()
  nameWithType: ICompiler.Compile()
  fullName: PascalABCCompiler.ICompiler.Compile()
  spec.csharp:
  - uid: PascalABCCompiler.ICompiler.Compile
    name: Compile
    isExternal: true
    href: PascalABCCompiler.ICompiler.html#PascalABCCompiler_ICompiler_Compile
  - name: (
  - name: )
  spec.vb:
  - uid: PascalABCCompiler.ICompiler.Compile
    name: Compile
    isExternal: true
    href: PascalABCCompiler.ICompiler.html#PascalABCCompiler_ICompiler_Compile
  - name: (
  - name: )
- uid: PascalABCCompiler.Compiler.PrebuildMainSemanticTreeActions*
  commentId: Overload:PascalABCCompiler.Compiler.PrebuildMainSemanticTreeActions
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_PrebuildMainSemanticTreeActions_PascalABCCompiler_NETGenerator_CompilerOptions__System_Collections_Generic_List_System_String___
  name: PrebuildMainSemanticTreeActions
  nameWithType: Compiler.PrebuildMainSemanticTreeActions
  fullName: PascalABCCompiler.Compiler.PrebuildMainSemanticTreeActions
- uid: PascalABCCompiler.Compiler.ConstructMainSemanticTree*
  commentId: Overload:PascalABCCompiler.Compiler.ConstructMainSemanticTree
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_ConstructMainSemanticTree_PascalABCCompiler_NETGenerator_CompilerOptions_
  name: ConstructMainSemanticTree
  nameWithType: Compiler.ConstructMainSemanticTree
  fullName: PascalABCCompiler.Compiler.ConstructMainSemanticTree
- uid: PascalABCCompiler.Compiler.PrepareFinalMainFunctionForExe*
  commentId: Overload:PascalABCCompiler.Compiler.PrepareFinalMainFunctionForExe
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_PrepareFinalMainFunctionForExe_PascalABCCompiler_TreeRealization_program_node_
  name: PrepareFinalMainFunctionForExe
  nameWithType: Compiler.PrepareFinalMainFunctionForExe
  fullName: PascalABCCompiler.Compiler.PrepareFinalMainFunctionForExe
- uid: PascalABCCompiler.Compiler.AddErrorToErrorListConsideringPosition*
  commentId: Overload:PascalABCCompiler.Compiler.AddErrorToErrorListConsideringPosition
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_AddErrorToErrorListConsideringPosition_PascalABCCompiler_Errors_Error_
  name: AddErrorToErrorListConsideringPosition
  nameWithType: Compiler.AddErrorToErrorListConsideringPosition
  fullName: PascalABCCompiler.Compiler.AddErrorToErrorListConsideringPosition
- uid: PascalABCCompiler.Errors.Error
  commentId: T:PascalABCCompiler.Errors.Error
  parent: PascalABCCompiler.Errors
  isExternal: true
  name: Error
  nameWithType: Error
  fullName: PascalABCCompiler.Errors.Error
- uid: PascalABCCompiler.Errors
  commentId: N:PascalABCCompiler.Errors
  isExternal: true
  href: PascalABCCompiler.html
  name: PascalABCCompiler.Errors
  nameWithType: PascalABCCompiler.Errors
  fullName: PascalABCCompiler.Errors
  spec.csharp:
  - uid: PascalABCCompiler
    name: PascalABCCompiler
    isExternal: true
    href: PascalABCCompiler.html
  - name: .
  - uid: PascalABCCompiler.Errors
    name: Errors
    isExternal: true
    href: PascalABCCompiler.Errors.html
  spec.vb:
  - uid: PascalABCCompiler
    name: PascalABCCompiler
    isExternal: true
    href: PascalABCCompiler.html
  - name: .
  - uid: PascalABCCompiler.Errors
    name: Errors
    isExternal: true
    href: PascalABCCompiler.Errors.html
- uid: PascalABCCompiler.Compiler.FindPositionForSemanticErrorInTheErrorList*
  commentId: Overload:PascalABCCompiler.Compiler.FindPositionForSemanticErrorInTheErrorList
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_FindPositionForSemanticErrorInTheErrorList_PascalABCCompiler_Errors_Error_
  name: FindPositionForSemanticErrorInTheErrorList
  nameWithType: Compiler.FindPositionForSemanticErrorInTheErrorList
  fullName: PascalABCCompiler.Compiler.FindPositionForSemanticErrorInTheErrorList
- uid: PascalABCCompiler.Compiler.AddCodeGenerationErrorToErrorList*
  commentId: Overload:PascalABCCompiler.Compiler.AddCodeGenerationErrorToErrorList
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_AddCodeGenerationErrorToErrorList_System_Exception_
  name: AddCodeGenerationErrorToErrorList
  nameWithType: Compiler.AddCodeGenerationErrorToErrorList
  fullName: PascalABCCompiler.Compiler.AddCodeGenerationErrorToErrorList
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: PascalABCCompiler.Compiler.AddInternalErrorToErrorList*
  commentId: Overload:PascalABCCompiler.Compiler.AddInternalErrorToErrorList
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_AddInternalErrorToErrorList_PascalABCCompiler_Errors_CompilerInternalError_
  name: AddInternalErrorToErrorList
  nameWithType: Compiler.AddInternalErrorToErrorList
  fullName: PascalABCCompiler.Compiler.AddInternalErrorToErrorList
- uid: PascalABCCompiler.Errors.CompilerInternalError
  commentId: T:PascalABCCompiler.Errors.CompilerInternalError
  parent: PascalABCCompiler.Errors
  isExternal: true
  name: CompilerInternalError
  nameWithType: CompilerInternalError
  fullName: PascalABCCompiler.Errors.CompilerInternalError
- uid: PascalABCCompiler.Compiler.CheckForRTLErrorsAndClearAllErrorsIfFound*
  commentId: Overload:PascalABCCompiler.Compiler.CheckForRTLErrorsAndClearAllErrorsIfFound
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_CheckForRTLErrorsAndClearAllErrorsIfFound
  name: CheckForRTLErrorsAndClearAllErrorsIfFound
  nameWithType: Compiler.CheckForRTLErrorsAndClearAllErrorsIfFound
  fullName: PascalABCCompiler.Compiler.CheckForRTLErrorsAndClearAllErrorsIfFound
- uid: PascalABCCompiler.Compiler.GenerateILCode*
  commentId: Overload:PascalABCCompiler.Compiler.GenerateILCode
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_GenerateILCode_PascalABCCompiler_TreeRealization_program_node_PascalABCCompiler_NETGenerator_CompilerOptions_System_Collections_Generic_List_System_String__
  name: GenerateILCode
  nameWithType: Compiler.GenerateILCode
  fullName: PascalABCCompiler.Compiler.GenerateILCode
- uid: PascalABCCompiler.Compiler.DebugOutputFileCreationUsingPDB*
  commentId: Overload:PascalABCCompiler.Compiler.DebugOutputFileCreationUsingPDB
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_DebugOutputFileCreationUsingPDB
  name: DebugOutputFileCreationUsingPDB
  nameWithType: Compiler.DebugOutputFileCreationUsingPDB
  fullName: PascalABCCompiler.Compiler.DebugOutputFileCreationUsingPDB
- uid: PascalABCCompiler.Compiler.GetResourceFilesFromCompilerDirectives*
  commentId: Overload:PascalABCCompiler.Compiler.GetResourceFilesFromCompilerDirectives
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_GetResourceFilesFromCompilerDirectives_System_Collections_Generic_Dictionary_System_String_System_Collections_Generic_List_PascalABCCompiler_TreeRealization_compiler_directive___
  name: GetResourceFilesFromCompilerDirectives
  nameWithType: Compiler.GetResourceFilesFromCompilerDirectives
  fullName: PascalABCCompiler.Compiler.GetResourceFilesFromCompilerDirectives
- uid: PascalABCCompiler.Compiler.HasOnlySyntaxErrors*
  commentId: Overload:PascalABCCompiler.Compiler.HasOnlySyntaxErrors
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_HasOnlySyntaxErrors_System_Collections_Generic_List_PascalABCCompiler_Errors_Error__
  name: HasOnlySyntaxErrors
  nameWithType: Compiler.HasOnlySyntaxErrors
  fullName: PascalABCCompiler.Compiler.HasOnlySyntaxErrors
- uid: PascalABCCompiler.Compiler.SaveDocumentationsForUnits*
  commentId: Overload:PascalABCCompiler.Compiler.SaveDocumentationsForUnits
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_SaveDocumentationsForUnits
  name: SaveDocumentationsForUnits
  nameWithType: Compiler.SaveDocumentationsForUnits
  fullName: PascalABCCompiler.Compiler.SaveDocumentationsForUnits
- uid: PascalABCCompiler.Compiler.ClosePCUReadersAndWriters*
  commentId: Overload:PascalABCCompiler.Compiler.ClosePCUReadersAndWriters
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_ClosePCUReadersAndWriters
  name: ClosePCUReadersAndWriters
  nameWithType: Compiler.ClosePCUReadersAndWriters
  fullName: PascalABCCompiler.Compiler.ClosePCUReadersAndWriters
- uid: PascalABCCompiler.Compiler.WaitCallback_ClosePCUWriters*
  commentId: Overload:PascalABCCompiler.Compiler.WaitCallback_ClosePCUWriters
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_WaitCallback_ClosePCUWriters_System_Object_
  name: WaitCallback_ClosePCUWriters
  nameWithType: Compiler.WaitCallback_ClosePCUWriters
  fullName: PascalABCCompiler.Compiler.WaitCallback_ClosePCUWriters
- uid: PascalABCCompiler.Compiler.AsyncClosePCUWriters*
  commentId: Overload:PascalABCCompiler.Compiler.AsyncClosePCUWriters
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_AsyncClosePCUWriters
  name: AsyncClosePCUWriters
  nameWithType: Compiler.AsyncClosePCUWriters
  fullName: PascalABCCompiler.Compiler.AsyncClosePCUWriters
- uid: PascalABCCompiler.Compiler.ClosePCUWriters*
  commentId: Overload:PascalABCCompiler.Compiler.ClosePCUWriters
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_ClosePCUWriters
  name: ClosePCUWriters
  nameWithType: Compiler.ClosePCUWriters
  fullName: PascalABCCompiler.Compiler.ClosePCUWriters
- uid: PascalABCCompiler.Compiler.CheckForDuplicatesInUsesSection*
  commentId: Overload:PascalABCCompiler.Compiler.CheckForDuplicatesInUsesSection
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_CheckForDuplicatesInUsesSection_System_Collections_Generic_List_PascalABCCompiler_SyntaxTree_unit_or_namespace__
  name: CheckForDuplicatesInUsesSection
  nameWithType: Compiler.CheckForDuplicatesInUsesSection
  fullName: PascalABCCompiler.Compiler.CheckForDuplicatesInUsesSection
- uid: System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace}
  commentId: T:System.Collections.Generic.List{PascalABCCompiler.SyntaxTree.unit_or_namespace}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<unit_or_namespace>
  nameWithType: List<unit_or_namespace>
  fullName: System.Collections.Generic.List<PascalABCCompiler.SyntaxTree.unit_or_namespace>
  nameWithType.vb: List(Of unit_or_namespace)
  fullName.vb: System.Collections.Generic.List(Of PascalABCCompiler.SyntaxTree.unit_or_namespace)
  name.vb: List(Of unit_or_namespace)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: PascalABCCompiler.SyntaxTree.unit_or_namespace
    name: unit_or_namespace
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: PascalABCCompiler.SyntaxTree.unit_or_namespace
    name: unit_or_namespace
    isExternal: true
  - name: )
- uid: PascalABCCompiler.Compiler.GetInterfaceUsesSection*
  commentId: Overload:PascalABCCompiler.Compiler.GetInterfaceUsesSection
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_GetInterfaceUsesSection_PascalABCCompiler_SyntaxTree_compilation_unit_
  name: GetInterfaceUsesSection
  nameWithType: Compiler.GetInterfaceUsesSection
  fullName: PascalABCCompiler.Compiler.GetInterfaceUsesSection
- uid: PascalABCCompiler.SyntaxTree.compilation_unit
  commentId: T:PascalABCCompiler.SyntaxTree.compilation_unit
  parent: PascalABCCompiler.SyntaxTree
  isExternal: true
  name: compilation_unit
  nameWithType: compilation_unit
  fullName: PascalABCCompiler.SyntaxTree.compilation_unit
- uid: PascalABCCompiler.Compiler.GetImplementationUsesSection*
  commentId: Overload:PascalABCCompiler.Compiler.GetImplementationUsesSection
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_GetImplementationUsesSection_PascalABCCompiler_SyntaxTree_compilation_unit_
  name: GetImplementationUsesSection
  nameWithType: Compiler.GetImplementationUsesSection
  fullName: PascalABCCompiler.Compiler.GetImplementationUsesSection
- uid: PascalABCCompiler.Compiler.FindPCUFileName*
  commentId: Overload:PascalABCCompiler.Compiler.FindPCUFileName
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_FindPCUFileName_System_String_System_String_System_Int32__
  name: FindPCUFileName
  nameWithType: Compiler.FindPCUFileName
  fullName: PascalABCCompiler.Compiler.FindPCUFileName
- uid: PascalABCCompiler.Compiler.FindSourceFileName*
  commentId: Overload:PascalABCCompiler.Compiler.FindSourceFileName
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_FindSourceFileName_System_String_System_String_System_Int32__
  name: FindSourceFileName
  nameWithType: Compiler.FindSourceFileName
  fullName: PascalABCCompiler.Compiler.FindSourceFileName
- uid: PascalABCCompiler.Compiler.FindSourceFileNameInDirs*
  commentId: Overload:PascalABCCompiler.Compiler.FindSourceFileNameInDirs
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_FindSourceFileNameInDirs_System_String_System_Int32__System_String___
  name: FindSourceFileNameInDirs
  nameWithType: Compiler.FindSourceFileNameInDirs
  fullName: PascalABCCompiler.Compiler.FindSourceFileNameInDirs
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: PascalABCCompiler.Compiler.CombinePathsRelatively*
  commentId: Overload:PascalABCCompiler.Compiler.CombinePathsRelatively
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_CombinePathsRelatively_System_String_System_String_
  name: CombinePathsRelatively
  nameWithType: Compiler.CombinePathsRelatively
  fullName: PascalABCCompiler.Compiler.CombinePathsRelatively
- uid: PascalABCCompiler.Compiler.GetUnitPath*
  commentId: Overload:PascalABCCompiler.Compiler.GetUnitPath
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_GetUnitPath_PascalABCCompiler_CompilationUnit_PascalABCCompiler_CompilationUnit_
  name: GetUnitPath
  nameWithType: Compiler.GetUnitPath
  fullName: PascalABCCompiler.Compiler.GetUnitPath
- uid: PascalABCCompiler.Compiler.FindFileWithExtensionInDirs*
  commentId: Overload:PascalABCCompiler.Compiler.FindFileWithExtensionInDirs
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_FindFileWithExtensionInDirs_System_String_System_Int32__System_String___
  name: FindFileWithExtensionInDirs
  nameWithType: Compiler.FindFileWithExtensionInDirs
  fullName: PascalABCCompiler.Compiler.FindFileWithExtensionInDirs
- uid: PascalABCCompiler.Compiler.GetReferenceFileName*
  commentId: Overload:PascalABCCompiler.Compiler.GetReferenceFileName
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_GetReferenceFileName_System_String_System_String_
  name: GetReferenceFileName
  nameWithType: Compiler.GetReferenceFileName
  fullName: PascalABCCompiler.Compiler.GetReferenceFileName
- uid: PascalABCCompiler.Compiler.GetUnitFileName*
  commentId: Overload:PascalABCCompiler.Compiler.GetUnitFileName
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_GetUnitFileName_PascalABCCompiler_SyntaxTree_unit_or_namespace_System_String_
  name: GetUnitFileName
  nameWithType: Compiler.GetUnitFileName
  fullName: PascalABCCompiler.Compiler.GetUnitFileName
- uid: PascalABCCompiler.SyntaxTree.unit_or_namespace
  commentId: T:PascalABCCompiler.SyntaxTree.unit_or_namespace
  parent: PascalABCCompiler.SyntaxTree
  isExternal: true
  name: unit_or_namespace
  nameWithType: unit_or_namespace
  fullName: PascalABCCompiler.SyntaxTree.unit_or_namespace
- uid: PascalABCCompiler.Compiler.AddStandardUnitsToInterfaceUsesSection*
  commentId: Overload:PascalABCCompiler.Compiler.AddStandardUnitsToInterfaceUsesSection
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_AddStandardUnitsToInterfaceUsesSection_PascalABCCompiler_CompilationUnit_
  name: AddStandardUnitsToInterfaceUsesSection
  nameWithType: Compiler.AddStandardUnitsToInterfaceUsesSection
  fullName: PascalABCCompiler.Compiler.AddStandardUnitsToInterfaceUsesSection
- uid: PascalABCCompiler.Compiler.PreloadReference*
  commentId: Overload:PascalABCCompiler.Compiler.PreloadReference
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_PreloadReference_PascalABCCompiler_TreeRealization_compiler_directive_
  name: PreloadReference
  nameWithType: Compiler.PreloadReference
  fullName: PascalABCCompiler.Compiler.PreloadReference
- uid: PascalABCCompiler.TreeRealization.compiler_directive
  commentId: T:PascalABCCompiler.TreeRealization.compiler_directive
  parent: PascalABCCompiler.TreeRealization
  isExternal: true
  name: compiler_directive
  nameWithType: compiler_directive
  fullName: PascalABCCompiler.TreeRealization.compiler_directive
- uid: System.Reflection.Assembly
  commentId: T:System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.reflection.assembly
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Reflection
    name: Reflection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Reflection
    name: Reflection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection
- uid: PascalABCCompiler.Compiler.CompileReference*
  commentId: Overload:PascalABCCompiler.Compiler.CompileReference
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_CompileReference_PascalABCCompiler_TreeRealization_unit_node_list_PascalABCCompiler_TreeRealization_compiler_directive_
  name: CompileReference
  nameWithType: Compiler.CompileReference
  fullName: PascalABCCompiler.Compiler.CompileReference
- uid: PascalABCCompiler.TreeRealization.unit_node_list
  commentId: T:PascalABCCompiler.TreeRealization.unit_node_list
  parent: PascalABCCompiler.TreeRealization
  isExternal: true
  name: unit_node_list
  nameWithType: unit_node_list
  fullName: PascalABCCompiler.TreeRealization.unit_node_list
- uid: PascalABCCompiler.Compiler.GetSourceContext*
  commentId: Overload:PascalABCCompiler.Compiler.GetSourceContext
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_GetSourceContext_PascalABCCompiler_TreeRealization_compiler_directive_
  name: GetSourceContext
  nameWithType: Compiler.GetSourceContext
  fullName: PascalABCCompiler.Compiler.GetSourceContext
- uid: PascalABCCompiler.Compiler.HasIncludeNamespaceDirective*
  commentId: Overload:PascalABCCompiler.Compiler.HasIncludeNamespaceDirective
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_HasIncludeNamespaceDirective_PascalABCCompiler_CompilationUnit_
  name: HasIncludeNamespaceDirective
  nameWithType: Compiler.HasIncludeNamespaceDirective
  fullName: PascalABCCompiler.Compiler.HasIncludeNamespaceDirective
- uid: PascalABCCompiler.Compiler.PrepareUserNamespacesUsedInTheCurrentUnit*
  commentId: Overload:PascalABCCompiler.Compiler.PrepareUserNamespacesUsedInTheCurrentUnit
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_PrepareUserNamespacesUsedInTheCurrentUnit_PascalABCCompiler_CompilationUnit_
  name: PrepareUserNamespacesUsedInTheCurrentUnit
  nameWithType: Compiler.PrepareUserNamespacesUsedInTheCurrentUnit
  fullName: PascalABCCompiler.Compiler.PrepareUserNamespacesUsedInTheCurrentUnit
- uid: System.Collections.Generic.Dictionary{System.String,PascalABCCompiler.SyntaxTree.syntax_namespace_node}
  commentId: T:System.Collections.Generic.Dictionary{System.String,PascalABCCompiler.SyntaxTree.syntax_namespace_node}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, syntax_namespace_node>
  nameWithType: Dictionary<string, syntax_namespace_node>
  fullName: System.Collections.Generic.Dictionary<string, PascalABCCompiler.SyntaxTree.syntax_namespace_node>
  nameWithType.vb: Dictionary(Of String, syntax_namespace_node)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, PascalABCCompiler.SyntaxTree.syntax_namespace_node)
  name.vb: Dictionary(Of String, syntax_namespace_node)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: PascalABCCompiler.SyntaxTree.syntax_namespace_node
    name: syntax_namespace_node
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: PascalABCCompiler.SyntaxTree.syntax_namespace_node
    name: syntax_namespace_node
    isExternal: true
  - name: )
- uid: PascalABCCompiler.Compiler.AddNamespacesToMainDefinitions*
  commentId: Overload:PascalABCCompiler.Compiler.AddNamespacesToMainDefinitions
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_AddNamespacesToMainDefinitions_PascalABCCompiler_SyntaxTree_unit_module_PascalABCCompiler_SyntaxTree_program_module_System_Collections_Generic_Dictionary_System_String_PascalABCCompiler_SyntaxTree_syntax_namespace_node__
  name: AddNamespacesToMainDefinitions
  nameWithType: Compiler.AddNamespacesToMainDefinitions
  fullName: PascalABCCompiler.Compiler.AddNamespacesToMainDefinitions
- uid: PascalABCCompiler.SyntaxTree.unit_module
  commentId: T:PascalABCCompiler.SyntaxTree.unit_module
  parent: PascalABCCompiler.SyntaxTree
  isExternal: true
  name: unit_module
  nameWithType: unit_module
  fullName: PascalABCCompiler.SyntaxTree.unit_module
- uid: PascalABCCompiler.SyntaxTree.program_module
  commentId: T:PascalABCCompiler.SyntaxTree.program_module
  parent: PascalABCCompiler.SyntaxTree
  isExternal: true
  name: program_module
  nameWithType: program_module
  fullName: PascalABCCompiler.SyntaxTree.program_module
- uid: PascalABCCompiler.Compiler.AddNamespacesToMainUsesList*
  commentId: Overload:PascalABCCompiler.Compiler.AddNamespacesToMainUsesList
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_AddNamespacesToMainUsesList_PascalABCCompiler_SyntaxTree_unit_module_PascalABCCompiler_SyntaxTree_program_module_System_Collections_Generic_List_PascalABCCompiler_SyntaxTree_unit_or_namespace__
  name: AddNamespacesToMainUsesList
  nameWithType: Compiler.AddNamespacesToMainUsesList
  fullName: PascalABCCompiler.Compiler.AddNamespacesToMainUsesList
- uid: PascalABCCompiler.Compiler.AddDeclarationsAndReferencedUnitsToNamespaces*
  commentId: Overload:PascalABCCompiler.Compiler.AddDeclarationsAndReferencedUnitsToNamespaces
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_AddDeclarationsAndReferencedUnitsToNamespaces_System_Collections_Generic_List_PascalABCCompiler_SyntaxTree_unit_or_namespace__System_String_PascalABCCompiler_SyntaxTree_unit_module_PascalABCCompiler_SyntaxTree_syntax_namespace_node_
  name: AddDeclarationsAndReferencedUnitsToNamespaces
  nameWithType: Compiler.AddDeclarationsAndReferencedUnitsToNamespaces
  fullName: PascalABCCompiler.Compiler.AddDeclarationsAndReferencedUnitsToNamespaces
- uid: PascalABCCompiler.SyntaxTree.syntax_namespace_node
  commentId: T:PascalABCCompiler.SyntaxTree.syntax_namespace_node
  parent: PascalABCCompiler.SyntaxTree
  isExternal: true
  name: syntax_namespace_node
  nameWithType: syntax_namespace_node
  fullName: PascalABCCompiler.SyntaxTree.syntax_namespace_node
- uid: PascalABCCompiler.Compiler.SemanticCheckIsUserNamespace*
  commentId: Overload:PascalABCCompiler.Compiler.SemanticCheckIsUserNamespace
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_SemanticCheckIsUserNamespace_PascalABCCompiler_SyntaxTree_compilation_unit_
  name: SemanticCheckIsUserNamespace
  nameWithType: Compiler.SemanticCheckIsUserNamespace
  fullName: PascalABCCompiler.Compiler.SemanticCheckIsUserNamespace
- uid: PascalABCCompiler.Compiler.GetIncludedFilesFromDirectives*
  commentId: Overload:PascalABCCompiler.Compiler.GetIncludedFilesFromDirectives
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_GetIncludedFilesFromDirectives_PascalABCCompiler_CompilationUnit_System_Collections_Generic_List_PascalABCCompiler_TreeRealization_compiler_directive__
  name: GetIncludedFilesFromDirectives
  nameWithType: Compiler.GetIncludedFilesFromDirectives
  fullName: PascalABCCompiler.Compiler.GetIncludedFilesFromDirectives
- uid: PascalABCCompiler.Compiler.SemanticCheckNoIncludeNamespaceDirectivesInUnit*
  commentId: Overload:PascalABCCompiler.Compiler.SemanticCheckNoIncludeNamespaceDirectivesInUnit
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_SemanticCheckNoIncludeNamespaceDirectivesInUnit_PascalABCCompiler_CompilationUnit_
  name: SemanticCheckNoIncludeNamespaceDirectivesInUnit
  nameWithType: Compiler.SemanticCheckNoIncludeNamespaceDirectivesInUnit
  fullName: PascalABCCompiler.Compiler.SemanticCheckNoIncludeNamespaceDirectivesInUnit
- uid: PascalABCCompiler.Compiler.GetNamespaceSyntaxTree*
  commentId: Overload:PascalABCCompiler.Compiler.GetNamespaceSyntaxTree
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_GetNamespaceSyntaxTree_System_String_
  name: GetNamespaceSyntaxTree
  nameWithType: Compiler.GetNamespaceSyntaxTree
  fullName: PascalABCCompiler.Compiler.GetNamespaceSyntaxTree
- uid: PascalABCCompiler.Compiler.GetReferences*
  commentId: Overload:PascalABCCompiler.Compiler.GetReferences
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_GetReferences_PascalABCCompiler_CompilationUnit_
  name: GetReferences
  nameWithType: Compiler.GetReferences
  fullName: PascalABCCompiler.Compiler.GetReferences
- uid: PascalABCCompiler.Compiler.DisablePABCRtlIfUsingDotnet5*
  commentId: Overload:PascalABCCompiler.Compiler.DisablePABCRtlIfUsingDotnet5
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_DisablePABCRtlIfUsingDotnet5_System_Collections_Generic_List_PascalABCCompiler_TreeRealization_compiler_directive__
  name: DisablePABCRtlIfUsingDotnet5
  nameWithType: Compiler.DisablePABCRtlIfUsingDotnet5
  fullName: PascalABCCompiler.Compiler.DisablePABCRtlIfUsingDotnet5
- uid: PascalABCCompiler.Compiler.AddReferencesToNetSystemLibraries*
  commentId: Overload:PascalABCCompiler.Compiler.AddReferencesToNetSystemLibraries
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_AddReferencesToNetSystemLibraries_PascalABCCompiler_CompilationUnit_System_Collections_Generic_List_PascalABCCompiler_TreeRealization_compiler_directive__
  name: AddReferencesToNetSystemLibraries
  nameWithType: Compiler.AddReferencesToNetSystemLibraries
  fullName: PascalABCCompiler.Compiler.AddReferencesToNetSystemLibraries
- uid: PascalABCCompiler.Compiler.IsPossibleNetNamespaceOrStandardPasFile*
  commentId: Overload:PascalABCCompiler.Compiler.IsPossibleNetNamespaceOrStandardPasFile
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_IsPossibleNetNamespaceOrStandardPasFile_PascalABCCompiler_SyntaxTree_unit_or_namespace_System_Boolean_System_String_
  name: IsPossibleNetNamespaceOrStandardPasFile
  nameWithType: Compiler.IsPossibleNetNamespaceOrStandardPasFile
  fullName: PascalABCCompiler.Compiler.IsPossibleNetNamespaceOrStandardPasFile
- uid: PascalABCCompiler.Compiler.GetNamespace*
  commentId: Overload:PascalABCCompiler.Compiler.GetNamespace
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_GetNamespace_PascalABCCompiler_SyntaxTree_unit_or_namespace_
  name: GetNamespace
  nameWithType: Compiler.GetNamespace
  fullName: PascalABCCompiler.Compiler.GetNamespace
- uid: PascalABCCompiler.TreeRealization.using_namespace
  commentId: T:PascalABCCompiler.TreeRealization.using_namespace
  parent: PascalABCCompiler.TreeRealization
  isExternal: true
  name: using_namespace
  nameWithType: using_namespace
  fullName: PascalABCCompiler.TreeRealization.using_namespace
- uid: PascalABCCompiler.Errors.UnitNotFound
  commentId: T:PascalABCCompiler.Errors.UnitNotFound
  isExternal: true
  href: PascalABCCompiler.Errors.UnitNotFound.html
  name: UnitNotFound
  nameWithType: UnitNotFound
  fullName: PascalABCCompiler.Errors.UnitNotFound
- uid: PascalABCCompiler.TreeConverter.NamespaceNotFound
  commentId: T:PascalABCCompiler.TreeConverter.NamespaceNotFound
  isExternal: true
  name: NamespaceNotFound
  nameWithType: NamespaceNotFound
  fullName: PascalABCCompiler.TreeConverter.NamespaceNotFound
- uid: PascalABCCompiler.TreeRealization.using_namespace_list
  commentId: T:PascalABCCompiler.TreeRealization.using_namespace_list
  parent: PascalABCCompiler.TreeRealization
  isExternal: true
  name: using_namespace_list
  nameWithType: using_namespace_list
  fullName: PascalABCCompiler.TreeRealization.using_namespace_list
- uid: PascalABCCompiler.Compiler.AddNamespacesToUsingList*
  commentId: Overload:PascalABCCompiler.Compiler.AddNamespacesToUsingList
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_AddNamespacesToUsingList_PascalABCCompiler_TreeRealization_using_namespace_list_System_Collections_Generic_List_PascalABCCompiler_SyntaxTree_unit_or_namespace__System_Boolean_System_Collections_Generic_Dictionary_System_String_PascalABCCompiler_SyntaxTree_syntax_namespace_node__
  name: AddNamespacesToUsingList
  nameWithType: Compiler.AddNamespacesToUsingList
  fullName: PascalABCCompiler.Compiler.AddNamespacesToUsingList
- uid: PascalABCCompiler.SyntaxTree.using_list
  commentId: T:PascalABCCompiler.SyntaxTree.using_list
  parent: PascalABCCompiler.SyntaxTree
  isExternal: true
  name: using_list
  nameWithType: using_list
  fullName: PascalABCCompiler.SyntaxTree.using_list
- uid: PascalABCCompiler.Compiler.GetInterfaceUsingList*
  commentId: Overload:PascalABCCompiler.Compiler.GetInterfaceUsingList
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_GetInterfaceUsingList_PascalABCCompiler_SyntaxTree_compilation_unit_
  name: GetInterfaceUsingList
  nameWithType: Compiler.GetInterfaceUsingList
  fullName: PascalABCCompiler.Compiler.GetInterfaceUsingList
- uid: PascalABCCompiler.Compiler.GetImplementationSyntaxUsingList*
  commentId: Overload:PascalABCCompiler.Compiler.GetImplementationSyntaxUsingList
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_GetImplementationSyntaxUsingList_PascalABCCompiler_SyntaxTree_compilation_unit_
  name: GetImplementationSyntaxUsingList
  nameWithType: Compiler.GetImplementationSyntaxUsingList
  fullName: PascalABCCompiler.Compiler.GetImplementationSyntaxUsingList
- uid: PascalABCCompiler.Compiler.GetSourceFileText*
  commentId: Overload:PascalABCCompiler.Compiler.GetSourceFileText
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_GetSourceFileText_System_String_
  name: GetSourceFileText
  nameWithType: Compiler.GetSourceFileText
  fullName: PascalABCCompiler.Compiler.GetSourceFileText
- uid: PascalABCCompiler.ICompiler.GetSourceFileText(System.String)
  commentId: M:PascalABCCompiler.ICompiler.GetSourceFileText(System.String)
  parent: PascalABCCompiler.ICompiler
  isExternal: true
  href: PascalABCCompiler.ICompiler.html#PascalABCCompiler_ICompiler_GetSourceFileText_System_String_
  name: GetSourceFileText(string)
  nameWithType: ICompiler.GetSourceFileText(string)
  fullName: PascalABCCompiler.ICompiler.GetSourceFileText(string)
  nameWithType.vb: ICompiler.GetSourceFileText(String)
  fullName.vb: PascalABCCompiler.ICompiler.GetSourceFileText(String)
  name.vb: GetSourceFileText(String)
  spec.csharp:
  - uid: PascalABCCompiler.ICompiler.GetSourceFileText(System.String)
    name: GetSourceFileText
    isExternal: true
    href: PascalABCCompiler.ICompiler.html#PascalABCCompiler_ICompiler_GetSourceFileText_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: PascalABCCompiler.ICompiler.GetSourceFileText(System.String)
    name: GetSourceFileText
    isExternal: true
    href: PascalABCCompiler.ICompiler.html#PascalABCCompiler_ICompiler_GetSourceFileText_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: PascalABCCompiler.Compiler.ParseText*
  commentId: Overload:PascalABCCompiler.Compiler.ParseText
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_ParseText_System_String_System_String_System_Collections_Generic_List_PascalABCCompiler_Errors_Error__System_Collections_Generic_List_PascalABCCompiler_Errors_CompilerWarning__
  name: ParseText
  nameWithType: Compiler.ParseText
  fullName: PascalABCCompiler.Compiler.ParseText
- uid: PascalABCCompiler.ICompiler.ParseText(System.String,System.String,System.Collections.Generic.List{PascalABCCompiler.Errors.Error},System.Collections.Generic.List{PascalABCCompiler.Errors.CompilerWarning})
  commentId: M:PascalABCCompiler.ICompiler.ParseText(System.String,System.String,System.Collections.Generic.List{PascalABCCompiler.Errors.Error},System.Collections.Generic.List{PascalABCCompiler.Errors.CompilerWarning})
  parent: PascalABCCompiler.ICompiler
  isExternal: true
  href: PascalABCCompiler.ICompiler.html#PascalABCCompiler_ICompiler_ParseText_System_String_System_String_System_Collections_Generic_List_PascalABCCompiler_Errors_Error__System_Collections_Generic_List_PascalABCCompiler_Errors_CompilerWarning__
  name: ParseText(string, string, List<Error>, List<CompilerWarning>)
  nameWithType: ICompiler.ParseText(string, string, List<Error>, List<CompilerWarning>)
  fullName: PascalABCCompiler.ICompiler.ParseText(string, string, System.Collections.Generic.List<PascalABCCompiler.Errors.Error>, System.Collections.Generic.List<PascalABCCompiler.Errors.CompilerWarning>)
  nameWithType.vb: ICompiler.ParseText(String, String, List(Of Error), List(Of CompilerWarning))
  fullName.vb: PascalABCCompiler.ICompiler.ParseText(String, String, System.Collections.Generic.List(Of PascalABCCompiler.Errors.Error), System.Collections.Generic.List(Of PascalABCCompiler.Errors.CompilerWarning))
  name.vb: ParseText(String, String, List(Of Error), List(Of CompilerWarning))
  spec.csharp:
  - uid: PascalABCCompiler.ICompiler.ParseText(System.String,System.String,System.Collections.Generic.List{PascalABCCompiler.Errors.Error},System.Collections.Generic.List{PascalABCCompiler.Errors.CompilerWarning})
    name: ParseText
    isExternal: true
    href: PascalABCCompiler.ICompiler.html#PascalABCCompiler_ICompiler_ParseText_System_String_System_String_System_Collections_Generic_List_PascalABCCompiler_Errors_Error__System_Collections_Generic_List_PascalABCCompiler_Errors_CompilerWarning__
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: PascalABCCompiler.Errors.Error
    name: Error
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: PascalABCCompiler.Errors.CompilerWarning
    name: CompilerWarning
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: PascalABCCompiler.ICompiler.ParseText(System.String,System.String,System.Collections.Generic.List{PascalABCCompiler.Errors.Error},System.Collections.Generic.List{PascalABCCompiler.Errors.CompilerWarning})
    name: ParseText
    isExternal: true
    href: PascalABCCompiler.ICompiler.html#PascalABCCompiler_ICompiler_ParseText_System_String_System_String_System_Collections_Generic_List_PascalABCCompiler_Errors_Error__System_Collections_Generic_List_PascalABCCompiler_Errors_CompilerWarning__
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: PascalABCCompiler.Errors.Error
    name: Error
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: PascalABCCompiler.Errors.CompilerWarning
    name: CompilerWarning
    isExternal: true
  - name: )
  - name: )
- uid: PascalABCCompiler.Compiler.CalculateLinesCompiled*
  commentId: Overload:PascalABCCompiler.Compiler.CalculateLinesCompiled
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_CalculateLinesCompiled_System_Collections_Generic_List_PascalABCCompiler_Errors_Error__PascalABCCompiler_SyntaxTree_compilation_unit_
  name: CalculateLinesCompiled
  nameWithType: Compiler.CalculateLinesCompiled
  fullName: PascalABCCompiler.Compiler.CalculateLinesCompiled
- uid: PascalABCCompiler.Compiler.CalculatePascalProgramHealth*
  commentId: Overload:PascalABCCompiler.Compiler.CalculatePascalProgramHealth
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_CalculatePascalProgramHealth_PascalABCCompiler_SyntaxTree_compilation_unit_
  name: CalculatePascalProgramHealth
  nameWithType: Compiler.CalculatePascalProgramHealth
  fullName: PascalABCCompiler.Compiler.CalculatePascalProgramHealth
- uid: PascalABCCompiler.Compiler.InternalParseText*
  commentId: Overload:PascalABCCompiler.Compiler.InternalParseText
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_InternalParseText_Languages_Facade_ILanguage_System_String_System_String_System_Collections_Generic_List_PascalABCCompiler_Errors_Error__System_Collections_Generic_List_PascalABCCompiler_Errors_CompilerWarning__System_Collections_Generic_List_System_String__System_Boolean_
  name: InternalParseText
  nameWithType: Compiler.InternalParseText
  fullName: PascalABCCompiler.Compiler.InternalParseText
- uid: Languages.Facade.ILanguage
  commentId: T:Languages.Facade.ILanguage
  parent: Languages.Facade
  isExternal: true
  name: ILanguage
  nameWithType: ILanguage
  fullName: Languages.Facade.ILanguage
- uid: Languages.Facade
  commentId: N:Languages.Facade
  isExternal: true
  name: Languages.Facade
  nameWithType: Languages.Facade
  fullName: Languages.Facade
  spec.csharp:
  - uid: Languages
    name: Languages
    isExternal: true
  - name: .
  - uid: Languages.Facade
    name: Facade
    isExternal: true
  spec.vb:
  - uid: Languages
    name: Languages
    isExternal: true
  - name: .
  - uid: Languages.Facade
    name: Facade
    isExternal: true
- uid: PascalABCCompiler.Compiler.IsDll*
  commentId: Overload:PascalABCCompiler.Compiler.IsDll
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_IsDll_PascalABCCompiler_SyntaxTree_compilation_unit_
  name: IsDll
  nameWithType: Compiler.IsDll
  fullName: PascalABCCompiler.Compiler.IsDll
- uid: PascalABCCompiler.SyntaxTree.compiler_directive
  commentId: T:PascalABCCompiler.SyntaxTree.compiler_directive
  parent: PascalABCCompiler.SyntaxTree
  isExternal: true
  name: compiler_directive
  nameWithType: compiler_directive
  fullName: PascalABCCompiler.SyntaxTree.compiler_directive
- uid: PascalABCCompiler.Compiler.CompileUnit*
  commentId: Overload:PascalABCCompiler.Compiler.CompileUnit
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_CompileUnit_PascalABCCompiler_TreeRealization_unit_node_list_System_Collections_Generic_Dictionary_PascalABCCompiler_TreeRealization_unit_node_PascalABCCompiler_CompilationUnit__PascalABCCompiler_SyntaxTree_unit_or_namespace_System_String_
  name: CompileUnit
  nameWithType: Compiler.CompileUnit
  fullName: PascalABCCompiler.Compiler.CompileUnit
- uid: System.Collections.Generic.Dictionary{PascalABCCompiler.TreeRealization.unit_node,PascalABCCompiler.CompilationUnit}
  commentId: T:System.Collections.Generic.Dictionary{PascalABCCompiler.TreeRealization.unit_node,PascalABCCompiler.CompilationUnit}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<unit_node, CompilationUnit>
  nameWithType: Dictionary<unit_node, CompilationUnit>
  fullName: System.Collections.Generic.Dictionary<PascalABCCompiler.TreeRealization.unit_node, PascalABCCompiler.CompilationUnit>
  nameWithType.vb: Dictionary(Of unit_node, CompilationUnit)
  fullName.vb: System.Collections.Generic.Dictionary(Of PascalABCCompiler.TreeRealization.unit_node, PascalABCCompiler.CompilationUnit)
  name.vb: Dictionary(Of unit_node, CompilationUnit)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: PascalABCCompiler.TreeRealization.unit_node
    name: unit_node
    isExternal: true
  - name: ','
  - name: " "
  - uid: PascalABCCompiler.CompilationUnit
    name: CompilationUnit
    isExternal: true
    href: PascalABCCompiler.CompilationUnit.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: PascalABCCompiler.TreeRealization.unit_node
    name: unit_node
    isExternal: true
  - name: ','
  - name: " "
  - uid: PascalABCCompiler.CompilationUnit
    name: CompilationUnit
    isExternal: true
    href: PascalABCCompiler.CompilationUnit.html
  - name: )
- uid: PascalABCCompiler.Compiler.CreateDependencyListsForCurrentUnit*
  commentId: Overload:PascalABCCompiler.Compiler.CreateDependencyListsForCurrentUnit
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_CreateDependencyListsForCurrentUnit_PascalABCCompiler_CompilationUnit_System_String_System_Collections_Generic_List_PascalABCCompiler_SyntaxTree_unit_or_namespace___PascalABCCompiler_TreeRealization_unit_node_list__System_Collections_Generic_Dictionary_System_String_PascalABCCompiler_SyntaxTree_syntax_namespace_node___
  name: CreateDependencyListsForCurrentUnit
  nameWithType: Compiler.CreateDependencyListsForCurrentUnit
  fullName: PascalABCCompiler.Compiler.CreateDependencyListsForCurrentUnit
- uid: PascalABCCompiler.Compiler.AddCurrentUnitAndItsReferencesToUsesLists*
  commentId: Overload:PascalABCCompiler.Compiler.AddCurrentUnitAndItsReferencesToUsesLists
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_AddCurrentUnitAndItsReferencesToUsesLists_PascalABCCompiler_TreeRealization_unit_node_list_System_Collections_Generic_Dictionary_PascalABCCompiler_TreeRealization_unit_node_PascalABCCompiler_CompilationUnit__PascalABCCompiler_SyntaxTree_unit_or_namespace_PascalABCCompiler_CompilationUnit_PascalABCCompiler_TreeRealization_unit_node_list_
  name: AddCurrentUnitAndItsReferencesToUsesLists
  nameWithType: Compiler.AddCurrentUnitAndItsReferencesToUsesLists
  fullName: PascalABCCompiler.Compiler.AddCurrentUnitAndItsReferencesToUsesLists
- uid: PascalABCCompiler.Compiler.SemanticCheckUsesInIsNotNamespace*
  commentId: Overload:PascalABCCompiler.Compiler.SemanticCheckUsesInIsNotNamespace
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_SemanticCheckUsesInIsNotNamespace_PascalABCCompiler_SyntaxTree_unit_or_namespace_PascalABCCompiler_CompilationUnit_
  name: SemanticCheckUsesInIsNotNamespace
  nameWithType: Compiler.SemanticCheckUsesInIsNotNamespace
  fullName: PascalABCCompiler.Compiler.SemanticCheckUsesInIsNotNamespace
- uid: PascalABCCompiler.Compiler.CompileCurrentUnitImplementation*
  commentId: Overload:PascalABCCompiler.Compiler.CompileCurrentUnitImplementation
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_CompileCurrentUnitImplementation_System_String_PascalABCCompiler_CompilationUnit_System_Collections_Generic_Dictionary_PascalABCCompiler_SyntaxTree_syntax_tree_node_System_String__
  name: CompileCurrentUnitImplementation
  nameWithType: Compiler.CompileCurrentUnitImplementation
  fullName: PascalABCCompiler.Compiler.CompileCurrentUnitImplementation
- uid: System.Collections.Generic.Dictionary{PascalABCCompiler.SyntaxTree.syntax_tree_node,System.String}
  commentId: T:System.Collections.Generic.Dictionary{PascalABCCompiler.SyntaxTree.syntax_tree_node,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<syntax_tree_node, string>
  nameWithType: Dictionary<syntax_tree_node, string>
  fullName: System.Collections.Generic.Dictionary<PascalABCCompiler.SyntaxTree.syntax_tree_node, string>
  nameWithType.vb: Dictionary(Of syntax_tree_node, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of PascalABCCompiler.SyntaxTree.syntax_tree_node, String)
  name.vb: Dictionary(Of syntax_tree_node, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: PascalABCCompiler.SyntaxTree.syntax_tree_node
    name: syntax_tree_node
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: PascalABCCompiler.SyntaxTree.syntax_tree_node
    name: syntax_tree_node
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: PascalABCCompiler.Compiler.CompileImplementationDependencies*
  commentId: Overload:PascalABCCompiler.Compiler.CompileImplementationDependencies
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_CompileImplementationDependencies_System_String_PascalABCCompiler_CompilationUnit_System_Collections_Generic_List_PascalABCCompiler_SyntaxTree_unit_or_namespace__System_Collections_Generic_Dictionary_System_String_PascalABCCompiler_SyntaxTree_syntax_namespace_node__PascalABCCompiler_TreeRealization_common_unit_node_System_Boolean__
  name: CompileImplementationDependencies
  nameWithType: Compiler.CompileImplementationDependencies
  fullName: PascalABCCompiler.Compiler.CompileImplementationDependencies
- uid: PascalABCCompiler.TreeRealization.common_unit_node
  commentId: T:PascalABCCompiler.TreeRealization.common_unit_node
  parent: PascalABCCompiler.TreeRealization
  isExternal: true
  name: common_unit_node
  nameWithType: common_unit_node
  fullName: PascalABCCompiler.TreeRealization.common_unit_node
- uid: PascalABCCompiler.Compiler.CompileCurrentUnitInterface*
  commentId: Overload:PascalABCCompiler.Compiler.CompileCurrentUnitInterface
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_CompileCurrentUnitInterface_System_String_PascalABCCompiler_CompilationUnit_System_Collections_Generic_Dictionary_PascalABCCompiler_SyntaxTree_syntax_tree_node_System_String__
  name: CompileCurrentUnitInterface
  nameWithType: Compiler.CompileCurrentUnitInterface
  fullName: PascalABCCompiler.Compiler.CompileCurrentUnitInterface
- uid: PascalABCCompiler.Errors.CycleUnitReference
  commentId: T:PascalABCCompiler.Errors.CycleUnitReference
  isExternal: true
  href: PascalABCCompiler.Errors.CycleUnitReference.html
  name: CycleUnitReference
  nameWithType: CycleUnitReference
  fullName: PascalABCCompiler.Errors.CycleUnitReference
- uid: PascalABCCompiler.Compiler.CompileInterfaceDependencies*
  commentId: Overload:PascalABCCompiler.Compiler.CompileInterfaceDependencies
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_CompileInterfaceDependencies_PascalABCCompiler_TreeRealization_unit_node_list_System_Collections_Generic_Dictionary_PascalABCCompiler_TreeRealization_unit_node_PascalABCCompiler_CompilationUnit__PascalABCCompiler_SyntaxTree_unit_or_namespace_System_String_System_String_PascalABCCompiler_CompilationUnit_System_Collections_Generic_List_PascalABCCompiler_SyntaxTree_unit_or_namespace__PascalABCCompiler_TreeRealization_unit_node_list_System_Collections_Generic_Dictionary_System_String_PascalABCCompiler_SyntaxTree_syntax_namespace_node__System_Boolean__
  name: CompileInterfaceDependencies
  nameWithType: Compiler.CompileInterfaceDependencies
  fullName: PascalABCCompiler.Compiler.CompileInterfaceDependencies
- uid: PascalABCCompiler.Compiler.SemanticCheckNoLoopDependenciesOfInterfaces*
  commentId: Overload:PascalABCCompiler.Compiler.SemanticCheckNoLoopDependenciesOfInterfaces
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_SemanticCheckNoLoopDependenciesOfInterfaces_PascalABCCompiler_CompilationUnit_System_String_PascalABCCompiler_SyntaxTree_unit_or_namespace_System_String_
  name: SemanticCheckNoLoopDependenciesOfInterfaces
  nameWithType: Compiler.SemanticCheckNoLoopDependenciesOfInterfaces
  fullName: PascalABCCompiler.Compiler.SemanticCheckNoLoopDependenciesOfInterfaces
- uid: PascalABCCompiler.Compiler.SetUseDLLForSystemUnits*
  commentId: Overload:PascalABCCompiler.Compiler.SetUseDLLForSystemUnits
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_SetUseDLLForSystemUnits_System_String_System_Collections_Generic_List_PascalABCCompiler_SyntaxTree_unit_or_namespace__System_Int32_
  name: SetUseDLLForSystemUnits
  nameWithType: Compiler.SetUseDLLForSystemUnits
  fullName: PascalABCCompiler.Compiler.SetUseDLLForSystemUnits
- uid: PascalABCCompiler.Compiler.InitializeNewUnit*
  commentId: Overload:PascalABCCompiler.Compiler.InitializeNewUnit
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_InitializeNewUnit_System_String_System_String_PascalABCCompiler_CompilationUnit__System_Collections_Generic_Dictionary_PascalABCCompiler_SyntaxTree_syntax_tree_node_System_String___
  name: InitializeNewUnit
  nameWithType: Compiler.InitializeNewUnit
  fullName: PascalABCCompiler.Compiler.InitializeNewUnit
- uid: PascalABCCompiler.Compiler.ConstructSyntaxTreeAndRunSugarConversions*
  commentId: Overload:PascalABCCompiler.Compiler.ConstructSyntaxTreeAndRunSugarConversions
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_ConstructSyntaxTreeAndRunSugarConversions_System_String_PascalABCCompiler_CompilationUnit_System_Collections_Generic_Dictionary_PascalABCCompiler_SyntaxTree_syntax_tree_node_System_String___
  name: ConstructSyntaxTreeAndRunSugarConversions
  nameWithType: Compiler.ConstructSyntaxTreeAndRunSugarConversions
  fullName: PascalABCCompiler.Compiler.ConstructSyntaxTreeAndRunSugarConversions
- uid: PascalABCCompiler.Compiler.InitializeCompilerOptionsRelatedToStandardUnits*
  commentId: Overload:PascalABCCompiler.Compiler.InitializeCompilerOptionsRelatedToStandardUnits
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_InitializeCompilerOptionsRelatedToStandardUnits_PascalABCCompiler_SyntaxTree_compilation_unit_
  name: InitializeCompilerOptionsRelatedToStandardUnits
  nameWithType: Compiler.InitializeCompilerOptionsRelatedToStandardUnits
  fullName: PascalABCCompiler.Compiler.InitializeCompilerOptionsRelatedToStandardUnits
- uid: PascalABCCompiler.Compiler.RunSemanticChecks*
  commentId: Overload:PascalABCCompiler.Compiler.RunSemanticChecks
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_RunSemanticChecks_System_String_PascalABCCompiler_CompilationUnit_
  name: RunSemanticChecks
  nameWithType: Compiler.RunSemanticChecks
  fullName: PascalABCCompiler.Compiler.RunSemanticChecks
- uid: PascalABCCompiler.Compiler.ConvertSyntaxTree*
  commentId: Overload:PascalABCCompiler.Compiler.ConvertSyntaxTree
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_ConvertSyntaxTree_PascalABCCompiler_SyntaxTree_compilation_unit_System_Collections_Generic_List_PascalABCCompiler_SyntaxTreeConverters_ISyntaxTreeConverter__
  name: ConvertSyntaxTree
  nameWithType: Compiler.ConvertSyntaxTree
  fullName: PascalABCCompiler.Compiler.ConvertSyntaxTree
- uid: System.Collections.Generic.List{PascalABCCompiler.SyntaxTreeConverters.ISyntaxTreeConverter}
  commentId: T:System.Collections.Generic.List{PascalABCCompiler.SyntaxTreeConverters.ISyntaxTreeConverter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<ISyntaxTreeConverter>
  nameWithType: List<ISyntaxTreeConverter>
  fullName: System.Collections.Generic.List<PascalABCCompiler.SyntaxTreeConverters.ISyntaxTreeConverter>
  nameWithType.vb: List(Of ISyntaxTreeConverter)
  fullName.vb: System.Collections.Generic.List(Of PascalABCCompiler.SyntaxTreeConverters.ISyntaxTreeConverter)
  name.vb: List(Of ISyntaxTreeConverter)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: PascalABCCompiler.SyntaxTreeConverters.ISyntaxTreeConverter
    name: ISyntaxTreeConverter
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: PascalABCCompiler.SyntaxTreeConverters.ISyntaxTreeConverter
    name: ISyntaxTreeConverter
    isExternal: true
  - name: )
- uid: PascalABCCompiler.Compiler.SemanticCheckNamespacesOnlyInProjects*
  commentId: Overload:PascalABCCompiler.Compiler.SemanticCheckNamespacesOnlyInProjects
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_SemanticCheckNamespacesOnlyInProjects_PascalABCCompiler_CompilationUnit_
  name: SemanticCheckNamespacesOnlyInProjects
  nameWithType: Compiler.SemanticCheckNamespacesOnlyInProjects
  fullName: PascalABCCompiler.Compiler.SemanticCheckNamespacesOnlyInProjects
- uid: PascalABCCompiler.Compiler.SemanticCheckCurrentUnitMustBeUnitModule*
  commentId: Overload:PascalABCCompiler.Compiler.SemanticCheckCurrentUnitMustBeUnitModule
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_SemanticCheckCurrentUnitMustBeUnitModule_System_String_PascalABCCompiler_CompilationUnit_System_Boolean_
  name: SemanticCheckCurrentUnitMustBeUnitModule
  nameWithType: Compiler.SemanticCheckCurrentUnitMustBeUnitModule
  fullName: PascalABCCompiler.Compiler.SemanticCheckCurrentUnitMustBeUnitModule
- uid: PascalABCCompiler.Compiler.MatchSyntaxErrorsToBadNodes*
  commentId: Overload:PascalABCCompiler.Compiler.MatchSyntaxErrorsToBadNodes
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_MatchSyntaxErrorsToBadNodes_PascalABCCompiler_CompilationUnit_
  name: MatchSyntaxErrorsToBadNodes
  nameWithType: Compiler.MatchSyntaxErrorsToBadNodes
  fullName: PascalABCCompiler.Compiler.MatchSyntaxErrorsToBadNodes
- uid: PascalABCCompiler.Compiler.SemanticCheckDLLDirectiveOnlyForLibraries*
  commentId: Overload:PascalABCCompiler.Compiler.SemanticCheckDLLDirectiveOnlyForLibraries
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_SemanticCheckDLLDirectiveOnlyForLibraries_PascalABCCompiler_SyntaxTree_compilation_unit_System_Boolean_PascalABCCompiler_SyntaxTree_compiler_directive_
  name: SemanticCheckDLLDirectiveOnlyForLibraries
  nameWithType: Compiler.SemanticCheckDLLDirectiveOnlyForLibraries
  fullName: PascalABCCompiler.Compiler.SemanticCheckDLLDirectiveOnlyForLibraries
- uid: PascalABCCompiler.Compiler.SemanticCheckDisableStandardUnitsDirectiveInUnit*
  commentId: Overload:PascalABCCompiler.Compiler.SemanticCheckDisableStandardUnitsDirectiveInUnit
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_SemanticCheckDisableStandardUnitsDirectiveInUnit_PascalABCCompiler_SyntaxTree_compilation_unit_
  name: SemanticCheckDisableStandardUnitsDirectiveInUnit
  nameWithType: Compiler.SemanticCheckDisableStandardUnitsDirectiveInUnit
  fullName: PascalABCCompiler.Compiler.SemanticCheckDisableStandardUnitsDirectiveInUnit
- uid: PascalABCCompiler.Compiler.ConstructSyntaxTree*
  commentId: Overload:PascalABCCompiler.Compiler.ConstructSyntaxTree
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_ConstructSyntaxTree_System_String_PascalABCCompiler_CompilationUnit_System_String_
  name: ConstructSyntaxTree
  nameWithType: Compiler.ConstructSyntaxTree
  fullName: PascalABCCompiler.Compiler.ConstructSyntaxTree
- uid: PascalABCCompiler.Compiler.GetSourceCode*
  commentId: Overload:PascalABCCompiler.Compiler.GetSourceCode
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_GetSourceCode_System_String_PascalABCCompiler_CompilationUnit_
  name: GetSourceCode
  nameWithType: Compiler.GetSourceCode
  fullName: PascalABCCompiler.Compiler.GetSourceCode
- uid: PascalABCCompiler.Compiler.CurrentUnitIsNotMainProgram*
  commentId: Overload:PascalABCCompiler.Compiler.CurrentUnitIsNotMainProgram
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_CurrentUnitIsNotMainProgram
  name: CurrentUnitIsNotMainProgram
  nameWithType: Compiler.CurrentUnitIsNotMainProgram
  fullName: PascalABCCompiler.Compiler.CurrentUnitIsNotMainProgram
- uid: PascalABCCompiler.Compiler.GenUnitDocumentation*
  commentId: Overload:PascalABCCompiler.Compiler.GenUnitDocumentation
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_GenUnitDocumentation_PascalABCCompiler_CompilationUnit_System_String_
  name: GenUnitDocumentation
  nameWithType: Compiler.GenUnitDocumentation
  fullName: PascalABCCompiler.Compiler.GenUnitDocumentation
- uid: PascalABCCompiler.Compiler.UnitHasPCU*
  commentId: Overload:PascalABCCompiler.Compiler.UnitHasPCU
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_UnitHasPCU_PascalABCCompiler_TreeRealization_unit_node_list_System_Collections_Generic_Dictionary_PascalABCCompiler_TreeRealization_unit_node_PascalABCCompiler_CompilationUnit__PascalABCCompiler_SyntaxTree_unit_or_namespace_System_String__PascalABCCompiler_CompilationUnit__
  name: UnitHasPCU
  nameWithType: Compiler.UnitHasPCU
  fullName: PascalABCCompiler.Compiler.UnitHasPCU
- uid: PascalABCCompiler.Compiler.AddDocumentationToNodes*
  commentId: Overload:PascalABCCompiler.Compiler.AddDocumentationToNodes
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_AddDocumentationToNodes_PascalABCCompiler_CompilationUnit_System_String_
  name: AddDocumentationToNodes
  nameWithType: Compiler.AddDocumentationToNodes
  fullName: PascalABCCompiler.Compiler.AddDocumentationToNodes
- uid: PascalABCCompiler.Compiler.IsDocumentationNeeded*
  commentId: Overload:PascalABCCompiler.Compiler.IsDocumentationNeeded
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_IsDocumentationNeeded_PascalABCCompiler_SyntaxTree_compilation_unit_
  name: IsDocumentationNeeded
  nameWithType: Compiler.IsDocumentationNeeded
  fullName: PascalABCCompiler.Compiler.IsDocumentationNeeded
- uid: PascalABCCompiler.Compiler.buildImplementationUsesList*
  commentId: Overload:PascalABCCompiler.Compiler.buildImplementationUsesList
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_buildImplementationUsesList_PascalABCCompiler_CompilationUnit_
  name: buildImplementationUsesList
  nameWithType: Compiler.buildImplementationUsesList
  fullName: PascalABCCompiler.Compiler.buildImplementationUsesList
- uid: PascalABCCompiler.Compiler.SavePCU*
  commentId: Overload:PascalABCCompiler.Compiler.SavePCU
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_SavePCU_PascalABCCompiler_CompilationUnit_
  name: SavePCU
  nameWithType: Compiler.SavePCU
  fullName: PascalABCCompiler.Compiler.SavePCU
- uid: PascalABCCompiler.Compiler.ReadPCU*
  commentId: Overload:PascalABCCompiler.Compiler.ReadPCU
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_ReadPCU_System_String_
  name: ReadPCU
  nameWithType: Compiler.ReadPCU
  fullName: PascalABCCompiler.Compiler.ReadPCU
- uid: PascalABCCompiler.Compiler.pr_ChangeState*
  commentId: Overload:PascalABCCompiler.Compiler.pr_ChangeState
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_pr_ChangeState_System_Object_PascalABCCompiler_PCU_PCUReaderWriterState_System_Object_
  name: pr_ChangeState
  nameWithType: Compiler.pr_ChangeState
  fullName: PascalABCCompiler.Compiler.pr_ChangeState
- uid: PascalABCCompiler.PCU.PCUReaderWriterState
  commentId: T:PascalABCCompiler.PCU.PCUReaderWriterState
  parent: PascalABCCompiler.PCU
  isExternal: true
  href: PascalABCCompiler.PCU.PCUReaderWriterState.html
  name: PCUReaderWriterState
  nameWithType: PCUReaderWriterState
  fullName: PascalABCCompiler.PCU.PCUReaderWriterState
- uid: PascalABCCompiler.PCU
  commentId: N:PascalABCCompiler.PCU
  isExternal: true
  href: PascalABCCompiler.html
  name: PascalABCCompiler.PCU
  nameWithType: PascalABCCompiler.PCU
  fullName: PascalABCCompiler.PCU
  spec.csharp:
  - uid: PascalABCCompiler
    name: PascalABCCompiler
    isExternal: true
    href: PascalABCCompiler.html
  - name: .
  - uid: PascalABCCompiler.PCU
    name: PCU
    isExternal: true
    href: PascalABCCompiler.PCU.html
  spec.vb:
  - uid: PascalABCCompiler
    name: PascalABCCompiler
    isExternal: true
    href: PascalABCCompiler.html
  - name: .
  - uid: PascalABCCompiler.PCU
    name: PCU
    isExternal: true
    href: PascalABCCompiler.PCU.html
- uid: PascalABCCompiler.Compiler.get_standart_assembly_path*
  commentId: Overload:PascalABCCompiler.Compiler.get_standart_assembly_path
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_get_standart_assembly_path_System_String_
  name: get_standart_assembly_path
  nameWithType: Compiler.get_standart_assembly_path
  fullName: PascalABCCompiler.Compiler.get_standart_assembly_path
- uid: PascalABCCompiler.Compiler.get_assembly_path*
  commentId: Overload:PascalABCCompiler.Compiler.get_assembly_path
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_get_assembly_path_System_String_System_Boolean_
  name: get_assembly_path
  nameWithType: Compiler.get_assembly_path
  fullName: PascalABCCompiler.Compiler.get_assembly_path
- uid: PascalABCCompiler.Compiler.ReadDLL*
  commentId: Overload:PascalABCCompiler.Compiler.ReadDLL
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_ReadDLL_System_String_PascalABCCompiler_SyntaxTree_SourceContext_
  name: ReadDLL
  nameWithType: Compiler.ReadDLL
  fullName: PascalABCCompiler.Compiler.ReadDLL
- uid: PascalABCCompiler.Compiler.NeedRecompiled*
  commentId: Overload:PascalABCCompiler.Compiler.NeedRecompiled
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_NeedRecompiled_System_String_System_String___PascalABCCompiler_PCU_PCUReader_
  name: NeedRecompiled
  nameWithType: Compiler.NeedRecompiled
  fullName: PascalABCCompiler.Compiler.NeedRecompiled
- uid: PascalABCCompiler.PCU.PCUReader
  commentId: T:PascalABCCompiler.PCU.PCUReader
  parent: PascalABCCompiler.PCU
  isExternal: true
  href: PascalABCCompiler.PCU.PCUReader.html
  name: PCUReader
  nameWithType: PCUReader
  fullName: PascalABCCompiler.PCU.PCUReader
- uid: PascalABCCompiler.Compiler.ClearAll*
  commentId: Overload:PascalABCCompiler.Compiler.ClearAll
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_ClearAll_System_Boolean_
  name: ClearAll
  nameWithType: Compiler.ClearAll
  fullName: PascalABCCompiler.Compiler.ClearAll
- uid: PascalABCCompiler.Compiler.Free*
  commentId: Overload:PascalABCCompiler.Compiler.Free
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_Free
  name: Free
  nameWithType: Compiler.Free
  fullName: PascalABCCompiler.Compiler.Free
- uid: PascalABCCompiler.ICompiler.Free
  commentId: M:PascalABCCompiler.ICompiler.Free
  parent: PascalABCCompiler.ICompiler
  isExternal: true
  href: PascalABCCompiler.ICompiler.html#PascalABCCompiler_ICompiler_Free
  name: Free()
  nameWithType: ICompiler.Free()
  fullName: PascalABCCompiler.ICompiler.Free()
  spec.csharp:
  - uid: PascalABCCompiler.ICompiler.Free
    name: Free
    isExternal: true
    href: PascalABCCompiler.ICompiler.html#PascalABCCompiler_ICompiler_Free
  - name: (
  - name: )
  spec.vb:
  - uid: PascalABCCompiler.ICompiler.Free
    name: Free
    isExternal: true
    href: PascalABCCompiler.ICompiler.html#PascalABCCompiler_ICompiler_Free
  - name: (
  - name: )
- uid: PascalABCCompiler.Compiler.PABCCodeHealth*
  commentId: Overload:PascalABCCompiler.Compiler.PABCCodeHealth
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_PABCCodeHealth
  name: PABCCodeHealth
  nameWithType: Compiler.PABCCodeHealth
  fullName: PascalABCCompiler.Compiler.PABCCodeHealth
- uid: PascalABCCompiler.ICompiler.PABCCodeHealth
  commentId: P:PascalABCCompiler.ICompiler.PABCCodeHealth
  parent: PascalABCCompiler.ICompiler
  isExternal: true
  href: PascalABCCompiler.ICompiler.html#PascalABCCompiler_ICompiler_PABCCodeHealth
  name: PABCCodeHealth
  nameWithType: ICompiler.PABCCodeHealth
  fullName: PascalABCCompiler.ICompiler.PABCCodeHealth
- uid: PascalABCCompiler.Compiler.Version*
  commentId: Overload:PascalABCCompiler.Compiler.Version
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_Version
  name: Version
  nameWithType: Compiler.Version
  fullName: PascalABCCompiler.Compiler.Version
- uid: PascalABCCompiler.Compiler.ShortVersion*
  commentId: Overload:PascalABCCompiler.Compiler.ShortVersion
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_ShortVersion
  name: ShortVersion
  nameWithType: Compiler.ShortVersion
  fullName: PascalABCCompiler.Compiler.ShortVersion
- uid: PascalABCCompiler.Compiler.VersionDateTime*
  commentId: Overload:PascalABCCompiler.Compiler.VersionDateTime
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_VersionDateTime
  name: VersionDateTime
  nameWithType: Compiler.VersionDateTime
  fullName: PascalABCCompiler.Compiler.VersionDateTime
- uid: PascalABCCompiler.Compiler.Banner*
  commentId: Overload:PascalABCCompiler.Compiler.Banner
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_Banner
  name: Banner
  nameWithType: Compiler.Banner
  fullName: PascalABCCompiler.Compiler.Banner
- uid: PascalABCCompiler.Compiler.SemanticTreeConvertersController*
  commentId: Overload:PascalABCCompiler.Compiler.SemanticTreeConvertersController
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_SemanticTreeConvertersController
  name: SemanticTreeConvertersController
  nameWithType: Compiler.SemanticTreeConvertersController
  fullName: PascalABCCompiler.Compiler.SemanticTreeConvertersController
- uid: PascalABCCompiler.ICompiler.SemanticTreeConvertersController
  commentId: P:PascalABCCompiler.ICompiler.SemanticTreeConvertersController
  parent: PascalABCCompiler.ICompiler
  isExternal: true
  href: PascalABCCompiler.ICompiler.html#PascalABCCompiler_ICompiler_SemanticTreeConvertersController
  name: SemanticTreeConvertersController
  nameWithType: ICompiler.SemanticTreeConvertersController
  fullName: PascalABCCompiler.ICompiler.SemanticTreeConvertersController
- uid: PascalABCCompiler.Compiler.SemanticTree*
  commentId: Overload:PascalABCCompiler.Compiler.SemanticTree
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_SemanticTree
  name: SemanticTree
  nameWithType: Compiler.SemanticTree
  fullName: PascalABCCompiler.Compiler.SemanticTree
- uid: PascalABCCompiler.ICompiler.SemanticTree
  commentId: P:PascalABCCompiler.ICompiler.SemanticTree
  parent: PascalABCCompiler.ICompiler
  isExternal: true
  href: PascalABCCompiler.ICompiler.html#PascalABCCompiler_ICompiler_SemanticTree
  name: SemanticTree
  nameWithType: ICompiler.SemanticTree
  fullName: PascalABCCompiler.ICompiler.SemanticTree
- uid: PascalABCCompiler.SemanticTree.IProgramNode
  commentId: T:PascalABCCompiler.SemanticTree.IProgramNode
  parent: PascalABCCompiler.SemanticTree
  isExternal: true
  name: IProgramNode
  nameWithType: IProgramNode
  fullName: PascalABCCompiler.SemanticTree.IProgramNode
- uid: PascalABCCompiler.SemanticTree
  commentId: N:PascalABCCompiler.SemanticTree
  isExternal: true
  name: PascalABCCompiler.SemanticTree
  nameWithType: PascalABCCompiler.SemanticTree
  fullName: PascalABCCompiler.SemanticTree
  spec.csharp:
  - uid: PascalABCCompiler
    name: PascalABCCompiler
    isExternal: true
  - name: .
  - uid: PascalABCCompiler.SemanticTree
    name: SemanticTree
    isExternal: true
  spec.vb:
  - uid: PascalABCCompiler
    name: PascalABCCompiler
    isExternal: true
  - name: .
  - uid: PascalABCCompiler.SemanticTree
    name: SemanticTree
    isExternal: true
- uid: PascalABCCompiler.Compiler.LinesCompiled*
  commentId: Overload:PascalABCCompiler.Compiler.LinesCompiled
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_LinesCompiled
  name: LinesCompiled
  nameWithType: Compiler.LinesCompiled
  fullName: PascalABCCompiler.Compiler.LinesCompiled
- uid: PascalABCCompiler.ICompiler.LinesCompiled
  commentId: P:PascalABCCompiler.ICompiler.LinesCompiled
  parent: PascalABCCompiler.ICompiler
  isExternal: true
  href: PascalABCCompiler.ICompiler.html#PascalABCCompiler_ICompiler_LinesCompiled
  name: LinesCompiled
  nameWithType: ICompiler.LinesCompiled
  fullName: PascalABCCompiler.ICompiler.LinesCompiled
- uid: PascalABCCompiler.Compiler.InternalDebug*
  commentId: Overload:PascalABCCompiler.Compiler.InternalDebug
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_InternalDebug
  name: InternalDebug
  nameWithType: Compiler.InternalDebug
  fullName: PascalABCCompiler.Compiler.InternalDebug
- uid: PascalABCCompiler.ICompiler.InternalDebug
  commentId: P:PascalABCCompiler.ICompiler.InternalDebug
  parent: PascalABCCompiler.ICompiler
  isExternal: true
  href: PascalABCCompiler.ICompiler.html#PascalABCCompiler_ICompiler_InternalDebug
  name: InternalDebug
  nameWithType: ICompiler.InternalDebug
  fullName: PascalABCCompiler.ICompiler.InternalDebug
- uid: PascalABCCompiler.Compiler.State*
  commentId: Overload:PascalABCCompiler.Compiler.State
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_State
  name: State
  nameWithType: Compiler.State
  fullName: PascalABCCompiler.Compiler.State
- uid: PascalABCCompiler.ICompiler.State
  commentId: P:PascalABCCompiler.ICompiler.State
  parent: PascalABCCompiler.ICompiler
  isExternal: true
  href: PascalABCCompiler.ICompiler.html#PascalABCCompiler_ICompiler_State
  name: State
  nameWithType: ICompiler.State
  fullName: PascalABCCompiler.ICompiler.State
- uid: PascalABCCompiler.Compiler.SupportedSourceFiles*
  commentId: Overload:PascalABCCompiler.Compiler.SupportedSourceFiles
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_SupportedSourceFiles
  name: SupportedSourceFiles
  nameWithType: Compiler.SupportedSourceFiles
  fullName: PascalABCCompiler.Compiler.SupportedSourceFiles
- uid: PascalABCCompiler.ICompiler.SupportedSourceFiles
  commentId: P:PascalABCCompiler.ICompiler.SupportedSourceFiles
  parent: PascalABCCompiler.ICompiler
  isExternal: true
  href: PascalABCCompiler.ICompiler.html#PascalABCCompiler_ICompiler_SupportedSourceFiles
  name: SupportedSourceFiles
  nameWithType: ICompiler.SupportedSourceFiles
  fullName: PascalABCCompiler.ICompiler.SupportedSourceFiles
- uid: PascalABCCompiler.Compiler.SupportedProjectFiles*
  commentId: Overload:PascalABCCompiler.Compiler.SupportedProjectFiles
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_SupportedProjectFiles
  name: SupportedProjectFiles
  nameWithType: Compiler.SupportedProjectFiles
  fullName: PascalABCCompiler.Compiler.SupportedProjectFiles
- uid: PascalABCCompiler.ICompiler.SupportedProjectFiles
  commentId: P:PascalABCCompiler.ICompiler.SupportedProjectFiles
  parent: PascalABCCompiler.ICompiler
  isExternal: true
  href: PascalABCCompiler.ICompiler.html#PascalABCCompiler_ICompiler_SupportedProjectFiles
  name: SupportedProjectFiles
  nameWithType: ICompiler.SupportedProjectFiles
  fullName: PascalABCCompiler.ICompiler.SupportedProjectFiles
- uid: PascalABCCompiler.Compiler.UnitTable*
  commentId: Overload:PascalABCCompiler.Compiler.UnitTable
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_UnitTable
  name: UnitTable
  nameWithType: Compiler.UnitTable
  fullName: PascalABCCompiler.Compiler.UnitTable
- uid: PascalABCCompiler.ICompiler.UnitTable
  commentId: P:PascalABCCompiler.ICompiler.UnitTable
  parent: PascalABCCompiler.ICompiler
  isExternal: true
  href: PascalABCCompiler.ICompiler.html#PascalABCCompiler_ICompiler_UnitTable
  name: UnitTable
  nameWithType: ICompiler.UnitTable
  fullName: PascalABCCompiler.ICompiler.UnitTable
- uid: PascalABCCompiler.Compiler.CompilerOptions*
  commentId: Overload:PascalABCCompiler.Compiler.CompilerOptions
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_CompilerOptions
  name: CompilerOptions
  nameWithType: Compiler.CompilerOptions
  fullName: PascalABCCompiler.Compiler.CompilerOptions
- uid: PascalABCCompiler.ICompiler.CompilerOptions
  commentId: P:PascalABCCompiler.ICompiler.CompilerOptions
  parent: PascalABCCompiler.ICompiler
  isExternal: true
  href: PascalABCCompiler.ICompiler.html#PascalABCCompiler_ICompiler_CompilerOptions
  name: CompilerOptions
  nameWithType: ICompiler.CompilerOptions
  fullName: PascalABCCompiler.ICompiler.CompilerOptions
- uid: PascalABCCompiler.Compiler.LanguageProvider*
  commentId: Overload:PascalABCCompiler.Compiler.LanguageProvider
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_LanguageProvider
  name: LanguageProvider
  nameWithType: Compiler.LanguageProvider
  fullName: PascalABCCompiler.Compiler.LanguageProvider
- uid: Languages.Facade.LanguageProvider
  commentId: T:Languages.Facade.LanguageProvider
  parent: Languages.Facade
  isExternal: true
  name: LanguageProvider
  nameWithType: LanguageProvider
  fullName: Languages.Facade.LanguageProvider
- uid: PascalABCCompiler.Compiler.ClearAfterCompilation*
  commentId: Overload:PascalABCCompiler.Compiler.ClearAfterCompilation
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_ClearAfterCompilation
  name: ClearAfterCompilation
  nameWithType: Compiler.ClearAfterCompilation
  fullName: PascalABCCompiler.Compiler.ClearAfterCompilation
- uid: PascalABCCompiler.Compiler.BeginOffset*
  commentId: Overload:PascalABCCompiler.Compiler.BeginOffset
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_BeginOffset
  name: BeginOffset
  nameWithType: Compiler.BeginOffset
  fullName: PascalABCCompiler.Compiler.BeginOffset
- uid: PascalABCCompiler.ICompiler.BeginOffset
  commentId: P:PascalABCCompiler.ICompiler.BeginOffset
  parent: PascalABCCompiler.ICompiler
  isExternal: true
  href: PascalABCCompiler.ICompiler.html#PascalABCCompiler_ICompiler_BeginOffset
  name: BeginOffset
  nameWithType: ICompiler.BeginOffset
  fullName: PascalABCCompiler.ICompiler.BeginOffset
- uid: PascalABCCompiler.Compiler.VarBeginOffset*
  commentId: Overload:PascalABCCompiler.Compiler.VarBeginOffset
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_VarBeginOffset
  name: VarBeginOffset
  nameWithType: Compiler.VarBeginOffset
  fullName: PascalABCCompiler.Compiler.VarBeginOffset
- uid: PascalABCCompiler.ICompiler.VarBeginOffset
  commentId: P:PascalABCCompiler.ICompiler.VarBeginOffset
  parent: PascalABCCompiler.ICompiler
  isExternal: true
  href: PascalABCCompiler.ICompiler.html#PascalABCCompiler_ICompiler_VarBeginOffset
  name: VarBeginOffset
  nameWithType: ICompiler.VarBeginOffset
  fullName: PascalABCCompiler.ICompiler.VarBeginOffset
- uid: PascalABCCompiler.Compiler.Warnings*
  commentId: Overload:PascalABCCompiler.Compiler.Warnings
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_Warnings
  name: Warnings
  nameWithType: Compiler.Warnings
  fullName: PascalABCCompiler.Compiler.Warnings
- uid: PascalABCCompiler.ICompiler.Warnings
  commentId: P:PascalABCCompiler.ICompiler.Warnings
  parent: PascalABCCompiler.ICompiler
  isExternal: true
  href: PascalABCCompiler.ICompiler.html#PascalABCCompiler_ICompiler_Warnings
  name: Warnings
  nameWithType: ICompiler.Warnings
  fullName: PascalABCCompiler.ICompiler.Warnings
- uid: PascalABCCompiler.Compiler.SourceFileNamesDictionary*
  commentId: Overload:PascalABCCompiler.Compiler.SourceFileNamesDictionary
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_SourceFileNamesDictionary
  name: SourceFileNamesDictionary
  nameWithType: Compiler.SourceFileNamesDictionary
  fullName: PascalABCCompiler.Compiler.SourceFileNamesDictionary
- uid: System.Collections.Generic.Dictionary{System.Tuple{System.String,System.String},System.Tuple{System.String,System.Int32}}
  commentId: T:System.Collections.Generic.Dictionary{System.Tuple{System.String,System.String},System.Tuple{System.String,System.Int32}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<Tuple<string, string>, Tuple<string, int>>
  nameWithType: Dictionary<Tuple<string, string>, Tuple<string, int>>
  fullName: System.Collections.Generic.Dictionary<System.Tuple<string, string>, System.Tuple<string, int>>
  nameWithType.vb: Dictionary(Of Tuple(Of String, String), Tuple(Of String, Integer))
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Tuple(Of String, String), System.Tuple(Of String, Integer))
  name.vb: Dictionary(Of Tuple(Of String, String), Tuple(Of String, Integer))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.Tuple`2
    name: Tuple
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.tuple-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Tuple`2
    name: Tuple
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.tuple-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Tuple`2
    name: Tuple
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.tuple-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Tuple`2
    name: Tuple
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.tuple-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: )
- uid: PascalABCCompiler.Compiler.PCUFileNamesDictionary*
  commentId: Overload:PascalABCCompiler.Compiler.PCUFileNamesDictionary
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_PCUFileNamesDictionary
  name: PCUFileNamesDictionary
  nameWithType: Compiler.PCUFileNamesDictionary
  fullName: PascalABCCompiler.Compiler.PCUFileNamesDictionary
- uid: PascalABCCompiler.Compiler.GetUnitFileNameCache*
  commentId: Overload:PascalABCCompiler.Compiler.GetUnitFileNameCache
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_GetUnitFileNameCache
  name: GetUnitFileNameCache
  nameWithType: Compiler.GetUnitFileNameCache
  fullName: PascalABCCompiler.Compiler.GetUnitFileNameCache
- uid: System.Collections.Generic.Dictionary{System.Tuple{System.String,System.String},System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.Tuple{System.String,System.String},System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<Tuple<string, string>, string>
  nameWithType: Dictionary<Tuple<string, string>, string>
  fullName: System.Collections.Generic.Dictionary<System.Tuple<string, string>, string>
  nameWithType.vb: Dictionary(Of Tuple(Of String, String), String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Tuple(Of String, String), String)
  name.vb: Dictionary(Of Tuple(Of String, String), String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.Tuple`2
    name: Tuple
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.tuple-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Tuple`2
    name: Tuple
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.tuple-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: PascalABCCompiler.Compiler.SourceFilesProvider*
  commentId: Overload:PascalABCCompiler.Compiler.SourceFilesProvider
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_SourceFilesProvider
  name: SourceFilesProvider
  nameWithType: Compiler.SourceFilesProvider
  fullName: PascalABCCompiler.Compiler.SourceFilesProvider
- uid: PascalABCCompiler.ICompiler.SourceFilesProvider
  commentId: P:PascalABCCompiler.ICompiler.SourceFilesProvider
  parent: PascalABCCompiler.ICompiler
  isExternal: true
  href: PascalABCCompiler.ICompiler.html#PascalABCCompiler_ICompiler_SourceFilesProvider
  name: SourceFilesProvider
  nameWithType: ICompiler.SourceFilesProvider
  fullName: PascalABCCompiler.ICompiler.SourceFilesProvider
- uid: PascalABCCompiler.Compiler.ErrorsList*
  commentId: Overload:PascalABCCompiler.Compiler.ErrorsList
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_ErrorsList
  name: ErrorsList
  nameWithType: Compiler.ErrorsList
  fullName: PascalABCCompiler.Compiler.ErrorsList
- uid: PascalABCCompiler.ICompiler.ErrorsList
  commentId: P:PascalABCCompiler.ICompiler.ErrorsList
  parent: PascalABCCompiler.ICompiler
  isExternal: true
  href: PascalABCCompiler.ICompiler.html#PascalABCCompiler_ICompiler_ErrorsList
  name: ErrorsList
  nameWithType: ICompiler.ErrorsList
  fullName: PascalABCCompiler.ICompiler.ErrorsList
- uid: PascalABCCompiler.Compiler.CompilerType*
  commentId: Overload:PascalABCCompiler.Compiler.CompilerType
  isExternal: true
  href: PascalABCCompiler.Compiler.html#PascalABCCompiler_Compiler_CompilerType
  name: CompilerType
  nameWithType: Compiler.CompilerType
  fullName: PascalABCCompiler.Compiler.CompilerType
- uid: PascalABCCompiler.ICompiler.CompilerType
  commentId: P:PascalABCCompiler.ICompiler.CompilerType
  parent: PascalABCCompiler.ICompiler
  isExternal: true
  href: PascalABCCompiler.ICompiler.html#PascalABCCompiler_ICompiler_CompilerType
  name: CompilerType
  nameWithType: ICompiler.CompilerType
  fullName: PascalABCCompiler.ICompiler.CompilerType
- uid: PascalABCCompiler.CompilerType
  commentId: T:PascalABCCompiler.CompilerType
  parent: PascalABCCompiler
  isExternal: true
  href: PascalABCCompiler.CompilerType.html
  name: CompilerType
  nameWithType: CompilerType
  fullName: PascalABCCompiler.CompilerType
- uid: PascalABCCompiler.ICompiler.OnChangeCompilerState
  commentId: E:PascalABCCompiler.ICompiler.OnChangeCompilerState
  parent: PascalABCCompiler.ICompiler
  isExternal: true
  href: PascalABCCompiler.ICompiler.html#PascalABCCompiler_ICompiler_OnChangeCompilerState
  name: OnChangeCompilerState
  nameWithType: ICompiler.OnChangeCompilerState
  fullName: PascalABCCompiler.ICompiler.OnChangeCompilerState
